{"version":3,"file":"index.js","names":["PLYLoader","PLYWorkerLoader","parsePLY","parsePLYInBatches","parse","arrayBuffer","options","ply","parseTextSync","parseSync","parseInBatches"],"sources":["../../src/index.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {LoaderOptions, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {PLYMesh} from './lib/ply-types';\nimport {PLYLoader as PLYWorkerLoader} from './ply-loader';\nimport {ParsePLYOptions, parsePLY} from './lib/parse-ply';\nimport {parsePLYInBatches} from './lib/parse-ply-in-batches';\n\n// PLYLoader\n\nexport {PLYWorkerLoader};\n\nexport type PLYLoaderOptions = LoaderOptions & {\n  ply?: ParsePLYOptions;\n};\n\n/**\n * Loader for PLY - Polygon File Format\n */\nexport const PLYLoader: LoaderWithParser<PLYMesh, any, PLYLoaderOptions> = {\n  ...PLYWorkerLoader,\n  // Note: parsePLY supports both text and binary\n  parse: async (arrayBuffer, options) => parsePLY(arrayBuffer, options?.ply), // TODO - this may not detect text correctly?\n  parseTextSync: (arrayBuffer, options) => parsePLY(arrayBuffer, options?.ply),\n  parseSync: (arrayBuffer, options) => parsePLY(arrayBuffer, options?.ply),\n  parseInBatches: (arrayBuffer, options) => parsePLYInBatches(arrayBuffer, options?.ply)\n};\n"],"mappings":"AAIA,SAAQA,SAAS,IAAIC,eAAe,QAAO,cAAc;AACzD,SAAyBC,QAAQ,QAAO,iBAAiB;AACzD,SAAQC,iBAAiB,QAAO,4BAA4B;AAI5D,SAAQF,eAAe;AASvB,OAAO,MAAMD,SAA2D,GAAG;EACzE,GAAGC,eAAe;EAElBG,KAAK,EAAE,MAAAA,CAAOC,WAAW,EAAEC,OAAO,KAAKJ,QAAQ,CAACG,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,CAAC;EAC1EC,aAAa,EAAEA,CAACH,WAAW,EAAEC,OAAO,KAAKJ,QAAQ,CAACG,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,CAAC;EAC5EE,SAAS,EAAEA,CAACJ,WAAW,EAAEC,OAAO,KAAKJ,QAAQ,CAACG,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,CAAC;EACxEG,cAAc,EAAEA,CAACL,WAAW,EAAEC,OAAO,KAAKH,iBAAiB,CAACE,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG;AACvF,CAAC"}