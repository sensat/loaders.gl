{"version":3,"file":"parse-ply-in-batches.js","names":["_loaderUtils","require","_normalizePly","_interopRequireDefault","_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","n","next","prototype","apply","arguments","return","_return","ret","throw","_throw","thr","currentElement","parsePLYInBatches","_x","_x2","_parsePLYInBatches","_wrapAsyncGenerator2","default","_regenerator","mark","_callee","options","lineIterator","header","attributes","wrap","_callee$","_context","prev","makeLineIterator","makeTextDecoderIterator","_awaitAsyncGenerator2","parsePLYHeader","sent","t0","format","parseASCII","abrupt","Error","normalizePLY","stop","_x3","_x4","_parsePLYHeader","_asyncToGenerator2","_callee2","_callee2$","_context2","comments","elements","forEach","line","trim","lineValues","split","lineType","shift","join","version","push","name","count","parseInt","properties","property","makePLYElementProperty","propertyNameMapping","console","log","propertyValues","type","countType","itemType","_x5","_x6","_parseASCII","_callee3","currentElementCount","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","element","_callee3$","_context3","indices","vertices","normals","uvs","colors","parsePLYElement","handleElement","finish","parseASCIINumber","parseFloat","values","i","length","list","j","buffer","elementName","undefined","x","y","z","nx","ny","nz","t","red","green","blue","vertexIndices","vertex_indices","vertex_index"],"sources":["../../../src/lib/parse-ply-in-batches.ts"],"sourcesContent":["// PLY Loader, adapted from THREE.js (MIT license)\n//\n// Attributions per original THREE.js source file:\n//\n// @author Wei Meng / http://about.me/menway\n//\n// Description: A loader for PLY ASCII files (known as the Polygon File Format\n// or the Stanford Triangle Format).\n//\n// Limitations: ASCII decoding assumes file is UTF-8.\n//\n// If the PLY file uses non standard property names, they can be mapped while\n// loading. For example, the following maps the properties\n// “diffuse_(red|green|blue)” in the file to standard color names.\n//\n// parsePLY(data, {\n//   propertyNameMapping: {\n//     diffuse_red: 'red',\n//     diffuse_green: 'green',\n//     diffuse_blue: 'blue'\n//   }\n// });\n\nimport {makeLineIterator, makeTextDecoderIterator, forEach} from '@loaders.gl/loader-utils';\nimport normalizePLY from './normalize-ply';\nimport {PLYMesh, PLYHeader, PLYElement, PLYProperty, PLYAttributes} from './ply-types';\n\nlet currentElement: PLYElement;\n\n/**\n * PARSER\n * @param iterator\n * @param options\n */\nexport async function* parsePLYInBatches(\n  iterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: any\n): AsyncIterable<PLYMesh> {\n  const lineIterator = makeLineIterator(makeTextDecoderIterator(iterator));\n  const header = await parsePLYHeader(lineIterator, options);\n\n  let attributes: PLYAttributes;\n  switch (header.format) {\n    case 'ascii':\n      attributes = await parseASCII(lineIterator, header);\n      break;\n    default:\n      throw new Error('Binary PLY can not yet be parsed in streaming mode');\n    // attributes = await parseBinary(lineIterator, header);\n  }\n\n  yield normalizePLY(header, attributes, options);\n}\n\n/**\n * Parses header\n * @param lineIterator\n * @param options\n * @returns\n */\nasync function parsePLYHeader(\n  lineIterator: AsyncIterable<string> | Iterable<string>,\n  options: {[key: string]: any}\n): Promise<PLYHeader> {\n  const header: PLYHeader = {\n    comments: [],\n    elements: []\n    // headerLength\n  };\n\n  // Note: forEach does not reset iterator if exiting loop prematurely\n  // so that iteration can continue in a second loop\n  await forEach(lineIterator, (line: string) => {\n    line = line.trim();\n\n    // End of header\n    if (line === 'end_header') {\n      return true; // Returning true cancels `forEach`\n    }\n\n    // Ignore empty lines\n    if (line === '') {\n      // eslint-disable-next-line\n      return false; // Returning false does not cancel `forEach`\n    }\n\n    const lineValues = line.split(/\\s+/);\n    const lineType = lineValues.shift();\n    line = lineValues.join(' ');\n\n    switch (lineType) {\n      case 'ply':\n        // First line magic characters, ignore\n        break;\n\n      case 'format':\n        header.format = lineValues[0];\n        header.version = lineValues[1];\n        break;\n\n      case 'comment':\n        header.comments.push(line);\n        break;\n\n      case 'element':\n        if (currentElement) {\n          header.elements.push(currentElement);\n        }\n\n        currentElement = {\n          name: lineValues[0],\n          count: parseInt(lineValues[1], 10),\n          properties: []\n        };\n        break;\n\n      case 'property':\n        const property = makePLYElementProperty(lineValues, options.propertyNameMapping);\n        currentElement.properties.push(property);\n        break;\n\n      default:\n        // eslint-disable-next-line\n        console.log('unhandled', lineType, lineValues);\n    }\n\n    return false;\n  });\n\n  if (currentElement) {\n    header.elements.push(currentElement);\n  }\n\n  return header;\n}\n\nfunction makePLYElementProperty(propertyValues: string[], propertyNameMapping: []): PLYProperty {\n  const type = propertyValues[0];\n  switch (type) {\n    case 'list':\n      return {\n        type,\n        name: propertyValues[3],\n        countType: propertyValues[1],\n        itemType: propertyValues[2]\n      };\n    default:\n      return {\n        type,\n        name: propertyValues[1]\n      };\n  }\n}\n\n// ASCII PARSING\n/**\n * @param lineIterator\n * @param header\n * @returns\n */\nasync function parseASCII(lineIterator: AsyncIterable<string>, header: PLYHeader) {\n  // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n  const attributes: PLYAttributes = {\n    indices: [],\n    vertices: [],\n    normals: [],\n    uvs: [],\n    colors: []\n  };\n\n  let currentElement = 0;\n  let currentElementCount = 0;\n\n  for await (let line of lineIterator) {\n    line = line.trim();\n\n    if (line !== '') {\n      if (currentElementCount >= header.elements[currentElement].count) {\n        currentElement++;\n        currentElementCount = 0;\n      }\n\n      const element = parsePLYElement(header.elements[currentElement].properties, line);\n      handleElement(attributes, header.elements[currentElement].name, element);\n      currentElementCount++;\n    }\n  }\n\n  return attributes;\n}\n/**\n * Parses ASCII number\n * @param n\n * @param type\n * @returns ASCII number\n */\n// eslint-disable-next-line complexity\nfunction parseASCIINumber(n: string, type: string): number {\n  switch (type) {\n    case 'char':\n    case 'uchar':\n    case 'short':\n    case 'ushort':\n    case 'int':\n    case 'uint':\n    case 'int8':\n    case 'uint8':\n    case 'int16':\n    case 'uint16':\n    case 'int32':\n    case 'uint32':\n      return parseInt(n, 10);\n\n    case 'float':\n    case 'double':\n    case 'float32':\n    case 'float64':\n      return parseFloat(n);\n\n    default:\n      throw new Error(type);\n  }\n}\n/**\n * Parses ASCII element\n * @param properties\n * @param line\n * @returns element\n */\nfunction parsePLYElement(properties: any[], line: string) {\n  const values: any = line.split(/\\s+/);\n\n  const element = {};\n\n  for (let i = 0; i < properties.length; i++) {\n    if (properties[i].type === 'list') {\n      const list: any = [];\n      const n = parseASCIINumber(values.shift(), properties[i].countType);\n\n      for (let j = 0; j < n; j++) {\n        list.push(parseASCIINumber(values.shift(), properties[i].itemType));\n      }\n\n      element[properties[i].name] = list;\n    } else {\n      element[properties[i].name] = parseASCIINumber(values.shift(), properties[i].type);\n    }\n  }\n\n  return element;\n}\n/**\n * @param buffer\n * @param elementName\n * @param element\n */\n// HELPER FUNCTIONS\n// eslint-disable-next-line complexity\nfunction handleElement(\n  buffer: {[index: string]: number[]},\n  elementName: string,\n  element: any = {}\n) {\n  switch (elementName) {\n    case 'vertex':\n      buffer.vertices.push(element.x, element.y, element.z);\n      if ('nx' in element && 'ny' in element && 'nz' in element) {\n        buffer.normals.push(element.nx, element.ny, element.nz);\n      }\n      if ('s' in element && 't' in element) {\n        buffer.uvs.push(element.s, element.t);\n      }\n      if ('red' in element && 'green' in element && 'blue' in element) {\n        buffer.colors.push(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n      }\n      break;\n\n    case 'face':\n      const vertexIndices = element.vertex_indices || element.vertex_index; // issue #9338\n      if (vertexIndices.length === 3) {\n        buffer.indices.push(vertexIndices[0], vertexIndices[1], vertexIndices[2]);\n      } else if (vertexIndices.length === 4) {\n        buffer.indices.push(vertexIndices[0], vertexIndices[1], vertexIndices[3]);\n        buffer.indices.push(vertexIndices[1], vertexIndices[2], vertexIndices[3]);\n      }\n      break;\n\n    default:\n      break;\n  }\n}\n"],"mappings":"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"}