{"version":3,"file":"parse-arrow-in-batches.js","names":["_apacheArrow","require","_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","n","next","prototype","apply","arguments","return","_return","ret","throw","_throw","thr","parseArrowInBatches","makeArrowAsyncIterator","_makeArrowAsyncIterator","_wrapAsyncGenerator2","default","_regenerator","mark","_callee","readers","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","reader","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","batch","wrap","_callee$","_context","prev","RecordBatchReader","readAll","_awaitAsyncGenerator2","sent","processBatch","t0","finish","abrupt","t1","stop","values","metadata","schema","length","fields","forEach","_ref","index","name","getChildAt","toArray"],"sources":["../../../src/lib/parse-arrow-in-batches.ts"],"sourcesContent":["// TODO - this import defeats the sophisticated typescript checking in ArrowJS\nimport {RecordBatchReader} from 'apache-arrow';\n// import {isIterable} from '@loaders.gl/core';\n\n/**\n */\nexport function parseArrowInBatches(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n): AsyncIterable<any> {\n  // Creates the appropriate RecordBatchReader subclasses from the input\n  // This will also close the underlying source in case of early termination or errors\n\n  // As an optimization, return a non-async iterator\n  /*\n  if (isIterable(readers)) {\n    function* makeArrowIterator() {\n      for (const reader of readers) {\n        for (const batch of reader) {\n          yield processBatch(batch, reader);\n        }\n        break; // only processing one stream of batches\n      }\n    }\n    const arrowIterator = makeArrowIterator();\n  }\n  */\n\n  async function* makeArrowAsyncIterator() {\n    const readers = RecordBatchReader.readAll(asyncIterator);\n    for await (const reader of readers) {\n      for await (const batch of reader) {\n        yield processBatch(batch);\n      }\n      break; // only processing one stream of batches\n    }\n  }\n  return makeArrowAsyncIterator();\n}\n\nfunction processBatch(batch) {\n  const values = {\n    metadata: batch.schema.metadata,\n    length: batch.length\n  };\n  batch.schema.fields.forEach(({name}, index) => {\n    values[name] = batch.getChildAt(index).toArray();\n  });\n  return values;\n}\n"],"mappings":"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"}