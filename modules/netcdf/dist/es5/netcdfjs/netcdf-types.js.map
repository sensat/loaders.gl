{"version":3,"file":"netcdf-types.js","names":[],"sources":["../../../src/netcdfjs/netcdf-types.ts"],"sourcesContent":["/**\n * Header describing a NetDCF file\n * @param recordDimension: Number with the length of record dimension\n * @param dimensions: List of dimensions\n * @param attributes: List of global attributes\n * @param variables: List of variables\n */\nexport type NetCDFHeader = {\n  version: number;\n  recordDimension: NetCDFRecordDimension;\n  dimensions: NetCDFDimension[];\n  attributes: NetCDFAttribute[];\n  variables: NetCDFVariable[];\n};\n\n/**\n * Metadata for the record dimension\n * @param length Number of elements in the record dimension\n * @param id Id in the list of dimensions for the record dimension\n * @param name  name of the record dimension\n * @param recordStep the record variables step size\n */\nexport type NetCDFRecordDimension = {\n  length: number;\n  id: number; // id of the unlimited dimension\n  name: string; // name of the unlimited dimension\n  recordStep: number;\n};\n\n/**\n * `dimensions` is an array of dimension objects:\n * @param name name of the dimension\n * @param size size of the dimension\n * @param recordId: id of the dimension that has unlimited size or undefined,\n * @param recordName: name of the dimension that has unlimited size\n */\nexport type NetCDFDimension = {\n  name: string;\n  size: number;\n  recordId: number;\n  recordName: string;\n};\n\n/**\n * Number of recordStep and list of variables with:\n * @param name String with the name of the variable\n * @param dimensions Array with the dimension IDs of the variable\n * @param attributes Array with the attributes of the variable\n * @param type String with the type of the variable\n * @param size Number with the size of the variable\n * @param offset Number with the offset where of the variable begins\n * @param record True if is a record variable, false otherwise (unlimited size)\n */\nexport type NetCDFVariable = {\n  name: string;\n  dimensions: [];\n  attributes: [];\n  type: string;\n  size: number;\n  offset: number;\n  record: boolean;\n};\n\n/**\n * @param name name of the attribute\n * @param type type of the attribute\n * @param value number or string with the value of the attribute\n */\nexport type NetCDFAttribute = {\n  name: string;\n  type: string;\n  value: string;\n};\n"],"mappings":""}