{"version":3,"file":"las-loader.js","names":["VERSION","DEFAULT_LAS_OPTIONS","las","shape","fp64","skip","colorDepth","LASLoader","name","id","module","version","worker","extensions","mimeTypes","text","binary","tests","options"],"sources":["../../src/las-loader.ts"],"sourcesContent":["// LASER (LAS) FILE FORMAT\nimport type {Loader, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {LASMesh} from './lib/las-types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type LASLoaderOptions = LoaderOptions & {\n  las?: {\n    shape?: 'mesh' | 'columnar-table' | 'arrow-table';\n    fp64?: boolean;\n    skip?: number;\n    colorDepth?: number | string;\n  };\n  onProgress?: Function;\n};\n\nconst DEFAULT_LAS_OPTIONS: LASLoaderOptions = {\n  las: {\n    shape: 'mesh',\n    fp64: false,\n    skip: 1,\n    colorDepth: 8\n  }\n};\n\n/**\n * Loader for the LAS (LASer) point cloud format\n */\nexport const LASLoader: Loader<LASMesh, never, LASLoaderOptions> = {\n  name: 'LAS',\n  id: 'las',\n  module: 'las',\n  version: VERSION,\n  worker: true,\n  extensions: ['las', 'laz'], // LAZ is the \"compressed\" flavor of LAS,\n  mimeTypes: ['application/octet-stream'], // TODO - text version?\n  text: true,\n  binary: true,\n  tests: ['LAS'],\n  options: DEFAULT_LAS_OPTIONS\n};\n"],"mappings":"AAMA,MAAMA,OAAO,GAAG,sBAAkB,KAAK,WAAW,qBAAiB,QAAQ;AAY3E,MAAMC,mBAAqC,GAAG;EAC5CC,GAAG,EAAE;IACHC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd;AACF,CAAC;AAKD,OAAO,MAAMC,SAAmD,GAAG;EACjEC,IAAI,EAAE,KAAK;EACXC,EAAE,EAAE,KAAK;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEX,OAAO;EAChBY,MAAM,EAAE,IAAI;EACZC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;EAC1BC,SAAS,EAAE,CAAC,0BAA0B,CAAC;EACvCC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,CAAC,KAAK,CAAC;EACdC,OAAO,EAAEjB;AACX,CAAC"}