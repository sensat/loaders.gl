{"version":3,"file":"parse-quantized-mesh.js","names":["getMeshBoundingBox","decode","DECODING_STEPS","addSkirt","parseQuantizedMesh","arrayBuffer","options","arguments","length","undefined","bounds","header","vertexData","triangleIndices","originalTriangleIndices","westIndices","northIndices","eastIndices","southIndices","attributes","getMeshAttributes","boundingBox","skirtHeight","newAttributes","triangles","newTriangles","loaderData","vertexCount","schema","topology","mode","indices","value","size","minHeight","maxHeight","minX","minY","maxX","maxY","xScale","yScale","zScale","nCoords","positions","Float32Array","texCoords","i","x","y","z","POSITION","TEXCOORD_0"],"sources":["../../../src/lib/parse-quantized-mesh.ts"],"sourcesContent":["import {Mesh, getMeshBoundingBox} from '@loaders.gl/schema';\nimport decode, {DECODING_STEPS} from './decode-quantized-mesh';\nimport {addSkirt} from './helpers/skirt';\n\nexport type ParseQuantizedMeshOptions = {\n  bounds?: [number, number, number, number];\n  skirtHeight?: number | null;\n};\n\nexport function parseQuantizedMesh(\n  arrayBuffer: ArrayBuffer,\n  options: ParseQuantizedMeshOptions = {}\n): Mesh {\n  const {bounds} = options;\n  // Don't parse edge indices or format extensions\n  const {\n    header,\n    vertexData,\n    triangleIndices: originalTriangleIndices,\n    westIndices,\n    northIndices,\n    eastIndices,\n    southIndices\n  } = decode(arrayBuffer, DECODING_STEPS.triangleIndices);\n  let triangleIndices = originalTriangleIndices;\n  let attributes = getMeshAttributes(vertexData, header, bounds);\n\n  // Compute bounding box before adding skirt so that z values are not skewed\n  // TODO: Find bounding box from header, instead of doing extra pass over\n  // vertices.\n  const boundingBox = getMeshBoundingBox(attributes);\n\n  if (options?.skirtHeight) {\n    const {attributes: newAttributes, triangles: newTriangles} = addSkirt(\n      attributes,\n      triangleIndices,\n      options.skirtHeight,\n      {\n        westIndices,\n        northIndices,\n        eastIndices,\n        southIndices\n      }\n    );\n    attributes = newAttributes;\n    triangleIndices = newTriangles;\n  }\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n    header: {\n      // @ts-ignore\n      vertexCount: triangleIndices.length,\n      boundingBox\n    },\n    // TODO\n    schema: undefined!,\n    topology: 'triangle-list',\n    mode: 4, // TRIANGLES\n    indices: {value: triangleIndices, size: 1},\n    attributes\n  };\n}\n\nfunction getMeshAttributes(vertexData, header, bounds) {\n  const {minHeight, maxHeight} = header;\n  const [minX, minY, maxX, maxY] = bounds || [0, 0, 1, 1];\n  const xScale = maxX - minX;\n  const yScale = maxY - minY;\n  const zScale = maxHeight - minHeight;\n\n  const nCoords = vertexData.length / 3;\n  // vec3. x, y defined by bounds, z in meters\n  const positions = new Float32Array(nCoords * 3);\n\n  // vec2. 1 to 1 relationship with position. represents the uv on the texture image. 0,0 to 1,1.\n  const texCoords = new Float32Array(nCoords * 2);\n\n  // Data is not interleaved; all u, then all v, then all heights\n  for (let i = 0; i < nCoords; i++) {\n    const x = vertexData[i] / 32767;\n    const y = vertexData[i + nCoords] / 32767;\n    const z = vertexData[i + nCoords * 2] / 32767;\n\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = y * yScale + minY;\n    positions[3 * i + 2] = z * zScale + minHeight;\n\n    texCoords[2 * i + 0] = x;\n    texCoords[2 * i + 1] = y;\n  }\n\n  return {\n    POSITION: {value: positions, size: 3},\n    TEXCOORD_0: {value: texCoords, size: 2}\n    // TODO: Parse normals if they exist in the file\n    // NORMAL: {}, - optional, but creates the high poly look with lighting\n  };\n}\n"],"mappings":"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"}