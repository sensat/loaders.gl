{"version":3,"file":"index.js","names":["parseQuantizedMesh","makeTerrainMeshFromImage","TerrainLoader","TerrainWorkerLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","parse","parseTerrain","arrayBuffer","options","context","loadImageOptions","mimeType","image","type","terrainOptions","terrain","parseSync"],"sources":["../../src/index.ts"],"sourcesContent":["import type {LoaderContext, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {parseQuantizedMesh} from './lib/parse-quantized-mesh';\nimport {TerrainOptions, makeTerrainMeshFromImage} from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader, TerrainLoaderOptions} from './terrain-loader';\nimport {\n  QuantizedMeshLoader as QuantizedMeshWorkerLoader,\n  QuantizedMeshLoaderOptions\n} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader: LoaderWithParser<any, never, TerrainLoaderOptions> = {\n  ...TerrainWorkerLoader,\n  parse: parseTerrain\n};\n\nexport async function parseTerrain(\n  arrayBuffer: ArrayBuffer,\n  options?: TerrainLoaderOptions,\n  context?: LoaderContext\n) {\n  const loadImageOptions = {\n    ...options,\n    mimeType: 'application/x.image',\n    image: {...options?.image, type: 'data'}\n  };\n  const image = await context?.parse(arrayBuffer, loadImageOptions);\n  // Extend function to support additional mesh generation options (square grid or delatin)\n  const terrainOptions = {...TerrainLoader.options.terrain, ...options?.terrain} as TerrainOptions;\n  return makeTerrainMeshFromImage(image, terrainOptions);\n}\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader: LoaderWithParser<any, never, QuantizedMeshLoaderOptions> = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options?.['quantized-mesh']),\n  parse: async (arrayBuffer, options) =>\n    parseQuantizedMesh(arrayBuffer, options?.['quantized-mesh'])\n};\n"],"mappings":"AACA,SAAQA,kBAAkB,QAAO,4BAA4B;AAC7D,SAAwBC,wBAAwB,QAAO,qBAAqB;AAE5E,SAAQC,aAAa,IAAIC,mBAAmB,QAA6B,kBAAkB;AAC3F,SACEC,mBAAmB,IAAIC,yBAAyB,QAE3C,yBAAyB;AAIhC,SAAQF,mBAAmB;AAE3B,OAAO,MAAMD,aAAiE,GAAG;EAC/E,GAAGC,mBAAmB;EACtBG,KAAK,EAAEC;AACT,CAAC;AAED,OAAO,eAAeA,YAAYA,CAChCC,WAAwB,EACxBC,OAA8B,EAC9BC,OAAuB,EACvB;EACA,MAAMC,gBAAgB,GAAG;IACvB,GAAGF,OAAO;IACVG,QAAQ,EAAE,qBAAqB;IAC/BC,KAAK,EAAE;MAAC,IAAGJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,KAAK;MAAEC,IAAI,EAAE;IAAM;EACzC,CAAC;EACD,MAAMD,KAAK,GAAG,OAAMH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,KAAK,CAACE,WAAW,EAAEG,gBAAgB,CAAC;EAEjE,MAAMI,cAAc,GAAG;IAAC,GAAGb,aAAa,CAACO,OAAO,CAACO,OAAO;IAAE,IAAGP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,OAAO;EAAA,CAAmB;EAChG,OAAOf,wBAAwB,CAACY,KAAK,EAAEE,cAAc,CAAC;AACxD;AAIA,SAAQV,yBAAyB;AAKjC,OAAO,MAAMD,mBAA6E,GAAG;EAC3F,GAAGC,yBAAyB;EAC5BY,SAAS,EAAEA,CAACT,WAAW,EAAEC,OAAO,KAAKT,kBAAkB,CAACQ,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,gBAAgB,CAAC,CAAC;EACjGH,KAAK,EAAE,MAAAA,CAAOE,WAAW,EAAEC,OAAO,KAChCT,kBAAkB,CAACQ,WAAW,EAAEC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,gBAAgB,CAAC;AAC/D,CAAC"}