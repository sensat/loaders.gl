{"version":3,"file":"binary-geometries.js","names":["_header_generated","require","parsePoint","geometry","xy","xyArray","z","zArray","positions","blitArrays","parseLines","ends","endsArray","Array","from","length","unshift","pathIndices","value","Uint16Array","size","parsePolygons","primitivePolygonIndices","polygonIndices","parseMultiPolygons","parsedParts","nPositions","nPrimitivePolygonIndices","nPolygonIndices","i","partsLength","part","parts","polygon","push","concatPositions","Float64Array","concatPrimitivePolygonIndices","Uint32Array","concatPolygonIndices","positionCounter","primitivePolygonIndicesCounter","polygonIndicesCounter","positionSize","_i","_parsedParts","parsedPart","set","subarray","map","x","Error","totalLength","xyz","fromGeometry","type","GeometryType","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","concat"],"sources":["../../../src/lib/binary-geometries.ts"],"sourcesContent":["import {GeometryType} from 'flatgeobuf/lib/cjs/header_generated';\n\n// Parse Point to flat array\nfunction parsePoint(geometry) {\n  const xy = geometry.xyArray();\n  const z = geometry.zArray();\n  const positions = blitArrays(xy, z);\n  return {positions};\n}\n\nfunction parseLines(geometry) {\n  const xy = geometry.xyArray();\n  const z = geometry.zArray();\n  const positions = blitArrays(xy, z);\n\n  // If endsArray is null, a single LineString. Otherwise, contains the end\n  // indices of each part of the MultiLineString. geometry.endsArray() omits the\n  // initial 0 that we have in our internal format.\n  const ends = (geometry.endsArray() && Array.from(geometry.endsArray())) || [xy.length / 2];\n  ends.unshift(0);\n\n  const pathIndices = {value: new Uint16Array(ends), size: 1};\n\n  return {\n    positions,\n    pathIndices\n  };\n}\n\nfunction parsePolygons(geometry) {\n  const xy = geometry.xyArray();\n  const z = geometry.zArray();\n  const positions = blitArrays(xy, z);\n\n  // If endsArray is null, a simple Polygon with no inner rings. Otherwise,\n  // contains the end indices of each ring of the Polygon. geometry.endsArray()\n  // omits the initial 0 that we have in our internal format.\n  const ends = (geometry.endsArray() && Array.from(geometry.endsArray())) || [xy.length / 2];\n  ends.unshift(0);\n\n  const primitivePolygonIndices = {value: new Uint16Array(ends), size: 1};\n  const polygonIndices = {value: new Uint16Array([0, xy.length / 2]), size: 1};\n\n  return {\n    positions,\n    primitivePolygonIndices,\n    polygonIndices\n  };\n}\n\n// eslint-disable-next-line max-statements\nfunction parseMultiPolygons(geometry) {\n  // Create arrays for each geometry part, then concatenate\n  const parsedParts: any[] = [];\n  let nPositions = 0;\n  let nPrimitivePolygonIndices = 1;\n  let nPolygonIndices = 1;\n\n  for (let i = 0; i < geometry.partsLength(); i++) {\n    const part = geometry.parts(i);\n    const polygon = parsePolygons(part);\n\n    nPositions += polygon.positions.value.length;\n    nPrimitivePolygonIndices += polygon.primitivePolygonIndices.value.length - 1;\n    nPolygonIndices += polygon.polygonIndices.value.length - 1;\n\n    parsedParts.push(polygon);\n  }\n\n  const concatPositions = new Float64Array(nPositions);\n  const concatPrimitivePolygonIndices = new Uint32Array(nPrimitivePolygonIndices);\n  const concatPolygonIndices = new Uint32Array(nPolygonIndices);\n\n  let positionCounter = 0;\n  let primitivePolygonIndicesCounter = 1;\n  let polygonIndicesCounter = 1;\n\n  // Assumes all parts of the multipolygon have the same size\n  const positionSize = parsedParts[0].positions.size;\n\n  for (const parsedPart of parsedParts) {\n    concatPositions.set(parsedPart.positions.value, positionCounter * positionSize);\n\n    // For indices, need to add positionCounter so that position indices are\n    // correct in the concatenated positions\n    concatPrimitivePolygonIndices.set(\n      // eslint-disable-next-line\n      parsedPart.primitivePolygonIndices.value.subarray(1).map((x) => x + positionCounter),\n      primitivePolygonIndicesCounter\n    );\n    concatPolygonIndices.set(\n      // eslint-disable-next-line\n      parsedPart.polygonIndices.value.subarray(1).map((x) => x + positionCounter),\n      polygonIndicesCounter\n    );\n\n    positionCounter += parsedPart.positions.value.length / positionSize;\n    primitivePolygonIndicesCounter += parsedPart.primitivePolygonIndices.value.length - 1;\n    polygonIndicesCounter += parsedPart.polygonIndices.value.length - 1;\n  }\n\n  return {\n    positions: {value: concatPositions, size: positionSize},\n    primitivePolygonIndices: {value: concatPrimitivePolygonIndices, size: 1},\n    polygonIndices: {value: concatPolygonIndices, size: 1}\n  };\n}\n\n// Combine xy and z arrays\nfunction blitArrays(xy, z) {\n  if (!z) {\n    return {value: xy, size: 2};\n  }\n\n  if (z.length * 2 !== xy.length) {\n    throw new Error('Z array must be half XY array\\'s length');\n  }\n  const totalLength = xy.length + z.length;\n\n  const xyz = new Float64Array(totalLength);\n  for (let i = 0; i < xy.length / 2; i++) {\n    xyz[i * 3 + 0] = xy[i * 2 + 0];\n    xyz[i * 3 + 1] = xy[i * 2 + 1];\n    xyz[i * 3 + 2] = z[i];\n  }\n  return {value: xyz, size: 3};\n}\n\nexport function fromGeometry(geometry, type) {\n  switch (type) {\n    case GeometryType.Point:\n    case GeometryType.MultiPoint:\n      return parsePoint(geometry);\n    case GeometryType.LineString:\n    case GeometryType.MultiLineString:\n      return parseLines(geometry);\n    case GeometryType.Polygon:\n      return parsePolygons(geometry);\n    case GeometryType.MultiPolygon:\n      return parseMultiPolygons(geometry);\n    default:\n      throw new Error(`Unimplemented geometry type: ${type}`);\n  }\n}\n"],"mappings":"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"}