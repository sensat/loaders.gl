{"version":3,"file":"PageEncodingStats.js","names":["thrift","PageEncodingStats","constructor","args","_defineProperty","page_type","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","encoding","count","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/PageEncodingStats.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as Encoding from './Encoding';\nimport * as PageType from './PageType';\nexport interface IPageEncodingStatsArgs {\n  page_type: PageType.PageType;\n  encoding: Encoding.Encoding;\n  count: number;\n}\nexport class PageEncodingStats {\n  public page_type: PageType.PageType;\n  public encoding: Encoding.Encoding;\n  public count: number;\n  constructor(args: IPageEncodingStatsArgs) {\n    if (args != null && args.page_type != null) {\n      this.page_type = args.page_type;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[page_type] is unset!'\n      );\n    }\n    if (args != null && args.encoding != null) {\n      this.encoding = args.encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[encoding] is unset!'\n      );\n    }\n    if (args != null && args.count != null) {\n      this.count = args.count;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[count] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('PageEncodingStats');\n    if (this.page_type != null) {\n      output.writeFieldBegin('page_type', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.page_type);\n      output.writeFieldEnd();\n    }\n    if (this.encoding != null) {\n      output.writeFieldBegin('encoding', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.encoding);\n      output.writeFieldEnd();\n    }\n    if (this.count != null) {\n      output.writeFieldBegin('count', thrift.Thrift.Type.I32, 3);\n      output.writeI32(this.count);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): PageEncodingStats {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: PageType.PageType = input.readI32();\n            _args.page_type = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: Encoding.Encoding = input.readI32();\n            _args.encoding = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_3: number = input.readI32();\n            _args.count = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.page_type !== undefined &&\n      _args.encoding !== undefined &&\n      _args.count !== undefined\n    ) {\n      return new PageEncodingStats(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read PageEncodingStats from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}