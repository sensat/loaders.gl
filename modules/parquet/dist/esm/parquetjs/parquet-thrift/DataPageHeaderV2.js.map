{"version":3,"file":"DataPageHeaderV2.js","names":["thrift","Statistics","DataPageHeaderV2","constructor","args","_defineProperty","num_values","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","num_nulls","num_rows","encoding","definition_levels_byte_length","repetition_levels_byte_length","is_compressed","statistics","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","BOOL","writeBool","STRUCT","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","value_4","value_5","value_6","value_7","readBool","value_8","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/DataPageHeaderV2.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as Encoding from './Encoding';\nimport * as Statistics from './Statistics';\nexport interface IDataPageHeaderV2Args {\n  num_values: number;\n  num_nulls: number;\n  num_rows: number;\n  encoding: Encoding.Encoding;\n  definition_levels_byte_length: number;\n  repetition_levels_byte_length: number;\n  is_compressed?: boolean;\n  statistics?: Statistics.Statistics;\n}\nexport class DataPageHeaderV2 {\n  public num_values: number;\n  public num_nulls: number;\n  public num_rows: number;\n  public encoding: Encoding.Encoding;\n  public definition_levels_byte_length: number;\n  public repetition_levels_byte_length: number;\n  public is_compressed?: boolean = true;\n  public statistics?: Statistics.Statistics;\n  constructor(args: IDataPageHeaderV2Args) {\n    if (args != null && args.num_values != null) {\n      this.num_values = args.num_values;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_values] is unset!'\n      );\n    }\n    if (args != null && args.num_nulls != null) {\n      this.num_nulls = args.num_nulls;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_nulls] is unset!'\n      );\n    }\n    if (args != null && args.num_rows != null) {\n      this.num_rows = args.num_rows;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_rows] is unset!'\n      );\n    }\n    if (args != null && args.encoding != null) {\n      this.encoding = args.encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[encoding] is unset!'\n      );\n    }\n    if (args != null && args.definition_levels_byte_length != null) {\n      this.definition_levels_byte_length = args.definition_levels_byte_length;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[definition_levels_byte_length] is unset!'\n      );\n    }\n    if (args != null && args.repetition_levels_byte_length != null) {\n      this.repetition_levels_byte_length = args.repetition_levels_byte_length;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[repetition_levels_byte_length] is unset!'\n      );\n    }\n    if (args != null && args.is_compressed != null) {\n      this.is_compressed = args.is_compressed;\n    }\n    if (args != null && args.statistics != null) {\n      this.statistics = args.statistics;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('DataPageHeaderV2');\n    if (this.num_values != null) {\n      output.writeFieldBegin('num_values', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.num_values);\n      output.writeFieldEnd();\n    }\n    if (this.num_nulls != null) {\n      output.writeFieldBegin('num_nulls', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.num_nulls);\n      output.writeFieldEnd();\n    }\n    if (this.num_rows != null) {\n      output.writeFieldBegin('num_rows', thrift.Thrift.Type.I32, 3);\n      output.writeI32(this.num_rows);\n      output.writeFieldEnd();\n    }\n    if (this.encoding != null) {\n      output.writeFieldBegin('encoding', thrift.Thrift.Type.I32, 4);\n      output.writeI32(this.encoding);\n      output.writeFieldEnd();\n    }\n    if (this.definition_levels_byte_length != null) {\n      output.writeFieldBegin('definition_levels_byte_length', thrift.Thrift.Type.I32, 5);\n      output.writeI32(this.definition_levels_byte_length);\n      output.writeFieldEnd();\n    }\n    if (this.repetition_levels_byte_length != null) {\n      output.writeFieldBegin('repetition_levels_byte_length', thrift.Thrift.Type.I32, 6);\n      output.writeI32(this.repetition_levels_byte_length);\n      output.writeFieldEnd();\n    }\n    if (this.is_compressed != null) {\n      output.writeFieldBegin('is_compressed', thrift.Thrift.Type.BOOL, 7);\n      output.writeBool(this.is_compressed);\n      output.writeFieldEnd();\n    }\n    if (this.statistics != null) {\n      output.writeFieldBegin('statistics', thrift.Thrift.Type.STRUCT, 8);\n      this.statistics.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): DataPageHeaderV2 {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.num_values = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.num_nulls = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_3: number = input.readI32();\n            _args.num_rows = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_4: Encoding.Encoding = input.readI32();\n            _args.encoding = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_5: number = input.readI32();\n            _args.definition_levels_byte_length = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_6: number = input.readI32();\n            _args.repetition_levels_byte_length = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.BOOL) {\n            const value_7: boolean = input.readBool();\n            _args.is_compressed = value_7;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 8:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_8: Statistics.Statistics = Statistics.Statistics.read(input);\n            _args.statistics = value_8;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.num_values !== undefined &&\n      _args.num_nulls !== undefined &&\n      _args.num_rows !== undefined &&\n      _args.encoding !== undefined &&\n      _args.definition_levels_byte_length !== undefined &&\n      _args.repetition_levels_byte_length !== undefined\n    ) {\n      return new DataPageHeaderV2(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read DataPageHeaderV2 from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}