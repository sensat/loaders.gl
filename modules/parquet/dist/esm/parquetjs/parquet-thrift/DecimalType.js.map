{"version":3,"file":"DecimalType.js","names":["thrift","DecimalType","constructor","args","_defineProperty","scale","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","precision","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/DecimalType.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nexport interface IDecimalTypeArgs {\n  scale: number;\n  precision: number;\n}\nexport class DecimalType {\n  public scale: number;\n  public precision: number;\n  constructor(args: IDecimalTypeArgs) {\n    if (args != null && args.scale != null) {\n      this.scale = args.scale;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[scale] is unset!'\n      );\n    }\n    if (args != null && args.precision != null) {\n      this.precision = args.precision;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[precision] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('DecimalType');\n    if (this.scale != null) {\n      output.writeFieldBegin('scale', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.scale);\n      output.writeFieldEnd();\n    }\n    if (this.precision != null) {\n      output.writeFieldBegin('precision', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.precision);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): DecimalType {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.scale = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.precision = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.scale !== undefined && _args.precision !== undefined) {\n      return new DecimalType(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read DecimalType from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}