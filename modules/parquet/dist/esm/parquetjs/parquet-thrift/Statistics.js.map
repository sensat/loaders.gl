{"version":3,"file":"Statistics.js","names":["Int64","thrift","Statistics","constructor","args","_defineProperty","max","min","null_count","distinct_count","max_value","min_value","write","output","writeStructBegin","writeFieldBegin","Thrift","Type","STRING","writeBinary","writeFieldEnd","I64","writeI64","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readBinary","skip","value_2","value_3","readI64","value_4","value_5","value_6","readFieldEnd","readStructEnd"],"sources":["../../../../src/parquetjs/parquet-thrift/Statistics.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport Int64 from 'node-int64';\nimport * as thrift from 'thrift';\nexport interface IStatisticsArgs {\n  max?: Buffer;\n  min?: Buffer;\n  null_count?: number | Int64;\n  distinct_count?: number | Int64;\n  max_value?: Buffer;\n  min_value?: Buffer;\n}\nexport class Statistics {\n  public max?: Buffer;\n  public min?: Buffer;\n  public null_count?: Int64;\n  public distinct_count?: Int64;\n  public max_value?: Buffer;\n  public min_value?: Buffer;\n  constructor(args?: IStatisticsArgs) {\n    if (args != null && args.max != null) {\n      this.max = args.max;\n    }\n    if (args != null && args.min != null) {\n      this.min = args.min;\n    }\n    if (args != null && args.null_count != null) {\n      if (typeof args.null_count === 'number') {\n        this.null_count = new Int64(args.null_count);\n      } else {\n        this.null_count = args.null_count;\n      }\n    }\n    if (args != null && args.distinct_count != null) {\n      if (typeof args.distinct_count === 'number') {\n        this.distinct_count = new Int64(args.distinct_count);\n      } else {\n        this.distinct_count = args.distinct_count;\n      }\n    }\n    if (args != null && args.max_value != null) {\n      this.max_value = args.max_value;\n    }\n    if (args != null && args.min_value != null) {\n      this.min_value = args.min_value;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('Statistics');\n    if (this.max != null) {\n      output.writeFieldBegin('max', thrift.Thrift.Type.STRING, 1);\n      output.writeBinary(this.max);\n      output.writeFieldEnd();\n    }\n    if (this.min != null) {\n      output.writeFieldBegin('min', thrift.Thrift.Type.STRING, 2);\n      output.writeBinary(this.min);\n      output.writeFieldEnd();\n    }\n    if (this.null_count != null) {\n      output.writeFieldBegin('null_count', thrift.Thrift.Type.I64, 3);\n      output.writeI64(this.null_count);\n      output.writeFieldEnd();\n    }\n    if (this.distinct_count != null) {\n      output.writeFieldBegin('distinct_count', thrift.Thrift.Type.I64, 4);\n      output.writeI64(this.distinct_count);\n      output.writeFieldEnd();\n    }\n    if (this.max_value != null) {\n      output.writeFieldBegin('max_value', thrift.Thrift.Type.STRING, 5);\n      output.writeBinary(this.max_value);\n      output.writeFieldEnd();\n    }\n    if (this.min_value != null) {\n      output.writeFieldBegin('min_value', thrift.Thrift.Type.STRING, 6);\n      output.writeBinary(this.min_value);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): Statistics {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_1: Buffer = input.readBinary();\n            _args.max = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_2: Buffer = input.readBinary();\n            _args.min = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_3: Int64 = input.readI64();\n            _args.null_count = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_4: Int64 = input.readI64();\n            _args.distinct_count = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_5: Buffer = input.readBinary();\n            _args.max_value = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_6: Buffer = input.readBinary();\n            _args.min_value = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    return new Statistics(_args);\n  }\n}\n"],"mappings":"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"}