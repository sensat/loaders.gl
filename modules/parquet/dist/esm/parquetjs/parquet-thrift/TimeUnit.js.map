{"version":3,"file":"TimeUnit.js","names":["thrift","MicroSeconds","MilliSeconds","TimeUnit","constructor","args","_defineProperty","_fieldsSet","MILLIS","MICROS","Thrift","TProtocolException","TProtocolExceptionType","INVALID_DATA","fromMILLIS","fromMICROS","write","output","writeStructBegin","writeFieldBegin","Type","STRUCT","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","_returnValue","readStructBegin","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","skip","value_2","readFieldEnd","readStructEnd","UNKNOWN"],"sources":["../../../../src/parquetjs/parquet-thrift/TimeUnit.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as MicroSeconds from './MicroSeconds';\nimport * as MilliSeconds from './MilliSeconds';\nexport interface ITimeUnitArgs {\n  MILLIS?: MilliSeconds.MilliSeconds;\n  MICROS?: MicroSeconds.MicroSeconds;\n}\nexport class TimeUnit {\n  public MILLIS?: MilliSeconds.MilliSeconds;\n  public MICROS?: MicroSeconds.MicroSeconds;\n  constructor(args?: ITimeUnitArgs) {\n    let _fieldsSet: number = 0;\n    if (args != null) {\n      if (args.MILLIS != null) {\n        _fieldsSet++;\n        this.MILLIS = args.MILLIS;\n      }\n      if (args.MICROS != null) {\n        _fieldsSet++;\n        this.MICROS = args.MICROS;\n      }\n      if (_fieldsSet > 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with more than one set value!'\n        );\n      } else if (_fieldsSet < 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with no set value!'\n        );\n      }\n    }\n  }\n  public static fromMILLIS(MILLIS: MilliSeconds.MilliSeconds): TimeUnit {\n    return new TimeUnit({MILLIS});\n  }\n  public static fromMICROS(MICROS: MicroSeconds.MicroSeconds): TimeUnit {\n    return new TimeUnit({MICROS});\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('TimeUnit');\n    if (this.MILLIS != null) {\n      output.writeFieldBegin('MILLIS', thrift.Thrift.Type.STRUCT, 1);\n      this.MILLIS.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.MICROS != null) {\n      output.writeFieldBegin('MICROS', thrift.Thrift.Type.STRUCT, 2);\n      this.MICROS.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): TimeUnit {\n    let _fieldsSet: number = 0;\n    let _returnValue: TimeUnit | null = null;\n    input.readStructBegin();\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            _fieldsSet++;\n            const value_1: MilliSeconds.MilliSeconds = MilliSeconds.MilliSeconds.read(input);\n            _returnValue = TimeUnit.fromMILLIS(value_1);\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            _fieldsSet++;\n            const value_2: MicroSeconds.MicroSeconds = MicroSeconds.MicroSeconds.read(input);\n            _returnValue = TimeUnit.fromMICROS(value_2);\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_fieldsSet > 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with more than one set value!'\n      );\n    } else if (_fieldsSet < 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with no set value!'\n      );\n    }\n    if (_returnValue !== null) {\n      return _returnValue;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read data for TUnion'\n      );\n    }\n  }\n}\n"],"mappings":"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"}