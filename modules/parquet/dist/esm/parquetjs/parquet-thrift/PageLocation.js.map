{"version":3,"file":"PageLocation.js","names":["Int64","thrift","PageLocation","constructor","args","_defineProperty","offset","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","compressed_page_size","first_row_index","write","output","writeStructBegin","writeFieldBegin","Type","I64","writeI64","writeFieldEnd","I32","writeI32","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI64","skip","value_2","readI32","value_3","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/PageLocation.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport Int64 from 'node-int64';\nimport * as thrift from 'thrift';\nexport interface IPageLocationArgs {\n  offset: number | Int64;\n  compressed_page_size: number;\n  first_row_index: number | Int64;\n}\nexport class PageLocation {\n  public offset: Int64;\n  public compressed_page_size: number;\n  public first_row_index: Int64;\n  constructor(args: IPageLocationArgs) {\n    if (args != null && args.offset != null) {\n      if (typeof args.offset === 'number') {\n        this.offset = new Int64(args.offset);\n      } else {\n        this.offset = args.offset;\n      }\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[offset] is unset!'\n      );\n    }\n    if (args != null && args.compressed_page_size != null) {\n      this.compressed_page_size = args.compressed_page_size;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[compressed_page_size] is unset!'\n      );\n    }\n    if (args != null && args.first_row_index != null) {\n      if (typeof args.first_row_index === 'number') {\n        this.first_row_index = new Int64(args.first_row_index);\n      } else {\n        this.first_row_index = args.first_row_index;\n      }\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[first_row_index] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('PageLocation');\n    if (this.offset != null) {\n      output.writeFieldBegin('offset', thrift.Thrift.Type.I64, 1);\n      output.writeI64(this.offset);\n      output.writeFieldEnd();\n    }\n    if (this.compressed_page_size != null) {\n      output.writeFieldBegin('compressed_page_size', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.compressed_page_size);\n      output.writeFieldEnd();\n    }\n    if (this.first_row_index != null) {\n      output.writeFieldBegin('first_row_index', thrift.Thrift.Type.I64, 3);\n      output.writeI64(this.first_row_index);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): PageLocation {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_1: Int64 = input.readI64();\n            _args.offset = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.compressed_page_size = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_3: Int64 = input.readI64();\n            _args.first_row_index = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.offset !== undefined &&\n      _args.compressed_page_size !== undefined &&\n      _args.first_row_index !== undefined\n    ) {\n      return new PageLocation(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read PageLocation from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}