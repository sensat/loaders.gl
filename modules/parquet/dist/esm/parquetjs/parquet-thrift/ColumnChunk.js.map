{"version":3,"file":"ColumnChunk.js","names":["Int64","thrift","ColumnMetaData","ColumnChunk","constructor","args","_defineProperty","file_path","file_offset","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","meta_data","offset_index_offset","offset_index_length","column_index_offset","column_index_length","write","output","writeStructBegin","writeFieldBegin","Type","STRING","writeString","writeFieldEnd","I64","writeI64","STRUCT","I32","writeI32","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readString","skip","value_2","readI64","value_3","value_4","value_5","readI32","value_6","value_7","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/ColumnChunk.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport Int64 from 'node-int64';\nimport * as thrift from 'thrift';\nimport * as ColumnMetaData from './ColumnMetaData';\nexport interface IColumnChunkArgs {\n  file_path?: string;\n  file_offset: number | Int64;\n  meta_data?: ColumnMetaData.ColumnMetaData;\n  offset_index_offset?: number | Int64;\n  offset_index_length?: number;\n  column_index_offset?: number | Int64;\n  column_index_length?: number;\n}\nexport class ColumnChunk {\n  public file_path?: string;\n  public file_offset: Int64;\n  public meta_data?: ColumnMetaData.ColumnMetaData;\n  public offset_index_offset?: Int64;\n  public offset_index_length?: number;\n  public column_index_offset?: Int64;\n  public column_index_length?: number;\n  constructor(args: IColumnChunkArgs) {\n    if (args != null && args.file_path != null) {\n      this.file_path = args.file_path;\n    }\n    if (args != null && args.file_offset != null) {\n      if (typeof args.file_offset === 'number') {\n        this.file_offset = new Int64(args.file_offset);\n      } else {\n        this.file_offset = args.file_offset;\n      }\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[file_offset] is unset!'\n      );\n    }\n    if (args != null && args.meta_data != null) {\n      this.meta_data = args.meta_data;\n    }\n    if (args != null && args.offset_index_offset != null) {\n      if (typeof args.offset_index_offset === 'number') {\n        this.offset_index_offset = new Int64(args.offset_index_offset);\n      } else {\n        this.offset_index_offset = args.offset_index_offset;\n      }\n    }\n    if (args != null && args.offset_index_length != null) {\n      this.offset_index_length = args.offset_index_length;\n    }\n    if (args != null && args.column_index_offset != null) {\n      if (typeof args.column_index_offset === 'number') {\n        this.column_index_offset = new Int64(args.column_index_offset);\n      } else {\n        this.column_index_offset = args.column_index_offset;\n      }\n    }\n    if (args != null && args.column_index_length != null) {\n      this.column_index_length = args.column_index_length;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('ColumnChunk');\n    if (this.file_path != null) {\n      output.writeFieldBegin('file_path', thrift.Thrift.Type.STRING, 1);\n      output.writeString(this.file_path);\n      output.writeFieldEnd();\n    }\n    if (this.file_offset != null) {\n      output.writeFieldBegin('file_offset', thrift.Thrift.Type.I64, 2);\n      output.writeI64(this.file_offset);\n      output.writeFieldEnd();\n    }\n    if (this.meta_data != null) {\n      output.writeFieldBegin('meta_data', thrift.Thrift.Type.STRUCT, 3);\n      this.meta_data.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.offset_index_offset != null) {\n      output.writeFieldBegin('offset_index_offset', thrift.Thrift.Type.I64, 4);\n      output.writeI64(this.offset_index_offset);\n      output.writeFieldEnd();\n    }\n    if (this.offset_index_length != null) {\n      output.writeFieldBegin('offset_index_length', thrift.Thrift.Type.I32, 5);\n      output.writeI32(this.offset_index_length);\n      output.writeFieldEnd();\n    }\n    if (this.column_index_offset != null) {\n      output.writeFieldBegin('column_index_offset', thrift.Thrift.Type.I64, 6);\n      output.writeI64(this.column_index_offset);\n      output.writeFieldEnd();\n    }\n    if (this.column_index_length != null) {\n      output.writeFieldBegin('column_index_length', thrift.Thrift.Type.I32, 7);\n      output.writeI32(this.column_index_length);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): ColumnChunk {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_1: string = input.readString();\n            _args.file_path = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_2: Int64 = input.readI64();\n            _args.file_offset = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_3: ColumnMetaData.ColumnMetaData =\n              ColumnMetaData.ColumnMetaData.read(input);\n            _args.meta_data = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_4: Int64 = input.readI64();\n            _args.offset_index_offset = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_5: number = input.readI32();\n            _args.offset_index_length = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_6: Int64 = input.readI64();\n            _args.column_index_offset = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_7: number = input.readI32();\n            _args.column_index_length = value_7;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.file_offset !== undefined) {\n      return new ColumnChunk(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read ColumnChunk from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}