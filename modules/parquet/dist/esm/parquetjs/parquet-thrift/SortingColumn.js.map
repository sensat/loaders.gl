{"version":3,"file":"SortingColumn.js","names":["thrift","SortingColumn","constructor","args","_defineProperty","column_idx","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","descending","nulls_first","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","BOOL","writeBool","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","readBool","value_3","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/SortingColumn.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nexport interface ISortingColumnArgs {\n  column_idx: number;\n  descending: boolean;\n  nulls_first: boolean;\n}\nexport class SortingColumn {\n  public column_idx: number;\n  public descending: boolean;\n  public nulls_first: boolean;\n  constructor(args: ISortingColumnArgs) {\n    if (args != null && args.column_idx != null) {\n      this.column_idx = args.column_idx;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[column_idx] is unset!'\n      );\n    }\n    if (args != null && args.descending != null) {\n      this.descending = args.descending;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[descending] is unset!'\n      );\n    }\n    if (args != null && args.nulls_first != null) {\n      this.nulls_first = args.nulls_first;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[nulls_first] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('SortingColumn');\n    if (this.column_idx != null) {\n      output.writeFieldBegin('column_idx', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.column_idx);\n      output.writeFieldEnd();\n    }\n    if (this.descending != null) {\n      output.writeFieldBegin('descending', thrift.Thrift.Type.BOOL, 2);\n      output.writeBool(this.descending);\n      output.writeFieldEnd();\n    }\n    if (this.nulls_first != null) {\n      output.writeFieldBegin('nulls_first', thrift.Thrift.Type.BOOL, 3);\n      output.writeBool(this.nulls_first);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): SortingColumn {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.column_idx = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.BOOL) {\n            const value_2: boolean = input.readBool();\n            _args.descending = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.BOOL) {\n            const value_3: boolean = input.readBool();\n            _args.nulls_first = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.column_idx !== undefined &&\n      _args.descending !== undefined &&\n      _args.nulls_first !== undefined\n    ) {\n      return new SortingColumn(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read SortingColumn from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}