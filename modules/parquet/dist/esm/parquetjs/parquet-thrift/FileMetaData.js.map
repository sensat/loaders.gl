{"version":3,"file":"FileMetaData.js","names":["Int64","thrift","ColumnOrder","KeyValue","RowGroup","SchemaElement","FileMetaData","constructor","args","arguments","length","undefined","_defineProperty","version","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","schema","num_rows","row_groups","key_value_metadata","created_by","column_orders","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","LIST","writeListBegin","STRUCT","forEach","value_1","writeListEnd","I64","writeI64","value_2","value_3","STRING","writeString","value_4","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_5","readI32","skip","value_6","Array","metadata_1","readListBegin","size_1","size","i_1","value_7","push","readListEnd","value_8","readI64","value_9","metadata_2","size_2","i_2","value_10","value_11","metadata_3","size_3","i_3","value_12","value_13","readString","value_14","metadata_4","size_4","i_4","value_15","readFieldEnd","readStructEnd"],"sources":["../../../../src/parquetjs/parquet-thrift/FileMetaData.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport Int64 from 'node-int64';\nimport * as thrift from 'thrift';\nimport * as ColumnOrder from './ColumnOrder';\nimport * as KeyValue from './KeyValue';\nimport * as RowGroup from './RowGroup';\nimport * as SchemaElement from './SchemaElement';\nexport interface IFileMetaDataArgs {\n  version: number;\n  schema: Array<SchemaElement.SchemaElement>;\n  num_rows: number | Int64;\n  row_groups: Array<RowGroup.RowGroup>;\n  key_value_metadata?: Array<KeyValue.KeyValue>;\n  created_by?: string;\n  column_orders?: Array<ColumnOrder.ColumnOrder>;\n}\nexport class FileMetaData {\n  public version: number;\n  public schema: Array<SchemaElement.SchemaElement>;\n  public num_rows: Int64;\n  public row_groups: Array<RowGroup.RowGroup>;\n  public key_value_metadata?: Array<KeyValue.KeyValue>;\n  public created_by?: string;\n  public column_orders?: Array<ColumnOrder.ColumnOrder>;\n  constructor(args: IFileMetaDataArgs | null = null) {\n    if (args != null && args.version != null) {\n      this.version = args.version;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[version] is unset!'\n      );\n    }\n    if (args != null && args.schema != null) {\n      this.schema = args.schema;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[schema] is unset!'\n      );\n    }\n    if (args != null && args.num_rows != null) {\n      if (typeof args.num_rows === 'number') {\n        this.num_rows = new Int64(args.num_rows);\n      } else {\n        this.num_rows = args.num_rows;\n      }\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_rows] is unset!'\n      );\n    }\n    if (args != null && args.row_groups != null) {\n      this.row_groups = args.row_groups;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[row_groups] is unset!'\n      );\n    }\n    if (args != null && args.key_value_metadata != null) {\n      this.key_value_metadata = args.key_value_metadata;\n    }\n    if (args != null && args.created_by != null) {\n      this.created_by = args.created_by;\n    }\n    if (args != null && args.column_orders != null) {\n      this.column_orders = args.column_orders;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('FileMetaData');\n    if (this.version != null) {\n      output.writeFieldBegin('version', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.version);\n      output.writeFieldEnd();\n    }\n    if (this.schema != null) {\n      output.writeFieldBegin('schema', thrift.Thrift.Type.LIST, 2);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.schema.length);\n      this.schema.forEach((value_1: SchemaElement.SchemaElement): void => {\n        value_1.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    if (this.num_rows != null) {\n      output.writeFieldBegin('num_rows', thrift.Thrift.Type.I64, 3);\n      output.writeI64(this.num_rows);\n      output.writeFieldEnd();\n    }\n    if (this.row_groups != null) {\n      output.writeFieldBegin('row_groups', thrift.Thrift.Type.LIST, 4);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.row_groups.length);\n      this.row_groups.forEach((value_2: RowGroup.RowGroup): void => {\n        value_2.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    if (this.key_value_metadata != null) {\n      output.writeFieldBegin('key_value_metadata', thrift.Thrift.Type.LIST, 5);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.key_value_metadata.length);\n      this.key_value_metadata.forEach((value_3: KeyValue.KeyValue): void => {\n        value_3.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    if (this.created_by != null) {\n      output.writeFieldBegin('created_by', thrift.Thrift.Type.STRING, 6);\n      output.writeString(this.created_by);\n      output.writeFieldEnd();\n    }\n    if (this.column_orders != null) {\n      output.writeFieldBegin('column_orders', thrift.Thrift.Type.LIST, 7);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.column_orders.length);\n      this.column_orders.forEach((value_4: ColumnOrder.ColumnOrder): void => {\n        value_4.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): FileMetaData {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_5: number = input.readI32();\n            _args.version = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_6: Array<SchemaElement.SchemaElement> =\n              new Array<SchemaElement.SchemaElement>();\n            const metadata_1: thrift.TList = input.readListBegin();\n            const size_1: number = metadata_1.size;\n            for (let i_1: number = 0; i_1 < size_1; i_1++) {\n              const value_7: SchemaElement.SchemaElement = SchemaElement.SchemaElement.read(input);\n              value_6.push(value_7);\n            }\n            input.readListEnd();\n            _args.schema = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_8: Int64 = input.readI64();\n            _args.num_rows = value_8;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_9: Array<RowGroup.RowGroup> = new Array<RowGroup.RowGroup>();\n            const metadata_2: thrift.TList = input.readListBegin();\n            const size_2: number = metadata_2.size;\n            for (let i_2: number = 0; i_2 < size_2; i_2++) {\n              const value_10: RowGroup.RowGroup = RowGroup.RowGroup.read(input);\n              value_9.push(value_10);\n            }\n            input.readListEnd();\n            _args.row_groups = value_9;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_11: Array<KeyValue.KeyValue> = new Array<KeyValue.KeyValue>();\n            const metadata_3: thrift.TList = input.readListBegin();\n            const size_3: number = metadata_3.size;\n            for (let i_3: number = 0; i_3 < size_3; i_3++) {\n              const value_12: KeyValue.KeyValue = KeyValue.KeyValue.read(input);\n              value_11.push(value_12);\n            }\n            input.readListEnd();\n            _args.key_value_metadata = value_11;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_13: string = input.readString();\n            _args.created_by = value_13;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_14: Array<ColumnOrder.ColumnOrder> = new Array<ColumnOrder.ColumnOrder>();\n            const metadata_4: thrift.TList = input.readListBegin();\n            const size_4: number = metadata_4.size;\n            for (let i_4: number = 0; i_4 < size_4; i_4++) {\n              const value_15: ColumnOrder.ColumnOrder = ColumnOrder.ColumnOrder.read(input);\n              value_14.push(value_15);\n            }\n            input.readListEnd();\n            _args.column_orders = value_14;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.version !== undefined &&\n      _args.schema !== undefined &&\n      _args.num_rows !== undefined &&\n      _args.row_groups !== undefined\n    ) {\n      return new FileMetaData(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read FileMetaData from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}