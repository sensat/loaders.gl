{"version":3,"file":"DictionaryPageHeader.js","names":["thrift","DictionaryPageHeader","constructor","args","_defineProperty","num_values","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","encoding","is_sorted","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","BOOL","writeBool","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","readBool","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/DictionaryPageHeader.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as Encoding from './Encoding';\nexport interface IDictionaryPageHeaderArgs {\n  num_values: number;\n  encoding: Encoding.Encoding;\n  is_sorted?: boolean;\n}\nexport class DictionaryPageHeader {\n  public num_values: number;\n  public encoding: Encoding.Encoding;\n  public is_sorted?: boolean;\n  constructor(args: IDictionaryPageHeaderArgs) {\n    if (args != null && args.num_values != null) {\n      this.num_values = args.num_values;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_values] is unset!'\n      );\n    }\n    if (args != null && args.encoding != null) {\n      this.encoding = args.encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[encoding] is unset!'\n      );\n    }\n    if (args != null && args.is_sorted != null) {\n      this.is_sorted = args.is_sorted;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('DictionaryPageHeader');\n    if (this.num_values != null) {\n      output.writeFieldBegin('num_values', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.num_values);\n      output.writeFieldEnd();\n    }\n    if (this.encoding != null) {\n      output.writeFieldBegin('encoding', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.encoding);\n      output.writeFieldEnd();\n    }\n    if (this.is_sorted != null) {\n      output.writeFieldBegin('is_sorted', thrift.Thrift.Type.BOOL, 3);\n      output.writeBool(this.is_sorted);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): DictionaryPageHeader {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.num_values = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: Encoding.Encoding = input.readI32();\n            _args.encoding = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.BOOL) {\n            const value_3: boolean = input.readBool();\n            _args.is_sorted = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.num_values !== undefined && _args.encoding !== undefined) {\n      return new DictionaryPageHeader(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read DictionaryPageHeader from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}