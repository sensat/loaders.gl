{"version":3,"file":"KeyValue.js","names":["thrift","KeyValue","constructor","args","_defineProperty","key","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","value","write","output","writeStructBegin","writeFieldBegin","Type","STRING","writeString","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readString","skip","value_2","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/KeyValue.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nexport interface IKeyValueArgs {\n  key: string;\n  value?: string;\n}\nexport class KeyValue {\n  public key: string;\n  public value?: string;\n  constructor(args: IKeyValueArgs) {\n    if (args != null && args.key != null) {\n      this.key = args.key;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[key] is unset!'\n      );\n    }\n    if (args != null && args.value != null) {\n      this.value = args.value;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('KeyValue');\n    if (this.key != null) {\n      output.writeFieldBegin('key', thrift.Thrift.Type.STRING, 1);\n      output.writeString(this.key);\n      output.writeFieldEnd();\n    }\n    if (this.value != null) {\n      output.writeFieldBegin('value', thrift.Thrift.Type.STRING, 2);\n      output.writeString(this.value);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): KeyValue {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_1: string = input.readString();\n            _args.key = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_2: string = input.readString();\n            _args.value = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.key !== undefined) {\n      return new KeyValue(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read KeyValue from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}