{"version":3,"file":"OffsetIndex.js","names":["thrift","PageLocation","OffsetIndex","constructor","args","_defineProperty","page_locations","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","write","output","writeStructBegin","writeFieldBegin","Type","LIST","writeListBegin","STRUCT","length","forEach","value_1","writeListEnd","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_2","Array","metadata_1","readListBegin","size_1","size","i_1","value_3","push","readListEnd","skip","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/OffsetIndex.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as PageLocation from './PageLocation';\nexport interface IOffsetIndexArgs {\n  page_locations: Array<PageLocation.PageLocation>;\n}\nexport class OffsetIndex {\n  public page_locations: Array<PageLocation.PageLocation>;\n  constructor(args: IOffsetIndexArgs) {\n    if (args != null && args.page_locations != null) {\n      this.page_locations = args.page_locations;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[page_locations] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('OffsetIndex');\n    if (this.page_locations != null) {\n      output.writeFieldBegin('page_locations', thrift.Thrift.Type.LIST, 1);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.page_locations.length);\n      this.page_locations.forEach((value_1: PageLocation.PageLocation): void => {\n        value_1.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): OffsetIndex {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_2: Array<PageLocation.PageLocation> =\n              new Array<PageLocation.PageLocation>();\n            const metadata_1: thrift.TList = input.readListBegin();\n            const size_1: number = metadata_1.size;\n            for (let i_1: number = 0; i_1 < size_1; i_1++) {\n              const value_3: PageLocation.PageLocation = PageLocation.PageLocation.read(input);\n              value_2.push(value_3);\n            }\n            input.readListEnd();\n            _args.page_locations = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.page_locations !== undefined) {\n      return new OffsetIndex(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read OffsetIndex from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}