{"version":3,"file":"ColumnOrder.js","names":["thrift","TypeDefinedOrder","ColumnOrder","constructor","args","_defineProperty","_fieldsSet","TYPE_ORDER","Thrift","TProtocolException","TProtocolExceptionType","INVALID_DATA","fromTYPE_ORDER","write","output","writeStructBegin","writeFieldBegin","Type","STRUCT","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","_returnValue","readStructBegin","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","skip","readFieldEnd","readStructEnd","UNKNOWN"],"sources":["../../../../src/parquetjs/parquet-thrift/ColumnOrder.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as TypeDefinedOrder from './TypeDefinedOrder';\nexport interface IColumnOrderArgs {\n  TYPE_ORDER?: TypeDefinedOrder.TypeDefinedOrder;\n}\nexport class ColumnOrder {\n  public TYPE_ORDER?: TypeDefinedOrder.TypeDefinedOrder;\n  constructor(args?: IColumnOrderArgs) {\n    let _fieldsSet: number = 0;\n    if (args != null) {\n      if (args.TYPE_ORDER != null) {\n        _fieldsSet++;\n        this.TYPE_ORDER = args.TYPE_ORDER;\n      }\n      if (_fieldsSet > 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with more than one set value!'\n        );\n      } else if (_fieldsSet < 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with no set value!'\n        );\n      }\n    }\n  }\n  public static fromTYPE_ORDER(TYPE_ORDER: TypeDefinedOrder.TypeDefinedOrder): ColumnOrder {\n    return new ColumnOrder({TYPE_ORDER});\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('ColumnOrder');\n    if (this.TYPE_ORDER != null) {\n      output.writeFieldBegin('TYPE_ORDER', thrift.Thrift.Type.STRUCT, 1);\n      this.TYPE_ORDER.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): ColumnOrder {\n    let _fieldsSet: number = 0;\n    let _returnValue: ColumnOrder | null = null;\n    input.readStructBegin();\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            _fieldsSet++;\n            const value_1: TypeDefinedOrder.TypeDefinedOrder =\n              TypeDefinedOrder.TypeDefinedOrder.read(input);\n            _returnValue = ColumnOrder.fromTYPE_ORDER(value_1);\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_fieldsSet > 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with more than one set value!'\n      );\n    } else if (_fieldsSet < 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with no set value!'\n      );\n    }\n    if (_returnValue !== null) {\n      return _returnValue;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read data for TUnion'\n      );\n    }\n  }\n}\n"],"mappings":"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"}