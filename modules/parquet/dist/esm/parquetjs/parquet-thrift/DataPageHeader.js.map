{"version":3,"file":"DataPageHeader.js","names":["thrift","Statistics","DataPageHeader","constructor","args","_defineProperty","num_values","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","encoding","definition_level_encoding","repetition_level_encoding","statistics","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","STRUCT","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","value_4","value_5","readFieldEnd","readStructEnd","undefined"],"sources":["../../../../src/parquetjs/parquet-thrift/DataPageHeader.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as Encoding from './Encoding';\nimport * as Statistics from './Statistics';\nexport interface IDataPageHeaderArgs {\n  num_values: number;\n  encoding: Encoding.Encoding;\n  definition_level_encoding: Encoding.Encoding;\n  repetition_level_encoding: Encoding.Encoding;\n  statistics?: Statistics.Statistics;\n}\nexport class DataPageHeader {\n  public num_values: number;\n  public encoding: Encoding.Encoding;\n  public definition_level_encoding: Encoding.Encoding;\n  public repetition_level_encoding: Encoding.Encoding;\n  public statistics?: Statistics.Statistics;\n  constructor(args: IDataPageHeaderArgs) {\n    if (args != null && args.num_values != null) {\n      this.num_values = args.num_values;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[num_values] is unset!'\n      );\n    }\n    if (args != null && args.encoding != null) {\n      this.encoding = args.encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[encoding] is unset!'\n      );\n    }\n    if (args != null && args.definition_level_encoding != null) {\n      this.definition_level_encoding = args.definition_level_encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[definition_level_encoding] is unset!'\n      );\n    }\n    if (args != null && args.repetition_level_encoding != null) {\n      this.repetition_level_encoding = args.repetition_level_encoding;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[repetition_level_encoding] is unset!'\n      );\n    }\n    if (args != null && args.statistics != null) {\n      this.statistics = args.statistics;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('DataPageHeader');\n    if (this.num_values != null) {\n      output.writeFieldBegin('num_values', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.num_values);\n      output.writeFieldEnd();\n    }\n    if (this.encoding != null) {\n      output.writeFieldBegin('encoding', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.encoding);\n      output.writeFieldEnd();\n    }\n    if (this.definition_level_encoding != null) {\n      output.writeFieldBegin('definition_level_encoding', thrift.Thrift.Type.I32, 3);\n      output.writeI32(this.definition_level_encoding);\n      output.writeFieldEnd();\n    }\n    if (this.repetition_level_encoding != null) {\n      output.writeFieldBegin('repetition_level_encoding', thrift.Thrift.Type.I32, 4);\n      output.writeI32(this.repetition_level_encoding);\n      output.writeFieldEnd();\n    }\n    if (this.statistics != null) {\n      output.writeFieldBegin('statistics', thrift.Thrift.Type.STRUCT, 5);\n      this.statistics.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): DataPageHeader {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.num_values = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: Encoding.Encoding = input.readI32();\n            _args.encoding = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_3: Encoding.Encoding = input.readI32();\n            _args.definition_level_encoding = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_4: Encoding.Encoding = input.readI32();\n            _args.repetition_level_encoding = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_5: Statistics.Statistics = Statistics.Statistics.read(input);\n            _args.statistics = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.num_values !== undefined &&\n      _args.encoding !== undefined &&\n      _args.definition_level_encoding !== undefined &&\n      _args.repetition_level_encoding !== undefined\n    ) {\n      return new DataPageHeader(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read DataPageHeader from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}