{"version":3,"file":"parse-parquet-wasm.js","names":["_apacheArrow","require","_loadWasmNode","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","parseParquetWasm","_x","_x2","_parseParquetWasm","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","arrayBuffer","options","_options$parquet","wasmUrl","wasm","arrowIPCUint8Arr","arrowIPCBuffer","arrowTable","wrap","_callee$","_context","prev","parquet","loadWasm","sent","Uint8Array","readParquet","buffer","byteOffset","byteLength","tableFromIPC","abrupt","stop","input","reader","RecordBatchStreamReader","recordBatches","_iterator","_step","recordBatch","push","ArrowTable"],"sources":["../../../../src/lib/wasm/parse-parquet-wasm.ts"],"sourcesContent":["// eslint-disable\nimport type {RecordBatch} from 'apache-arrow';\nimport type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {Table as ArrowTable, RecordBatchStreamReader} from 'apache-arrow';\nimport {loadWasm} from './load-wasm/load-wasm-node';\n\nexport type ParquetWasmLoaderOptions = LoaderOptions & {\n  parquet?: {\n    type?: 'arrow-table';\n    wasmUrl?: string;\n  };\n};\n\nexport async function parseParquetWasm(\n  arrayBuffer: ArrayBuffer,\n  options?: ParquetWasmLoaderOptions\n): Promise<ArrowTable> {\n  const wasmUrl = options?.parquet?.wasmUrl;\n  const wasm = await loadWasm(wasmUrl);\n\n  const arr = new Uint8Array(arrayBuffer);\n  const arrowIPCUint8Arr = wasm.readParquet(arr);\n  const arrowIPCBuffer = arrowIPCUint8Arr.buffer.slice(\n    arrowIPCUint8Arr.byteOffset,\n    arrowIPCUint8Arr.byteLength + arrowIPCUint8Arr.byteOffset\n  );\n  const arrowTable = tableFromIPC(arrowIPCBuffer);\n  return arrowTable;\n}\n\n/**\n * Deserialize the IPC format into a {@link Table}. This function is a\n * convenience wrapper for {@link RecordBatchReader}. Opposite of {@link tableToIPC}.\n */\nfunction tableFromIPC(input: ArrayBuffer): ArrowTable {\n  const reader = RecordBatchStreamReader.from(input);\n  const recordBatches: RecordBatch[] = [];\n  for (const recordBatch of reader) {\n    recordBatches.push(recordBatch);\n  }\n  return new ArrowTable(recordBatches);\n}\n"],"mappings":"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"}