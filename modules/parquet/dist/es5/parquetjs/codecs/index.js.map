{"version":3,"file":"index.js","names":["PLAIN","_interopRequireWildcard","require","RLE","DICTIONARY","_declare","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","PARQUET_CODECS","encodeValues","decodeValues","PLAIN_DICTIONARY","RLE_DICTIONARY"],"sources":["../../../../src/parquetjs/codecs/index.ts"],"sourcesContent":["// Forked from https://github.com/kbajalc/parquets under MIT license (Copyright (c) 2017 ironSource Ltd.)\nimport type {ParquetCodec} from '../schema/declare';\nimport type {ParquetCodecKit} from './declare';\nimport * as PLAIN from './plain';\nimport * as RLE from './rle';\nimport * as DICTIONARY from './dictionary';\n\nexport * from './declare';\n\nexport const PARQUET_CODECS: Record<ParquetCodec, ParquetCodecKit> = {\n  PLAIN: {\n    encodeValues: PLAIN.encodeValues,\n    decodeValues: PLAIN.decodeValues\n  },\n  RLE: {\n    encodeValues: RLE.encodeValues,\n    decodeValues: RLE.decodeValues\n  },\n  // Using the PLAIN_DICTIONARY enum value is deprecated in the Parquet 2.0 specification.\n  PLAIN_DICTIONARY: {\n    // @ts-ignore\n    encodeValues: DICTIONARY.encodeValues,\n    decodeValues: DICTIONARY.decodeValues\n  },\n  // Prefer using RLE_DICTIONARY in a data page and PLAIN in a dictionary page for Parquet 2.0+ files.\n  RLE_DICTIONARY: {\n    // @ts-ignore\n    encodeValues: DICTIONARY.encodeValues,\n    decodeValues: DICTIONARY.decodeValues\n  }\n};\n"],"mappings":";;;;;;;;;;AAGA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,GAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,uBAAA,CAAAC,OAAA;AAEA,IAAAG,QAAA,GAAAH,OAAA;AAAAI,MAAA,CAAAC,IAAA,CAAAF,QAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,QAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,IAAA;MAAA,OAAAZ,QAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AAA0B,SAAAS,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAlB,wBAAAsB,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,4BAAAG,OAAA,EAAAH,GAAA,UAAAI,KAAA,GAAAT,wBAAA,CAAAC,WAAA,OAAAQ,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAL,GAAA,YAAAI,KAAA,CAAAV,GAAA,CAAAM,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAxB,MAAA,CAAAS,cAAA,IAAAT,MAAA,CAAAyB,wBAAA,WAAAtB,GAAA,IAAAc,GAAA,QAAAd,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAW,GAAA,EAAAd,GAAA,SAAAuB,IAAA,GAAAF,qBAAA,GAAAxB,MAAA,CAAAyB,wBAAA,CAAAR,GAAA,EAAAd,GAAA,cAAAuB,IAAA,KAAAA,IAAA,CAAAf,GAAA,IAAAe,IAAA,CAAAC,GAAA,KAAA3B,MAAA,CAAAS,cAAA,CAAAc,MAAA,EAAApB,GAAA,EAAAuB,IAAA,YAAAH,MAAA,CAAApB,GAAA,IAAAc,GAAA,CAAAd,GAAA,SAAAoB,MAAA,CAAAH,OAAA,GAAAH,GAAA,MAAAI,KAAA,IAAAA,KAAA,CAAAM,GAAA,CAAAV,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAEnB,IAAMK,cAAqD,GAAG;EACnElC,KAAK,EAAE;IACLmC,YAAY,EAAEnC,KAAK,CAACmC,YAAY;IAChCC,YAAY,EAAEpC,KAAK,CAACoC;EACtB,CAAC;EACDjC,GAAG,EAAE;IACHgC,YAAY,EAAEhC,GAAG,CAACgC,YAAY;IAC9BC,YAAY,EAAEjC,GAAG,CAACiC;EACpB,CAAC;EAEDC,gBAAgB,EAAE;IAEhBF,YAAY,EAAE/B,UAAU,CAAC+B,YAAY;IACrCC,YAAY,EAAEhC,UAAU,CAACgC;EAC3B,CAAC;EAEDE,cAAc,EAAE;IAEdH,YAAY,EAAE/B,UAAU,CAAC+B,YAAY;IACrCC,YAAY,EAAEhC,UAAU,CAACgC;EAC3B;AACF,CAAC;AAACtB,OAAA,CAAAoB,cAAA,GAAAA,cAAA"}