{"version":3,"file":"SchemaElement.js","names":["thrift","_interopRequireWildcard","require","LogicalType","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SchemaElement","args","_classCallCheck2","_defineProperty2","type","type_length","repetition_type","name","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","num_children","converted_type","scale","precision","field_id","logicalType","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","STRING","writeString","STRUCT","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","value_4","readString","value_5","value_6","value_7","value_8","value_9","value_10","readFieldEnd","readStructEnd","undefined","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/SchemaElement.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as ConvertedType from './ConvertedType';\nimport * as FieldRepetitionType from './FieldRepetitionType';\nimport * as LogicalType from './LogicalType';\nimport * as Type from './Type';\nexport interface ISchemaElementArgs {\n  type?: Type.Type;\n  type_length?: number;\n  repetition_type?: FieldRepetitionType.FieldRepetitionType;\n  name: string;\n  num_children?: number;\n  converted_type?: ConvertedType.ConvertedType;\n  scale?: number;\n  precision?: number;\n  field_id?: number;\n  logicalType?: LogicalType.LogicalType;\n}\nexport class SchemaElement {\n  public type?: Type.Type;\n  public type_length?: number;\n  public repetition_type?: FieldRepetitionType.FieldRepetitionType;\n  public name: string;\n  public num_children?: number;\n  public converted_type?: ConvertedType.ConvertedType;\n  public scale?: number;\n  public precision?: number;\n  public field_id?: number;\n  public logicalType?: LogicalType.LogicalType;\n  constructor(args: ISchemaElementArgs) {\n    if (args != null && args.type != null) {\n      this.type = args.type;\n    }\n    if (args != null && args.type_length != null) {\n      this.type_length = args.type_length;\n    }\n    if (args != null && args.repetition_type != null) {\n      this.repetition_type = args.repetition_type;\n    }\n    if (args != null && args.name != null) {\n      this.name = args.name;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[name] is unset!'\n      );\n    }\n    if (args != null && args.num_children != null) {\n      this.num_children = args.num_children;\n    }\n    if (args != null && args.converted_type != null) {\n      this.converted_type = args.converted_type;\n    }\n    if (args != null && args.scale != null) {\n      this.scale = args.scale;\n    }\n    if (args != null && args.precision != null) {\n      this.precision = args.precision;\n    }\n    if (args != null && args.field_id != null) {\n      this.field_id = args.field_id;\n    }\n    if (args != null && args.logicalType != null) {\n      this.logicalType = args.logicalType;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('SchemaElement');\n    if (this.type != null) {\n      output.writeFieldBegin('type', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.type);\n      output.writeFieldEnd();\n    }\n    if (this.type_length != null) {\n      output.writeFieldBegin('type_length', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.type_length);\n      output.writeFieldEnd();\n    }\n    if (this.repetition_type != null) {\n      output.writeFieldBegin('repetition_type', thrift.Thrift.Type.I32, 3);\n      output.writeI32(this.repetition_type);\n      output.writeFieldEnd();\n    }\n    if (this.name != null) {\n      output.writeFieldBegin('name', thrift.Thrift.Type.STRING, 4);\n      output.writeString(this.name);\n      output.writeFieldEnd();\n    }\n    if (this.num_children != null) {\n      output.writeFieldBegin('num_children', thrift.Thrift.Type.I32, 5);\n      output.writeI32(this.num_children);\n      output.writeFieldEnd();\n    }\n    if (this.converted_type != null) {\n      output.writeFieldBegin('converted_type', thrift.Thrift.Type.I32, 6);\n      output.writeI32(this.converted_type);\n      output.writeFieldEnd();\n    }\n    if (this.scale != null) {\n      output.writeFieldBegin('scale', thrift.Thrift.Type.I32, 7);\n      output.writeI32(this.scale);\n      output.writeFieldEnd();\n    }\n    if (this.precision != null) {\n      output.writeFieldBegin('precision', thrift.Thrift.Type.I32, 8);\n      output.writeI32(this.precision);\n      output.writeFieldEnd();\n    }\n    if (this.field_id != null) {\n      output.writeFieldBegin('field_id', thrift.Thrift.Type.I32, 9);\n      output.writeI32(this.field_id);\n      output.writeFieldEnd();\n    }\n    if (this.logicalType != null) {\n      output.writeFieldBegin('logicalType', thrift.Thrift.Type.STRUCT, 10);\n      this.logicalType.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): SchemaElement {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: Type.Type = input.readI32();\n            _args.type = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.type_length = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_3: FieldRepetitionType.FieldRepetitionType = input.readI32();\n            _args.repetition_type = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_4: string = input.readString();\n            _args.name = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_5: number = input.readI32();\n            _args.num_children = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_6: ConvertedType.ConvertedType = input.readI32();\n            _args.converted_type = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_7: number = input.readI32();\n            _args.scale = value_7;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 8:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_8: number = input.readI32();\n            _args.precision = value_8;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 9:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_9: number = input.readI32();\n            _args.field_id = value_9;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 10:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_10: LogicalType.LogicalType = LogicalType.LogicalType.read(input);\n            _args.logicalType = value_10;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.name !== undefined) {\n      return new SchemaElement(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read SchemaElement from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}