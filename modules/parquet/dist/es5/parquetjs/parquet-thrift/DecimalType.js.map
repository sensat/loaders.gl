{"version":3,"file":"DecimalType.js","names":["thrift","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DecimalType","args","_classCallCheck2","_defineProperty2","scale","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","precision","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","readFieldEnd","readStructEnd","undefined","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/DecimalType.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nexport interface IDecimalTypeArgs {\n  scale: number;\n  precision: number;\n}\nexport class DecimalType {\n  public scale: number;\n  public precision: number;\n  constructor(args: IDecimalTypeArgs) {\n    if (args != null && args.scale != null) {\n      this.scale = args.scale;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[scale] is unset!'\n      );\n    }\n    if (args != null && args.precision != null) {\n      this.precision = args.precision;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[precision] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('DecimalType');\n    if (this.scale != null) {\n      output.writeFieldBegin('scale', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.scale);\n      output.writeFieldEnd();\n    }\n    if (this.precision != null) {\n      output.writeFieldBegin('precision', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.precision);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): DecimalType {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: number = input.readI32();\n            _args.scale = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.precision = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.scale !== undefined && _args.precision !== undefined) {\n      return new DecimalType(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read DecimalType from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}