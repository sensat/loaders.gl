{"version":3,"file":"OffsetIndex.js","names":["thrift","_interopRequireWildcard","require","PageLocation","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","OffsetIndex","args","_classCallCheck2","_defineProperty2","page_locations","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","LIST","writeListBegin","STRUCT","length","forEach","value_1","writeListEnd","writeFieldEnd","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_2","Array","metadata_1","readListBegin","size_1","size","i_1","value_3","push","readListEnd","skip","readFieldEnd","readStructEnd","undefined","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/OffsetIndex.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as PageLocation from './PageLocation';\nexport interface IOffsetIndexArgs {\n  page_locations: Array<PageLocation.PageLocation>;\n}\nexport class OffsetIndex {\n  public page_locations: Array<PageLocation.PageLocation>;\n  constructor(args: IOffsetIndexArgs) {\n    if (args != null && args.page_locations != null) {\n      this.page_locations = args.page_locations;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[page_locations] is unset!'\n      );\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('OffsetIndex');\n    if (this.page_locations != null) {\n      output.writeFieldBegin('page_locations', thrift.Thrift.Type.LIST, 1);\n      output.writeListBegin(thrift.Thrift.Type.STRUCT, this.page_locations.length);\n      this.page_locations.forEach((value_1: PageLocation.PageLocation): void => {\n        value_1.write(output);\n      });\n      output.writeListEnd();\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): OffsetIndex {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.LIST) {\n            const value_2: Array<PageLocation.PageLocation> =\n              new Array<PageLocation.PageLocation>();\n            const metadata_1: thrift.TList = input.readListBegin();\n            const size_1: number = metadata_1.size;\n            for (let i_1: number = 0; i_1 < size_1; i_1++) {\n              const value_3: PageLocation.PageLocation = PageLocation.PageLocation.read(input);\n              value_2.push(value_3);\n            }\n            input.readListEnd();\n            _args.page_locations = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.page_locations !== undefined) {\n      return new OffsetIndex(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read OffsetIndex from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}