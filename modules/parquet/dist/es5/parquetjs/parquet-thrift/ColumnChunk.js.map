{"version":3,"file":"ColumnChunk.js","names":["_nodeInt","_interopRequireDefault","require","thrift","_interopRequireWildcard","ColumnMetaData","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ColumnChunk","args","_classCallCheck2","_defineProperty2","file_path","file_offset","Int64","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","meta_data","offset_index_offset","offset_index_length","column_index_offset","column_index_length","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","STRING","writeString","writeFieldEnd","I64","writeI64","STRUCT","I32","writeI32","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readString","skip","value_2","readI64","value_3","value_4","value_5","readI32","value_6","value_7","readFieldEnd","readStructEnd","undefined","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/ColumnChunk.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport Int64 from 'node-int64';\nimport * as thrift from 'thrift';\nimport * as ColumnMetaData from './ColumnMetaData';\nexport interface IColumnChunkArgs {\n  file_path?: string;\n  file_offset: number | Int64;\n  meta_data?: ColumnMetaData.ColumnMetaData;\n  offset_index_offset?: number | Int64;\n  offset_index_length?: number;\n  column_index_offset?: number | Int64;\n  column_index_length?: number;\n}\nexport class ColumnChunk {\n  public file_path?: string;\n  public file_offset: Int64;\n  public meta_data?: ColumnMetaData.ColumnMetaData;\n  public offset_index_offset?: Int64;\n  public offset_index_length?: number;\n  public column_index_offset?: Int64;\n  public column_index_length?: number;\n  constructor(args: IColumnChunkArgs) {\n    if (args != null && args.file_path != null) {\n      this.file_path = args.file_path;\n    }\n    if (args != null && args.file_offset != null) {\n      if (typeof args.file_offset === 'number') {\n        this.file_offset = new Int64(args.file_offset);\n      } else {\n        this.file_offset = args.file_offset;\n      }\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[file_offset] is unset!'\n      );\n    }\n    if (args != null && args.meta_data != null) {\n      this.meta_data = args.meta_data;\n    }\n    if (args != null && args.offset_index_offset != null) {\n      if (typeof args.offset_index_offset === 'number') {\n        this.offset_index_offset = new Int64(args.offset_index_offset);\n      } else {\n        this.offset_index_offset = args.offset_index_offset;\n      }\n    }\n    if (args != null && args.offset_index_length != null) {\n      this.offset_index_length = args.offset_index_length;\n    }\n    if (args != null && args.column_index_offset != null) {\n      if (typeof args.column_index_offset === 'number') {\n        this.column_index_offset = new Int64(args.column_index_offset);\n      } else {\n        this.column_index_offset = args.column_index_offset;\n      }\n    }\n    if (args != null && args.column_index_length != null) {\n      this.column_index_length = args.column_index_length;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('ColumnChunk');\n    if (this.file_path != null) {\n      output.writeFieldBegin('file_path', thrift.Thrift.Type.STRING, 1);\n      output.writeString(this.file_path);\n      output.writeFieldEnd();\n    }\n    if (this.file_offset != null) {\n      output.writeFieldBegin('file_offset', thrift.Thrift.Type.I64, 2);\n      output.writeI64(this.file_offset);\n      output.writeFieldEnd();\n    }\n    if (this.meta_data != null) {\n      output.writeFieldBegin('meta_data', thrift.Thrift.Type.STRUCT, 3);\n      this.meta_data.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.offset_index_offset != null) {\n      output.writeFieldBegin('offset_index_offset', thrift.Thrift.Type.I64, 4);\n      output.writeI64(this.offset_index_offset);\n      output.writeFieldEnd();\n    }\n    if (this.offset_index_length != null) {\n      output.writeFieldBegin('offset_index_length', thrift.Thrift.Type.I32, 5);\n      output.writeI32(this.offset_index_length);\n      output.writeFieldEnd();\n    }\n    if (this.column_index_offset != null) {\n      output.writeFieldBegin('column_index_offset', thrift.Thrift.Type.I64, 6);\n      output.writeI64(this.column_index_offset);\n      output.writeFieldEnd();\n    }\n    if (this.column_index_length != null) {\n      output.writeFieldBegin('column_index_length', thrift.Thrift.Type.I32, 7);\n      output.writeI32(this.column_index_length);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): ColumnChunk {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRING) {\n            const value_1: string = input.readString();\n            _args.file_path = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_2: Int64 = input.readI64();\n            _args.file_offset = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_3: ColumnMetaData.ColumnMetaData =\n              ColumnMetaData.ColumnMetaData.read(input);\n            _args.meta_data = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_4: Int64 = input.readI64();\n            _args.offset_index_offset = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_5: number = input.readI32();\n            _args.offset_index_length = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.I64) {\n            const value_6: Int64 = input.readI64();\n            _args.column_index_offset = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_7: number = input.readI32();\n            _args.column_index_length = value_7;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_args.file_offset !== undefined) {\n      return new ColumnChunk(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read ColumnChunk from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}