{"version":3,"file":"PageHeader.js","names":["thrift","_interopRequireWildcard","require","DataPageHeader","DataPageHeaderV2","DictionaryPageHeader","IndexPageHeader","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","PageHeader","args","_classCallCheck2","_defineProperty2","type","Thrift","TProtocolException","TProtocolExceptionType","UNKNOWN","uncompressed_page_size","compressed_page_size","crc","data_page_header","index_page_header","dictionary_page_header","data_page_header_v2","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","I32","writeI32","writeFieldEnd","STRUCT","writeFieldStop","writeStructEnd","read","input","readStructBegin","_args","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","readI32","skip","value_2","value_3","value_4","value_5","value_6","value_7","value_8","readFieldEnd","readStructEnd","undefined","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/PageHeader.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as DataPageHeader from './DataPageHeader';\nimport * as DataPageHeaderV2 from './DataPageHeaderV2';\nimport * as DictionaryPageHeader from './DictionaryPageHeader';\nimport * as IndexPageHeader from './IndexPageHeader';\nimport * as PageType from './PageType';\nexport interface IPageHeaderArgs {\n  type: PageType.PageType;\n  uncompressed_page_size: number;\n  compressed_page_size: number;\n  crc?: number;\n  data_page_header?: DataPageHeader.DataPageHeader;\n  index_page_header?: IndexPageHeader.IndexPageHeader;\n  dictionary_page_header?: DictionaryPageHeader.DictionaryPageHeader;\n  data_page_header_v2?: DataPageHeaderV2.DataPageHeaderV2;\n}\nexport class PageHeader {\n  public type: PageType.PageType;\n  public uncompressed_page_size: number;\n  public compressed_page_size: number;\n  public crc?: number;\n  public data_page_header?: DataPageHeader.DataPageHeader;\n  public index_page_header?: IndexPageHeader.IndexPageHeader;\n  public dictionary_page_header?: DictionaryPageHeader.DictionaryPageHeader;\n  public data_page_header_v2?: DataPageHeaderV2.DataPageHeaderV2;\n  constructor(args: IPageHeaderArgs) {\n    if (args != null && args.type != null) {\n      this.type = args.type;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[type] is unset!'\n      );\n    }\n    if (args != null && args.uncompressed_page_size != null) {\n      this.uncompressed_page_size = args.uncompressed_page_size;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[uncompressed_page_size] is unset!'\n      );\n    }\n    if (args != null && args.compressed_page_size != null) {\n      this.compressed_page_size = args.compressed_page_size;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Required field[compressed_page_size] is unset!'\n      );\n    }\n    if (args != null && args.crc != null) {\n      this.crc = args.crc;\n    }\n    if (args != null && args.data_page_header != null) {\n      this.data_page_header = args.data_page_header;\n    }\n    if (args != null && args.index_page_header != null) {\n      this.index_page_header = args.index_page_header;\n    }\n    if (args != null && args.dictionary_page_header != null) {\n      this.dictionary_page_header = args.dictionary_page_header;\n    }\n    if (args != null && args.data_page_header_v2 != null) {\n      this.data_page_header_v2 = args.data_page_header_v2;\n    }\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('PageHeader');\n    if (this.type != null) {\n      output.writeFieldBegin('type', thrift.Thrift.Type.I32, 1);\n      output.writeI32(this.type);\n      output.writeFieldEnd();\n    }\n    if (this.uncompressed_page_size != null) {\n      output.writeFieldBegin('uncompressed_page_size', thrift.Thrift.Type.I32, 2);\n      output.writeI32(this.uncompressed_page_size);\n      output.writeFieldEnd();\n    }\n    if (this.compressed_page_size != null) {\n      output.writeFieldBegin('compressed_page_size', thrift.Thrift.Type.I32, 3);\n      output.writeI32(this.compressed_page_size);\n      output.writeFieldEnd();\n    }\n    if (this.crc != null) {\n      output.writeFieldBegin('crc', thrift.Thrift.Type.I32, 4);\n      output.writeI32(this.crc);\n      output.writeFieldEnd();\n    }\n    if (this.data_page_header != null) {\n      output.writeFieldBegin('data_page_header', thrift.Thrift.Type.STRUCT, 5);\n      this.data_page_header.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.index_page_header != null) {\n      output.writeFieldBegin('index_page_header', thrift.Thrift.Type.STRUCT, 6);\n      this.index_page_header.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.dictionary_page_header != null) {\n      output.writeFieldBegin('dictionary_page_header', thrift.Thrift.Type.STRUCT, 7);\n      this.dictionary_page_header.write(output);\n      output.writeFieldEnd();\n    }\n    if (this.data_page_header_v2 != null) {\n      output.writeFieldBegin('data_page_header_v2', thrift.Thrift.Type.STRUCT, 8);\n      this.data_page_header_v2.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): PageHeader {\n    input.readStructBegin();\n    let _args: any = {};\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_1: PageType.PageType = input.readI32();\n            _args.type = value_1;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 2:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_2: number = input.readI32();\n            _args.uncompressed_page_size = value_2;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 3:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_3: number = input.readI32();\n            _args.compressed_page_size = value_3;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 4:\n          if (fieldType === thrift.Thrift.Type.I32) {\n            const value_4: number = input.readI32();\n            _args.crc = value_4;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 5:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_5: DataPageHeader.DataPageHeader =\n              DataPageHeader.DataPageHeader.read(input);\n            _args.data_page_header = value_5;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 6:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_6: IndexPageHeader.IndexPageHeader =\n              IndexPageHeader.IndexPageHeader.read(input);\n            _args.index_page_header = value_6;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 7:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_7: DictionaryPageHeader.DictionaryPageHeader =\n              DictionaryPageHeader.DictionaryPageHeader.read(input);\n            _args.dictionary_page_header = value_7;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        case 8:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            const value_8: DataPageHeaderV2.DataPageHeaderV2 =\n              DataPageHeaderV2.DataPageHeaderV2.read(input);\n            _args.data_page_header_v2 = value_8;\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (\n      _args.type !== undefined &&\n      _args.uncompressed_page_size !== undefined &&\n      _args.compressed_page_size !== undefined\n    ) {\n      return new PageHeader(_args);\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read PageHeader from input'\n      );\n    }\n  }\n}\n"],"mappings":"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"}