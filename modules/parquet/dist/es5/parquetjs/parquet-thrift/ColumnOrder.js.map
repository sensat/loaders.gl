{"version":3,"file":"ColumnOrder.js","names":["thrift","_interopRequireWildcard","require","TypeDefinedOrder","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ColumnOrder","args","_classCallCheck2","_defineProperty2","_fieldsSet","TYPE_ORDER","Thrift","TProtocolException","TProtocolExceptionType","INVALID_DATA","_createClass2","value","write","output","writeStructBegin","writeFieldBegin","Type","STRUCT","writeFieldEnd","writeFieldStop","writeStructEnd","fromTYPE_ORDER","read","input","_returnValue","readStructBegin","ret","readFieldBegin","fieldType","ftype","fieldId","fid","STOP","value_1","skip","readFieldEnd","readStructEnd","UNKNOWN","exports"],"sources":["../../../../src/parquetjs/parquet-thrift/ColumnOrder.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/*\n * Autogenerated by @creditkarma/thrift-typescript v3.7.2\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n */\nimport * as thrift from 'thrift';\nimport * as TypeDefinedOrder from './TypeDefinedOrder';\nexport interface IColumnOrderArgs {\n  TYPE_ORDER?: TypeDefinedOrder.TypeDefinedOrder;\n}\nexport class ColumnOrder {\n  public TYPE_ORDER?: TypeDefinedOrder.TypeDefinedOrder;\n  constructor(args?: IColumnOrderArgs) {\n    let _fieldsSet: number = 0;\n    if (args != null) {\n      if (args.TYPE_ORDER != null) {\n        _fieldsSet++;\n        this.TYPE_ORDER = args.TYPE_ORDER;\n      }\n      if (_fieldsSet > 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with more than one set value!'\n        );\n      } else if (_fieldsSet < 1) {\n        throw new thrift.Thrift.TProtocolException(\n          thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n          'Cannot read a TUnion with no set value!'\n        );\n      }\n    }\n  }\n  public static fromTYPE_ORDER(TYPE_ORDER: TypeDefinedOrder.TypeDefinedOrder): ColumnOrder {\n    return new ColumnOrder({TYPE_ORDER});\n  }\n  public write(output: thrift.TProtocol): void {\n    output.writeStructBegin('ColumnOrder');\n    if (this.TYPE_ORDER != null) {\n      output.writeFieldBegin('TYPE_ORDER', thrift.Thrift.Type.STRUCT, 1);\n      this.TYPE_ORDER.write(output);\n      output.writeFieldEnd();\n    }\n    output.writeFieldStop();\n    output.writeStructEnd();\n    return;\n  }\n  public static read(input: thrift.TProtocol): ColumnOrder {\n    let _fieldsSet: number = 0;\n    let _returnValue: ColumnOrder | null = null;\n    input.readStructBegin();\n    while (true) {\n      const ret: thrift.TField = input.readFieldBegin();\n      const fieldType: thrift.Thrift.Type = ret.ftype;\n      const fieldId: number = ret.fid;\n      if (fieldType === thrift.Thrift.Type.STOP) {\n        break;\n      }\n      switch (fieldId) {\n        case 1:\n          if (fieldType === thrift.Thrift.Type.STRUCT) {\n            _fieldsSet++;\n            const value_1: TypeDefinedOrder.TypeDefinedOrder =\n              TypeDefinedOrder.TypeDefinedOrder.read(input);\n            _returnValue = ColumnOrder.fromTYPE_ORDER(value_1);\n          } else {\n            input.skip(fieldType);\n          }\n          break;\n        default: {\n          input.skip(fieldType);\n        }\n      }\n      input.readFieldEnd();\n    }\n    input.readStructEnd();\n    if (_fieldsSet > 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with more than one set value!'\n      );\n    } else if (_fieldsSet < 1) {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.INVALID_DATA,\n        'Cannot read a TUnion with no set value!'\n      );\n    }\n    if (_returnValue !== null) {\n      return _returnValue;\n    } else {\n      throw new thrift.Thrift.TProtocolException(\n        thrift.Thrift.TProtocolExceptionType.UNKNOWN,\n        'Unable to read data for TUnion'\n      );\n    }\n  }\n}\n"],"mappings":"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"}