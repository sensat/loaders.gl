{"version":3,"file":"digest-utils.js","names":["_base64Utils","require","toHex","cipher","hexString","toString","concat","hexToBase64","hexstring","length","matches","match","string","map","a","String","fromCharCode","parseInt","join","toBase64"],"sources":["../../../../src/lib/utils/digest-utils.ts"],"sourcesContent":["import {toBase64} from './base64-utils';\n\n/**\n *\n */\nexport function toHex(cipher: number): string {\n  const hexString = cipher.toString(16);\n  return hexString === '0' ? `0${hexString}` : hexString;\n}\n\n/**\n * @see https://stackoverflow.com/questions/23190056/hex-to-base64-converter-for-javascript\n */\nexport function hexToBase64(hexstring: string): string {\n  // Add leading zero to keep even count of digits\n  // eg. f85d741 => 0f85d741\n  if (hexstring.length % 2 !== 0) {\n    hexstring = `0${hexstring}`;\n  }\n  const matches = hexstring.match(/\\w{2}/g) || [];\n  const string = matches.map((a) => String.fromCharCode(parseInt(a, 16))).join('');\n  // TODO - define how to handle failures\n  return toBase64(string) || '';\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAKO,SAASC,KAAKA,CAACC,MAAc,EAAU;EAC5C,IAAMC,SAAS,GAAGD,MAAM,CAACE,QAAQ,CAAC,EAAE,CAAC;EACrC,OAAOD,SAAS,KAAK,GAAG,OAAAE,MAAA,CAAOF,SAAS,IAAKA,SAAS;AACxD;AAKO,SAASG,WAAWA,CAACC,SAAiB,EAAU;EAGrD,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9BD,SAAS,OAAAF,MAAA,CAAOE,SAAS,CAAE;EAC7B;EACA,IAAME,OAAO,GAAGF,SAAS,CAACG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE;EAC/C,IAAMC,MAAM,GAAGF,OAAO,CAACG,GAAG,CAAC,UAACC,CAAC;IAAA,OAAKC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACH,CAAC,EAAE,EAAE,CAAC,CAAC;EAAA,EAAC,CAACI,IAAI,CAAC,EAAE,CAAC;EAEhF,OAAO,IAAAC,qBAAQ,EAACP,MAAM,CAAC,IAAI,EAAE;AAC/B"}