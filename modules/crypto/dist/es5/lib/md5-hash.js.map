{"version":3,"file":"md5-hash.js","names":["_hash2","require","_md5Wasm","_interopRequireDefault","_digestUtils","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","MD5Hash","_Hash","_inherits2","_super","_this","options","length","undefined","_classCallCheck2","_defineProperty2","_assertThisInitialized2","_createClass2","key","value","_hash","_asyncToGenerator2","_regenerator","mark","_callee","input","md5Promise","hex","wrap","_callee$","_context","prev","next","Promise","resolve","reject","md5WASM","then","catch","sent","abrupt","hexToBase64","stop","hash","_x","Hash","exports"],"sources":["../../../src/lib/md5-hash.ts"],"sourcesContent":["// Fork of https://github.com/briantbutton/md5-wasm under MIT license\nimport {Hash} from './hash';\nimport md5WASM from './algorithms/md5-wasm';\nimport {hexToBase64} from './utils/digest-utils';\n\n/**\n * A transform that calculates MD5 hashes, passing data through\n */\nexport class MD5Hash extends Hash {\n  readonly name = 'md5';\n  readonly options;\n\n  constructor(options = {}) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input: ArrayBuffer): Promise<string> {\n    const md5Promise = new Promise<string>((resolve, reject) =>\n      // @ts-expect-error\n      md5WASM(input).then(resolve).catch(reject)\n    );\n    const hex = await md5Promise;\n    return hexToBase64(hex);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAAiD,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;AAAA,IAKpCC,OAAO,aAAAC,KAAA;EAAA,IAAAC,UAAA,CAAAlB,OAAA,EAAAgB,OAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAA1B,YAAA,CAAAuB,OAAA;EAIlB,SAAAA,QAAA,EAA0B;IAAA,IAAAI,KAAA;IAAA,IAAdC,OAAO,GAAAf,SAAA,CAAAgB,MAAA,QAAAhB,SAAA,QAAAiB,SAAA,GAAAjB,SAAA,MAAG,CAAC,CAAC;IAAA,IAAAkB,gBAAA,CAAAxB,OAAA,QAAAgB,OAAA;IACtBI,KAAA,GAAAD,MAAA,CAAAL,IAAA;IAAQ,IAAAW,gBAAA,CAAAzB,OAAA,MAAA0B,uBAAA,CAAA1B,OAAA,EAAAoB,KAAA,WAJM,KAAK;IAAA,IAAAK,gBAAA,CAAAzB,OAAA,MAAA0B,uBAAA,CAAA1B,OAAA,EAAAoB,KAAA;IAKnBA,KAAA,CAAKC,OAAO,GAAGA,OAAO;IAAC,OAAAD,KAAA;EACzB;EAAC,IAAAO,aAAA,CAAA3B,OAAA,EAAAgB,OAAA;IAAAY,GAAA;IAAAC,KAAA;MAAA,IAAAC,KAAA,OAAAC,kBAAA,CAAA/B,OAAA,EAAAgC,YAAA,CAAAhC,OAAA,CAAAiC,IAAA,CAMD,SAAAC,QAAWC,KAAkB;QAAA,IAAAC,UAAA,EAAAC,GAAA;QAAA,OAAAL,YAAA,CAAAhC,OAAA,CAAAsC,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACrBN,UAAU,GAAG,IAAIO,OAAO,CAAS,UAACC,OAAO,EAAEC,MAAM;gBAAA,OAErD,IAAAC,gBAAO,EAACX,KAAK,CAAC,CAACY,IAAI,CAACH,OAAO,CAAC,CAACI,KAAK,CAACH,MAAM,CAAC;cAAA,CAC5C,CAAC;cAAAL,QAAA,CAAAE,IAAA;cAAA,OACiBN,UAAU;YAAA;cAAtBC,GAAG,GAAAG,QAAA,CAAAS,IAAA;cAAA,OAAAT,QAAA,CAAAU,MAAA,WACF,IAAAC,wBAAW,EAACd,GAAG,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA,CACxB;MAAA,SAAAmB,KAAAC,EAAA;QAAA,OAAAxB,KAAA,CAAAvB,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA+C,IAAA;IAAA;EAAA;EAAA,OAAArC,OAAA;AAAA,EApB0BuC,WAAI;AAAAC,OAAA,CAAAxC,OAAA,GAAAA,OAAA"}