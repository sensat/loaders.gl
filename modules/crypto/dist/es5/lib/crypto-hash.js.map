{"version":3,"file":"crypto-hash.js","names":["_hash2","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","n","next","return","_return","ret","throw","_throw","thr","CryptoJS","CryptoHash","_Hash","_inherits2","_super","options","_this2$options","_this2$options$crypto","_this2","_classCallCheck2","_defineProperty2","_assertThisInitialized2","_algorithm","crypto","algorithm","Error","name","toLowerCase","_createClass2","key","_preload","_asyncToGenerator2","_regenerator","mark","_callee","_this$options","_this$options$modules","algo","wrap","_callee$","_context","prev","modules","_hash","create","stop","preload","_callee2","input","typedWordArray","_callee2$","_context2","lib","WordArray","abrupt","update","finalize","toString","enc","Base64","hash","_x","hashBatches","_this","_wrapAsyncGenerator2","_callee3","_this$options2","_this$options2$crypto","_this$options2$crypto2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","_callee3$","_context3","_awaitAsyncGenerator2","sent","t0","finish","onEnd","Hash","exports"],"sources":["../../../src/lib/crypto-hash.ts"],"sourcesContent":["// This dependency is too big, application must provide it\nimport type * as CryptoJSNamespace from 'crypto-js';\nimport {Hash} from './hash';\n\ntype CryptoHashOptions = {\n  modules: {[moduleName: string]: any};\n  crypto: {\n    algorithm: string;\n    onEnd?: (result: {hash: string}) => any;\n  };\n};\n\nlet CryptoJS: typeof CryptoJSNamespace;\n\n/**\n * A transform that calculates Cryptographic Hash using Crypto JS library\n * @deprecated Warning, experimental class\n */\nexport class CryptoHash extends Hash {\n  readonly name;\n\n  options: CryptoHashOptions;\n  private _algorithm;\n  private _hash;\n\n  constructor(options: CryptoHashOptions) {\n    super();\n    this.options = options;\n    this._algorithm = this.options?.crypto?.algorithm;\n    if (!this._algorithm) {\n      throw new Error(this.name);\n    }\n    this.name = this._algorithm.toLowerCase();\n  }\n\n  async preload(): Promise<void> {\n    if (!CryptoJS) {\n      CryptoJS = this.options?.modules?.CryptoJS;\n      if (!CryptoJS) {\n        throw new Error(this.name);\n      }\n    }\n    if (!this._hash) {\n      const algo = CryptoJS.algo[this._algorithm];\n      this._hash = algo.create();\n    }\n    if (!this._hash) {\n      throw new Error(this.name);\n    }\n  }\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input: ArrayBuffer): Promise<string> {\n    await this.preload();\n    // arrayBuffer is accepted, even though types and docs say no\n    // https://stackoverflow.com/questions/25567468/how-to-decrypt-an-arraybuffer\n    // @ts-expect-error\n    const typedWordArray = CryptoJS.lib.WordArray.create(input);\n    return this._hash.update(typedWordArray).finalize().toString(CryptoJS.enc.Base64);\n  }\n\n  async *hashBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    await this.preload();\n    for await (const chunk of asyncIterator) {\n      // arrayBuffer is accepted, even though types and docs say no\n      // https://stackoverflow.com/questions/25567468/how-to-decrypt-an-arraybuffer\n      // @ts-expect-error\n      const typedWordArray = CryptoJS.lib.WordArray.create(chunk);\n      this._hash.update(typedWordArray);\n      yield chunk;\n    }\n    const hash = this._hash.finalize().toString(CryptoJS.enc.Base64);\n    this.options?.crypto?.onEnd?.({hash});\n  }\n}\n"],"mappings":"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"}