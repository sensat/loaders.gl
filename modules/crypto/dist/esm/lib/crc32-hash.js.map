{"version":3,"file":"crc32-hash.js","names":["Hash","CRC32","toHex","hexToBase64","CRC32Hash","constructor","options","arguments","length","undefined","_defineProperty","crypto","_hash","hashBatches","bind","hash","input","hashSync","update","hashValue","finalize","hex","asyncIterator","_this$options$crypto","_this$options$crypto$","chunk","onEnd","call"],"sources":["../../../src/lib/crc32-hash.ts"],"sourcesContent":["// CRC32\nimport {Hash} from './hash';\nimport CRC32 from './algorithms/crc32';\nimport {toHex, hexToBase64} from './utils/digest-utils';\n\n/**\n * Calculates CRC32 Cryptographic Hash\n */\nexport class CRC32Hash extends Hash {\n  readonly name = 'crc32';\n\n  options;\n  private _hash: CRC32;\n\n  constructor(options = {}) {\n    super();\n    this.options = {crypto: {}, ...options};\n    this._hash = new CRC32();\n    this.hashBatches = this.hashBatches.bind(this);\n  }\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input: ArrayBuffer): Promise<string> {\n    return this.hashSync(input);\n  }\n\n  hashSync(input: ArrayBuffer): string {\n    this._hash.update(input);\n    const hashValue = this._hash.finalize();\n    const hex = toHex(hashValue);\n    const hash = hexToBase64(hex);\n    return hash;\n  }\n\n  async *hashBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    for await (const chunk of asyncIterator) {\n      this._hash.update(chunk);\n      yield chunk;\n    }\n    const hashValue = this._hash.finalize();\n    const hex = toHex(hashValue);\n    const hash = hexToBase64(hex);\n    this.options.crypto?.onEnd?.({hash});\n  }\n}\n"],"mappings":";AACA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAAQC,KAAK,EAAEC,WAAW,QAAO,sBAAsB;AAKvD,OAAO,MAAMC,SAAS,SAASJ,IAAI,CAAC;EAMlCK,WAAWA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACtB,KAAK,CAAC,CAAC;IAACG,eAAA,eANM,OAAO;IAAAA,eAAA;IAAAA,eAAA;IAOrB,IAAI,CAACJ,OAAO,GAAG;MAACK,MAAM,EAAE,CAAC,CAAC;MAAE,GAAGL;IAAO,CAAC;IACvC,IAAI,CAACM,KAAK,GAAG,IAAIX,KAAK,CAAC,CAAC;IACxB,IAAI,CAACY,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;EAMA,MAAMC,IAAIA,CAACC,KAAkB,EAAmB;IAC9C,OAAO,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC;EAC7B;EAEAC,QAAQA,CAACD,KAAkB,EAAU;IACnC,IAAI,CAACJ,KAAK,CAACM,MAAM,CAACF,KAAK,CAAC;IACxB,MAAMG,SAAS,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC;IACvC,MAAMC,GAAG,GAAGnB,KAAK,CAACiB,SAAS,CAAC;IAC5B,MAAMJ,IAAI,GAAGZ,WAAW,CAACkB,GAAG,CAAC;IAC7B,OAAON,IAAI;EACb;EAEA,OAAOF,WAAWA,CAChBS,aAAiE,EACrC;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IAC5B,WAAW,MAAMC,KAAK,IAAIH,aAAa,EAAE;MACvC,IAAI,CAACV,KAAK,CAACM,MAAM,CAACO,KAAK,CAAC;MACxB,MAAMA,KAAK;IACb;IACA,MAAMN,SAAS,GAAG,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAC;IACvC,MAAMC,GAAG,GAAGnB,KAAK,CAACiB,SAAS,CAAC;IAC5B,MAAMJ,IAAI,GAAGZ,WAAW,CAACkB,GAAG,CAAC;IAC7B,CAAAE,oBAAA,OAAI,CAACjB,OAAO,CAACK,MAAM,cAAAY,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBG,KAAK,cAAAF,qBAAA,uBAA1BA,qBAAA,CAAAG,IAAA,CAAAJ,oBAAA,EAA6B;MAACR;IAAI,CAAC,CAAC;EACtC;AACF"}