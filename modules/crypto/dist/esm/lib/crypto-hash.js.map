{"version":3,"file":"crypto-hash.js","names":["Hash","CryptoJS","CryptoHash","constructor","options","_this$options","_this$options$crypto","_defineProperty","_algorithm","crypto","algorithm","Error","name","toLowerCase","preload","_this$options2","_this$options2$module","modules","_hash","algo","create","hash","input","typedWordArray","lib","WordArray","update","finalize","toString","enc","Base64","hashBatches","asyncIterator","_this$options3","_this$options3$crypto","_this$options3$crypto2","chunk","onEnd","call"],"sources":["../../../src/lib/crypto-hash.ts"],"sourcesContent":["// This dependency is too big, application must provide it\nimport type * as CryptoJSNamespace from 'crypto-js';\nimport {Hash} from './hash';\n\ntype CryptoHashOptions = {\n  modules: {[moduleName: string]: any};\n  crypto: {\n    algorithm: string;\n    onEnd?: (result: {hash: string}) => any;\n  };\n};\n\nlet CryptoJS: typeof CryptoJSNamespace;\n\n/**\n * A transform that calculates Cryptographic Hash using Crypto JS library\n * @deprecated Warning, experimental class\n */\nexport class CryptoHash extends Hash {\n  readonly name;\n\n  options: CryptoHashOptions;\n  private _algorithm;\n  private _hash;\n\n  constructor(options: CryptoHashOptions) {\n    super();\n    this.options = options;\n    this._algorithm = this.options?.crypto?.algorithm;\n    if (!this._algorithm) {\n      throw new Error(this.name);\n    }\n    this.name = this._algorithm.toLowerCase();\n  }\n\n  async preload(): Promise<void> {\n    if (!CryptoJS) {\n      CryptoJS = this.options?.modules?.CryptoJS;\n      if (!CryptoJS) {\n        throw new Error(this.name);\n      }\n    }\n    if (!this._hash) {\n      const algo = CryptoJS.algo[this._algorithm];\n      this._hash = algo.create();\n    }\n    if (!this._hash) {\n      throw new Error(this.name);\n    }\n  }\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input: ArrayBuffer): Promise<string> {\n    await this.preload();\n    // arrayBuffer is accepted, even though types and docs say no\n    // https://stackoverflow.com/questions/25567468/how-to-decrypt-an-arraybuffer\n    // @ts-expect-error\n    const typedWordArray = CryptoJS.lib.WordArray.create(input);\n    return this._hash.update(typedWordArray).finalize().toString(CryptoJS.enc.Base64);\n  }\n\n  async *hashBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    await this.preload();\n    for await (const chunk of asyncIterator) {\n      // arrayBuffer is accepted, even though types and docs say no\n      // https://stackoverflow.com/questions/25567468/how-to-decrypt-an-arraybuffer\n      // @ts-expect-error\n      const typedWordArray = CryptoJS.lib.WordArray.create(chunk);\n      this._hash.update(typedWordArray);\n      yield chunk;\n    }\n    const hash = this._hash.finalize().toString(CryptoJS.enc.Base64);\n    this.options?.crypto?.onEnd?.({hash});\n  }\n}\n"],"mappings":"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"}