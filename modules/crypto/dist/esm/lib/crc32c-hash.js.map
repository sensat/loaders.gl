{"version":3,"file":"crc32c-hash.js","names":["Hash","CRC32C","toHex","hexToBase64","CRC32CHash","constructor","options","arguments","length","undefined","_defineProperty","crypto","_hash","hash","input","hashSync","update","hashValue","finalize","hex","hashBatches","asyncIterator","_this$options$crypto","_this$options$crypto$","chunk","onEnd","call"],"sources":["../../../src/lib/crc32c-hash.ts"],"sourcesContent":["// CRC32c\nimport {Hash} from './hash';\nimport CRC32C from './algorithms/crc32c';\nimport {toHex, hexToBase64} from './utils/digest-utils';\n\n/**\n * A transform that calculates CRC32c Hash\n */\nexport class CRC32CHash extends Hash {\n  readonly name = 'crc32c';\n\n  options;\n  private _hash: CRC32C;\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  constructor(options = {}) {\n    super();\n    this.options = {crypto: {}, ...options};\n    this._hash = new CRC32C(options);\n  }\n\n  /**\n   * Atomic hash calculation\n   * @returns base64 encoded hash\n   */\n  async hash(input: ArrayBuffer): Promise<string> {\n    return this.hashSync(input);\n  }\n\n  hashSync(input: ArrayBuffer): string {\n    this._hash.update(input);\n    const hashValue = this._hash.finalize();\n    const hex = toHex(hashValue);\n    const hash = hexToBase64(hex);\n    return hash;\n  }\n\n  // runInBatches inherited\n\n  async *hashBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    for await (const chunk of asyncIterator) {\n      this._hash.update(chunk);\n      yield chunk;\n    }\n    const hashValue = this._hash.finalize();\n    const hex = toHex(hashValue);\n    const hash = hexToBase64(hex);\n    this.options.crypto?.onEnd?.({hash});\n  }\n}\n"],"mappings":";AACA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAAQC,KAAK,EAAEC,WAAW,QAAO,sBAAsB;AAKvD,OAAO,MAAMC,UAAU,SAASJ,IAAI,CAAC;EAUnCK,WAAWA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACtB,KAAK,CAAC,CAAC;IAACG,eAAA,eAVM,QAAQ;IAAAA,eAAA;IAAAA,eAAA;IAWtB,IAAI,CAACJ,OAAO,GAAG;MAACK,MAAM,EAAE,CAAC,CAAC;MAAE,GAAGL;IAAO,CAAC;IACvC,IAAI,CAACM,KAAK,GAAG,IAAIX,MAAM,CAACK,OAAO,CAAC;EAClC;EAMA,MAAMO,IAAIA,CAACC,KAAkB,EAAmB;IAC9C,OAAO,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC;EAC7B;EAEAC,QAAQA,CAACD,KAAkB,EAAU;IACnC,IAAI,CAACF,KAAK,CAACI,MAAM,CAACF,KAAK,CAAC;IACxB,MAAMG,SAAS,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC;IACvC,MAAMC,GAAG,GAAGjB,KAAK,CAACe,SAAS,CAAC;IAC5B,MAAMJ,IAAI,GAAGV,WAAW,CAACgB,GAAG,CAAC;IAC7B,OAAON,IAAI;EACb;EAIA,OAAOO,WAAWA,CAChBC,aAAiE,EACrC;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IAC5B,WAAW,MAAMC,KAAK,IAAIH,aAAa,EAAE;MACvC,IAAI,CAACT,KAAK,CAACI,MAAM,CAACQ,KAAK,CAAC;MACxB,MAAMA,KAAK;IACb;IACA,MAAMP,SAAS,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC;IACvC,MAAMC,GAAG,GAAGjB,KAAK,CAACe,SAAS,CAAC;IAC5B,MAAMJ,IAAI,GAAGV,WAAW,CAACgB,GAAG,CAAC;IAC7B,CAAAG,oBAAA,OAAI,CAAChB,OAAO,CAACK,MAAM,cAAAW,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBG,KAAK,cAAAF,qBAAA,uBAA1BA,qBAAA,CAAAG,IAAA,CAAAJ,oBAAA,EAA6B;MAACT;IAAI,CAAC,CAAC;EACtC;AACF"}