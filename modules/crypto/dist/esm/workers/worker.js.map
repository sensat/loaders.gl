{"version":3,"file":"worker.js","names":["createWorker","CRC32Hash","CRC32CHash","MD5Hash","data","options","arguments","length","undefined","operation","hash","Error","concat"],"sources":["../../../src/workers/worker.ts"],"sourcesContent":["import {createWorker} from '@loaders.gl/worker-utils';\nimport {CRC32Hash} from '../lib/crc32-hash';\nimport {CRC32CHash} from '../lib/crc32c-hash';\nimport {MD5Hash} from '../lib/md5-hash';\n\n// Assuming we can bundle as module\nexport {CRC32Hash, CRC32CHash};\n\ncreateWorker(async (data, options = {}) => {\n  // @ts-ignore\n  const {operation} = options;\n\n  switch (operation) {\n    case 'crc32':\n      return await new CRC32Hash(options).hash(data);\n    case 'crc32c':\n      return await new CRC32CHash(options).hash(data);\n    case 'md5':\n      return await new MD5Hash(options).hash(data);\n    default:\n      throw new Error(`invalid option: ${operation}`);\n  }\n});\n"],"mappings":"AAAA,SAAQA,YAAY,QAAO,0BAA0B;AACrD,SAAQC,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,OAAO,QAAO,iBAAiB;AAGvC,SAAQF,SAAS,EAAEC,UAAU;AAE7BF,YAAY,CAAC,gBAAOI,IAAI,EAAmB;EAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAEpC,MAAM;IAACG;EAAS,CAAC,GAAGJ,OAAO;EAE3B,QAAQI,SAAS;IACf,KAAK,OAAO;MACV,OAAO,MAAM,IAAIR,SAAS,CAACI,OAAO,CAAC,CAACK,IAAI,CAACN,IAAI,CAAC;IAChD,KAAK,QAAQ;MACX,OAAO,MAAM,IAAIF,UAAU,CAACG,OAAO,CAAC,CAACK,IAAI,CAACN,IAAI,CAAC;IACjD,KAAK,KAAK;MACR,OAAO,MAAM,IAAID,OAAO,CAACE,OAAO,CAAC,CAACK,IAAI,CAACN,IAAI,CAAC;IAC9C;MACE,MAAM,IAAIO,KAAK,oBAAAC,MAAA,CAAoBH,SAAS,CAAE,CAAC;EACnD;AACF,CAAC,CAAC"}