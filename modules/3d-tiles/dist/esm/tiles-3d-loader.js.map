{"version":3,"file":"tiles-3d-loader.js","names":["path","TILESET_TYPE","LOD_METRIC_TYPE","VERSION","parse3DTile","normalizeTileHeaders","Tiles3DLoader","id","name","module","version","extensions","mimeTypes","tests","parse","options","loadGLTF","decodeQuantizedPositions","isTileset","assetGltfUpAxis","data","arguments","length","undefined","context","loaderOptions","url","indexOf","parseTileset","parseTile","_tilesetJson$root","tilesetJson","JSON","TextDecoder","decode","tilesetUrl","basePath","getBaseUri","normalizedRoot","tilesetJsonPostprocessed","loader","queryString","root","type","TILES3D","lodMetricType","GEOMETRIC_ERROR","lodMetricValue","geometricError","arrayBuffer","tile","content","featureIds","byteOffset","dirname"],"sources":["../../src/tiles-3d-loader.ts"],"sourcesContent":["import type {LoaderWithParser, LoaderOptions, LoaderContext} from '@loaders.gl/loader-utils';\n// / import type { GLTFLoaderOptions } from '@loaders.gl/gltf';\nimport type {DracoLoaderOptions} from '@loaders.gl/draco';\nimport type {ImageLoaderOptions} from '@loaders.gl/images';\n\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\nimport {Tiles3DTilesetJSON, Tiles3DTilesetJSONPostprocessed} from './types';\n\nexport type Tiles3DLoaderOptions = LoaderOptions &\n  // GLTFLoaderOptions & - TODO not yet exported\n  DracoLoaderOptions &\n  ImageLoaderOptions & {\n    '3d-tiles'?: {\n      /** Whether to parse any embedded glTF binaries (or extract memory for independent glTF parsing) */\n      loadGLTF?: boolean;\n      /** If renderer doesn't support quantized positions, loader can decode them on CPU */\n      decodeQuantizedPositions?: boolean;\n      /** Whether this is a tileset or a tile */\n      isTileset?: boolean | 'auto';\n      /** Controls which axis is \"up\" in glTF files */\n      assetGltfUpAxis?: 'x' | 'y' | 'z' | null;\n    };\n  };\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\n/** Parses a tileset or tile */\nasync function parse(data, options: Tiles3DLoaderOptions = {}, context?: LoaderContext) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context?.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  return isTileset ? parseTileset(data, options, context) : parseTile(data, options, context);\n}\n\n/** Parse a tileset */\nasync function parseTileset(\n  data: ArrayBuffer,\n  options?: Tiles3DLoaderOptions,\n  context?: LoaderContext\n): Promise<Tiles3DTilesetJSONPostprocessed> {\n  const tilesetJson: Tiles3DTilesetJSON = JSON.parse(new TextDecoder().decode(data));\n\n  const tilesetUrl = context?.url || '';\n  const basePath = getBaseUri(tilesetUrl);\n  const normalizedRoot = await normalizeTileHeaders(tilesetJson, basePath, options || {});\n  const tilesetJsonPostprocessed: Tiles3DTilesetJSONPostprocessed = {\n    ...tilesetJson,\n    loader: Tiles3DLoader,\n    url: tilesetUrl,\n    queryString: context?.queryString || '',\n    basePath,\n    root: normalizedRoot || tilesetJson.root,\n    type: TILESET_TYPE.TILES3D,\n    lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n    lodMetricValue: tilesetJson.root?.geometricError || 0\n  };\n  return tilesetJsonPostprocessed;\n}\n\n/** Parse a tile */\nasync function parseTile(\n  arrayBuffer: ArrayBuffer,\n  options?: Tiles3DLoaderOptions,\n  context?: LoaderContext\n) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\n/** Get base name */\nfunction getBaseUri(tilesetUrl: string): string {\n  return path.dirname(tilesetUrl);\n}\n"],"mappings":"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"}