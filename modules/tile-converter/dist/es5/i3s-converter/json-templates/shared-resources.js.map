{"version":3,"file":"shared-resources.js","names":["_jsonMapTransform","_interopRequireDefault","require","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","MATERIAL_DEFINITION_INFO_PARAMS","renderMode","path","default","shininess","reflectivity","ambient","diffuse","specular","useVertexColorAlpha","vertexRegions","vertexColors","MATERIAL_DEFINITION_INFO","type","params","transform","val","thisObject","originalObject","TEXTURE_DEFINITION_IMAGE","id","size","href","TEXTURE_DEFINITION_INFO","encoding","wrap","atlas","uvSet","channels","images","map","image","SHARED_RESOURCES","materialDefinitions","transfromMaterialDefinitions","textureDefinitions","transfromTextureDefinitions","exports","materialDefinitionInfos","result","_iterator","entries","_step","_step$value","_slicedToArray2","index","materialDefinitionInfo","concat","nodePath","textureDefinitionInfos","_iterator2","_step2","_step2$value","textureDefinitionInfo","imageIndex"],"sources":["../../../../src/i3s-converter/json-templates/shared-resources.ts"],"sourcesContent":["import transform from 'json-map-transform';\n\nconst MATERIAL_DEFINITION_INFO_PARAMS = () => ({\n  renderMode: {\n    path: 'renderMode',\n    default: 'solid'\n  },\n  shininess: {\n    path: 'shininess',\n    default: 1\n  },\n  reflectivity: {\n    path: 'reflectivity',\n    default: 0\n  },\n  ambient: {\n    path: 'ambient',\n    default: [1, 1, 1]\n  },\n  diffuse: {\n    path: 'diffuse',\n    default: [1, 1, 1]\n  },\n  specular: {\n    path: 'specular',\n    default: [0, 0, 0]\n  },\n  useVertexColorAlpha: {\n    path: 'useVertexColorAlpha',\n    default: false\n  },\n  vertexRegions: {\n    path: 'vertexRegions',\n    default: false\n  },\n  vertexColors: {\n    path: 'vertexColors',\n    default: true\n  }\n});\n\nconst MATERIAL_DEFINITION_INFO = () => ({\n  name: {\n    path: 'name',\n    default: 'standard'\n  },\n  type: {\n    path: 'type',\n    default: 'standard'\n  },\n  params: {\n    path: 'params',\n    transform: (val, thisObject, originalObject) =>\n      transform(originalObject, MATERIAL_DEFINITION_INFO_PARAMS())\n  }\n});\n\nconst TEXTURE_DEFINITION_IMAGE = () => ({\n  id: {\n    path: 'id'\n  },\n  size: {\n    path: 'size'\n  },\n  href: {\n    path: 'href',\n    default: ['../textures/0']\n  },\n  length: {\n    path: 'length'\n  }\n});\n\nconst TEXTURE_DEFINITION_INFO = () => ({\n  encoding: {\n    path: 'encoding'\n  },\n  wrap: {\n    path: 'wrap',\n    default: ['none']\n  },\n  atlas: {\n    path: 'atlas',\n    default: false\n  },\n  uvSet: {\n    path: 'uvSet',\n    default: 'uv0'\n  },\n  channels: {\n    path: 'channels',\n    default: 'rgb'\n  },\n  images: {\n    path: 'images',\n    transform: (val, thisObject, originalObject) =>\n      val.map((image) => transform(image, TEXTURE_DEFINITION_IMAGE()))\n  }\n});\n\nexport const SHARED_RESOURCES = () => ({\n  materialDefinitions: {\n    path: 'materialDefinitionInfos',\n    transform: transfromMaterialDefinitions\n  },\n  textureDefinitions: {\n    path: 'textureDefinitionInfos',\n    transform: transfromTextureDefinitions\n  }\n});\n\nfunction transfromMaterialDefinitions(materialDefinitionInfos, thisObject, originalObject) {\n  const result = {};\n  for (const [index, materialDefinitionInfo] of materialDefinitionInfos.entries()) {\n    result[`Mat${originalObject.nodePath}${index}`] = transform(\n      materialDefinitionInfo,\n      MATERIAL_DEFINITION_INFO()\n    );\n  }\n  return result;\n}\n\nfunction transfromTextureDefinitions(textureDefinitionInfos, thisObject, originalObject) {\n  if (!textureDefinitionInfos) {\n    return null;\n  }\n  const result = {};\n  for (const [index, textureDefinitionInfo] of textureDefinitionInfos.entries()) {\n    const imageIndex = `${originalObject.nodePath}${index}`;\n    textureDefinitionInfo.imageIndex = imageIndex;\n    result[imageIndex] = transform(textureDefinitionInfo, TEXTURE_DEFINITION_INFO());\n  }\n  return result;\n}\n"],"mappings":"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"}