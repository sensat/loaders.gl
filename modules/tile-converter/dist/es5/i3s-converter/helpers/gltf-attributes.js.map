{"version":3,"file":"gltf-attributes.js","names":["getB3DMAttributesWithoutBufferView","attributes","attributesWithoutBufferView","attributeName","value","prepareDataForAttributesConversion","tileContent","_tileContent$gltf","_tileContent$gltf$sce","_tileContent$gltf2","_tileContent$gltf2$sc","_tileContent$gltf2$sc2","_tileContent$gltf3","_tileContent$gltf4","_tileContent$gltf4$im","nodes","gltf","scene","scenes","images","map","imageObject","_imageObject$image","image","compressed","_imageObject$image2","data","dataCopy","Uint8Array","length","set","height","width","components","mimeType","prepareNodes","cartographicOrigin","cartesianModelMatrix","index","node","mesh","_node$mesh","_objectSpread","primitives","primitive","_primitive$indices","_primitive$material","_primitive$material2","indices","material","id","uniqueId","children"],"sources":["../../../../src/i3s-converter/helpers/gltf-attributes.ts"],"sourcesContent":["import type {B3DMContent} from '@loaders.gl/3d-tiles';\nimport type {GLTFAccessorPostprocessed, GLTFNodePostprocessed} from '@loaders.gl/gltf';\nimport type {B3DMAttributesData} from '../../i3s-attributes-worker';\n\ntype AttributesObject = {\n  [k: string]: GLTFAccessorPostprocessed;\n};\n\n/**\n * Keep only values for B3DM attributes to pass data to worker thread.\n * @param attributes\n */\nfunction getB3DMAttributesWithoutBufferView(attributes: AttributesObject): AttributesObject {\n  const attributesWithoutBufferView = {};\n\n  for (const attributeName in attributes) {\n    attributesWithoutBufferView[attributeName] = {\n      value: attributes[attributeName].value\n    };\n  }\n\n  return attributesWithoutBufferView;\n}\n\n/**\n * Prepare attributes for conversion to avoid binary data breaking in worker thread.\n * @param tileContent\n * @returns\n */\nexport function prepareDataForAttributesConversion(tileContent: B3DMContent): B3DMAttributesData {\n  let nodes =\n    tileContent.gltf?.scene?.nodes ||\n    tileContent.gltf?.scenes?.[0]?.nodes ||\n    tileContent.gltf?.nodes ||\n    [];\n\n  const images =\n    tileContent.gltf?.images?.map((imageObject) => {\n      // Need data only for uncompressed images because we can't get batchIds from compressed textures.\n      if (imageObject?.image?.compressed) {\n        return null;\n      } else {\n        const data = imageObject?.image?.data;\n        const dataCopy = new Uint8Array(data.length);\n        dataCopy.set(data);\n        return {\n          data: dataCopy,\n          compressed: false,\n          height: imageObject.image.height,\n          width: imageObject.image.width,\n          components: imageObject.image.components,\n          mimeType: imageObject.mimeType\n        };\n      }\n    }) || [];\n\n  prepareNodes(nodes);\n\n  const cartographicOrigin = tileContent.cartographicOrigin;\n  const cartesianModelMatrix = tileContent.cartesianModelMatrix;\n\n  return {\n    nodes,\n    images,\n    cartographicOrigin,\n    cartesianModelMatrix\n  };\n}\n\n/**\n * Traverse all nodes to replace all sensible data with copy to avoid data corruption in worker.\n * @param nodes\n */\nfunction prepareNodes(nodes: GLTFNodePostprocessed[]): void {\n  for (let index = 0; index < nodes.length; index++) {\n    const node = nodes[index] as any;\n\n    if (node.mesh) {\n      nodes[index] = {\n        ...node,\n        mesh: {\n          ...node.mesh,\n          primitives: node.mesh?.primitives.map((primitive) => ({\n            ...primitive,\n            indices: {value: primitive?.indices?.value},\n            attributes: getB3DMAttributesWithoutBufferView(primitive.attributes),\n            material: {\n              id: primitive?.material?.id,\n              uniqueId: primitive?.material?.uniqueId\n            }\n          }))\n        }\n      };\n    }\n\n    if (node.children) {\n      prepareNodes(node.children);\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AAYA,SAASA,kCAAkCA,CAACC,UAA4B,EAAoB;EAC1F,IAAMC,2BAA2B,GAAG,CAAC,CAAC;EAEtC,KAAK,IAAMC,aAAa,IAAIF,UAAU,EAAE;IACtCC,2BAA2B,CAACC,aAAa,CAAC,GAAG;MAC3CC,KAAK,EAAEH,UAAU,CAACE,aAAa,CAAC,CAACC;IACnC,CAAC;EACH;EAEA,OAAOF,2BAA2B;AACpC;AAOO,SAASG,kCAAkCA,CAACC,WAAwB,EAAsB;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,qBAAA;EAC/F,IAAIC,KAAK,GACP,EAAAR,iBAAA,GAAAD,WAAW,CAACU,IAAI,cAAAT,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBU,KAAK,cAAAT,qBAAA,uBAAvBA,qBAAA,CAAyBO,KAAK,OAAAN,kBAAA,GAC9BH,WAAW,CAACU,IAAI,cAAAP,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkBS,MAAM,cAAAR,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA2B,CAAC,CAAC,cAAAC,sBAAA,uBAA7BA,sBAAA,CAA+BI,KAAK,OAAAH,kBAAA,GACpCN,WAAW,CAACU,IAAI,cAAAJ,kBAAA,uBAAhBA,kBAAA,CAAkBG,KAAK,KACvB,EAAE;EAEJ,IAAMI,MAAM,GACV,EAAAN,kBAAA,GAAAP,WAAW,CAACU,IAAI,cAAAH,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkBM,MAAM,cAAAL,qBAAA,uBAAxBA,qBAAA,CAA0BM,GAAG,CAAC,UAACC,WAAW,EAAK;IAAA,IAAAC,kBAAA;IAE7C,IAAID,WAAW,aAAXA,WAAW,gBAAAC,kBAAA,GAAXD,WAAW,CAAEE,KAAK,cAAAD,kBAAA,eAAlBA,kBAAA,CAAoBE,UAAU,EAAE;MAClC,OAAO,IAAI;IACb,CAAC,MAAM;MAAA,IAAAC,mBAAA;MACL,IAAMC,IAAI,GAAGL,WAAW,aAAXA,WAAW,wBAAAI,mBAAA,GAAXJ,WAAW,CAAEE,KAAK,cAAAE,mBAAA,uBAAlBA,mBAAA,CAAoBC,IAAI;MACrC,IAAMC,QAAQ,GAAG,IAAIC,UAAU,CAACF,IAAI,CAACG,MAAM,CAAC;MAC5CF,QAAQ,CAACG,GAAG,CAACJ,IAAI,CAAC;MAClB,OAAO;QACLA,IAAI,EAAEC,QAAQ;QACdH,UAAU,EAAE,KAAK;QACjBO,MAAM,EAAEV,WAAW,CAACE,KAAK,CAACQ,MAAM;QAChCC,KAAK,EAAEX,WAAW,CAACE,KAAK,CAACS,KAAK;QAC9BC,UAAU,EAAEZ,WAAW,CAACE,KAAK,CAACU,UAAU;QACxCC,QAAQ,EAAEb,WAAW,CAACa;MACxB,CAAC;IACH;EACF,CAAC,CAAC,KAAI,EAAE;EAEVC,YAAY,CAACpB,KAAK,CAAC;EAEnB,IAAMqB,kBAAkB,GAAG9B,WAAW,CAAC8B,kBAAkB;EACzD,IAAMC,oBAAoB,GAAG/B,WAAW,CAAC+B,oBAAoB;EAE7D,OAAO;IACLtB,KAAK,EAALA,KAAK;IACLI,MAAM,EAANA,MAAM;IACNiB,kBAAkB,EAAlBA,kBAAkB;IAClBC,oBAAoB,EAApBA;EACF,CAAC;AACH;AAMA,SAASF,YAAYA,CAACpB,KAA8B,EAAQ;EAC1D,KAAK,IAAIuB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGvB,KAAK,CAACc,MAAM,EAAES,KAAK,EAAE,EAAE;IACjD,IAAMC,IAAI,GAAGxB,KAAK,CAACuB,KAAK,CAAQ;IAEhC,IAAIC,IAAI,CAACC,IAAI,EAAE;MAAA,IAAAC,UAAA;MACb1B,KAAK,CAACuB,KAAK,CAAC,GAAAI,aAAA,CAAAA,aAAA,KACPH,IAAI;QACPC,IAAI,EAAAE,aAAA,CAAAA,aAAA,KACCH,IAAI,CAACC,IAAI;UACZG,UAAU,GAAAF,UAAA,GAAEF,IAAI,CAACC,IAAI,cAAAC,UAAA,uBAATA,UAAA,CAAWE,UAAU,CAACvB,GAAG,CAAC,UAACwB,SAAS;YAAA,IAAAC,kBAAA,EAAAC,mBAAA,EAAAC,oBAAA;YAAA,OAAAL,aAAA,CAAAA,aAAA,KAC3CE,SAAS;cACZI,OAAO,EAAE;gBAAC5C,KAAK,EAAEwC,SAAS,aAATA,SAAS,wBAAAC,kBAAA,GAATD,SAAS,CAAEI,OAAO,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBzC;cAAK,CAAC;cAC3CH,UAAU,EAAED,kCAAkC,CAAC4C,SAAS,CAAC3C,UAAU,CAAC;cACpEgD,QAAQ,EAAE;gBACRC,EAAE,EAAEN,SAAS,aAATA,SAAS,wBAAAE,mBAAA,GAATF,SAAS,CAAEK,QAAQ,cAAAH,mBAAA,uBAAnBA,mBAAA,CAAqBI,EAAE;gBAC3BC,QAAQ,EAAEP,SAAS,aAATA,SAAS,wBAAAG,oBAAA,GAATH,SAAS,CAAEK,QAAQ,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBI;cACjC;YAAC;UAAA,CACD;QAAC;MACJ,EACF;IACH;IAEA,IAAIZ,IAAI,CAACa,QAAQ,EAAE;MACjBjB,YAAY,CAACI,IAAI,CAACa,QAAQ,CAAC;IAC7B;EACF;AACF"}