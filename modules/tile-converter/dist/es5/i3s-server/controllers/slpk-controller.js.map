{"version":3,"file":"slpk-controller.js","names":["require","_require","fetchFile","parse","_require2","SLPKLoader","path","slpkArchive","loadArchive","_ref","_asyncToGenerator2","default","_regenerator","mark","_callee","fullLayerPath","wrap","_callee$","_context","prev","next","sent","arrayBuffer","stop","_x","apply","arguments","I3S_LAYER_PATH","process","env","I3sLayerPath","FULL_LAYER_PATH","join","cwd","getFileByUrl","_x2","_getFileByUrl","_callee2","url","trimmedPath","uncompressedFile","_callee2$","_context2","exec","t0","Buffer","slpk","pathMode","t1","from","call","t2","abrupt","module","exports"],"sources":["../../../../src/i3s-server/controllers/slpk-controller.js"],"sourcesContent":["require('@loaders.gl/polyfills');\nconst {fetchFile, parse} = require('@loaders.gl/core');\nconst {SLPKLoader} = require('@loaders.gl/i3s');\nconst path = require('path');\n\nlet slpkArchive;\n\nconst loadArchive = async (fullLayerPath) => {\n  slpkArchive = await (await fetchFile(fullLayerPath)).arrayBuffer();\n};\n\nconst I3S_LAYER_PATH = process.env.I3sLayerPath || ''; // eslint-disable-line no-process-env, no-undef\nconst FULL_LAYER_PATH = path.join(process.cwd(), I3S_LAYER_PATH); // eslint-disable-line no-undef\n\nloadArchive(FULL_LAYER_PATH);\n\nasync function getFileByUrl(url) {\n  const trimmedPath = /^\\/?(.*)\\/?$/.exec(url);\n  let uncompressedFile;\n  if (trimmedPath) {\n    try {\n      uncompressedFile = Buffer.from(\n        await parse(slpkArchive, SLPKLoader, {\n          slpk: {\n            path: trimmedPath[1],\n            pathMode: 'http'\n          }\n        })\n      );\n    } catch (e) {}\n  }\n  return uncompressedFile;\n}\n\nmodule.exports = {\n  loadArchive,\n  getFileByUrl\n};\n"],"mappings":"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"}