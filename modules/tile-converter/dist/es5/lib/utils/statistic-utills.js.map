{"version":3,"file":"statistic-utills.js","names":["_path","require","_fs","_fileUtils","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","timeConverter","time","nanoSecondsInMillisecond","timeInSeconds","hours","Math","floor","minutes","seconds","milliseconds","result","concat","calculateFilesSize","_x","_calculateFilesSize","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","params","slpk","outputPath","tilesetName","fullOutputPath","slpkPath","stat","directoryPath","totalSize","wrap","_callee$","_context","prev","getAbsoluteFilePath","join","fs","sent","abrupt","size","getTotalFilesSize","t0","console","log","stop","_x2","_getTotalFilesSize","_callee2","dirPath","totalFileSize","files","_iterator","_step","file","fileStat","_callee2$","_context2","readdir","isDirectory","t1","finish"],"sources":["../../../../src/lib/utils/statistic-utills.ts"],"sourcesContent":["import {join} from 'path';\nimport {promises as fs} from 'fs';\nimport {getAbsoluteFilePath} from './file-utils';\n\nexport function timeConverter(time) {\n  const nanoSecondsInMillisecond = 1e6;\n  let timeInSeconds = time[0];\n  const hours = Math.floor(timeInSeconds / 3600);\n  timeInSeconds = timeInSeconds - hours * 3600;\n  const minutes = Math.floor(timeInSeconds / 60);\n  timeInSeconds = timeInSeconds - minutes * 60;\n  const seconds = Math.floor(timeInSeconds);\n  const milliseconds = time[1] / nanoSecondsInMillisecond;\n  let result = '';\n\n  if (hours) {\n    result += `${hours}h `;\n  }\n\n  if (minutes) {\n    result += `${minutes}m `;\n  }\n\n  if (seconds) {\n    result += `${seconds}s`;\n  }\n\n  if (!result) {\n    result += `${milliseconds}ms`;\n  }\n\n  return result;\n}\n\nexport async function calculateFilesSize(params) {\n  const {slpk, outputPath, tilesetName} = params;\n  const fullOutputPath = getAbsoluteFilePath(outputPath);\n\n  try {\n    if (slpk) {\n      const slpkPath = join(fullOutputPath, `${tilesetName}.slpk`);\n      const stat = await fs.stat(slpkPath);\n      return stat.size;\n    }\n\n    const directoryPath = join(fullOutputPath, tilesetName);\n    const totalSize = await getTotalFilesSize(directoryPath);\n    return totalSize;\n  } catch (error) {\n    console.log('Calculate file sizes error: ', error); // eslint-disable-line\n    return null;\n  }\n}\n\nasync function getTotalFilesSize(dirPath) {\n  let totalFileSize = 0;\n\n  const files = await fs.readdir(dirPath);\n\n  for (const file of files) {\n    const fileStat = await fs.stat(join(dirPath, file));\n    if (fileStat.isDirectory()) {\n      totalFileSize += await getTotalFilesSize(join(dirPath, file));\n    } else {\n      totalFileSize += fileStat.size;\n    }\n  }\n  return totalFileSize;\n}\n"],"mappings":"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"}