{"version":3,"file":"preprocess-3d-tiles.js","names":["GltfPrimitiveModeString","GLTFLoader","parse","GLTF_PRIMITIVE_MODES","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","analyzeTileContent","tileContent","result","meshTopologyTypes","Set","gltfArrayBuffer","gltfData","gltf","normalize","loadBuffers","loadImages","decompressMeshes","json","meshTypes","getMeshTypesFromGltf","gltfJson","mesh","meshes","primitive","primitives","mode","add","mergePreprocessData","object1","object2","type"],"sources":["../../../../src/i3s-converter/helpers/preprocess-3d-tiles.ts"],"sourcesContent":["import {Tiles3DTileContent} from '@loaders.gl/3d-tiles';\nimport {GltfPrimitiveModeString, PreprocessData} from '../types';\nimport {GLTF, GLTFLoader} from '@loaders.gl/gltf';\nimport {parse} from '@loaders.gl/core';\n\n/**\n * glTF primitive modes\n * @see https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#_mesh_primitive_mode\n */\nexport const GLTF_PRIMITIVE_MODES = [\n  GltfPrimitiveModeString.POINTS, // 0\n  GltfPrimitiveModeString.LINES, // 1\n  GltfPrimitiveModeString.LINE_LOOP, // 2\n  GltfPrimitiveModeString.LINE_STRIP, // 3\n  GltfPrimitiveModeString.TRIANGLES, // 4\n  GltfPrimitiveModeString.TRIANGLE_STRIP, // 5\n  GltfPrimitiveModeString.TRIANGLE_FAN // 6\n];\n\n/**\n * Analyze tile content. This function is used during preprocess stage of\n * conversion\n * @param tileContent - 3DTiles tile content ArrayBuffer\n * @returns\n */\nexport const analyzeTileContent = async (\n  tileContent: Tiles3DTileContent | null\n): Promise<PreprocessData> => {\n  const result: PreprocessData = {\n    meshTopologyTypes: new Set()\n  };\n  if (!tileContent?.gltfArrayBuffer) {\n    return result;\n  }\n\n  const gltfData = await parse(tileContent.gltfArrayBuffer, GLTFLoader, {\n    gltf: {normalize: false, loadBuffers: false, loadImages: false, decompressMeshes: false}\n  });\n  const gltf = gltfData.json;\n\n  if (!gltf) {\n    return result;\n  }\n  const meshTypes = getMeshTypesFromGltf(gltf);\n  result.meshTopologyTypes = meshTypes;\n  return result;\n};\n\n/**\n * Get mesh topology types that the glb content has\n * @param gltfJson - JSON part of GLB content\n * @returns array of mesh types found\n */\nconst getMeshTypesFromGltf = (gltfJson: GLTF): Set<GltfPrimitiveModeString> => {\n  const result: Set<GltfPrimitiveModeString> = new Set();\n  for (const mesh of gltfJson.meshes || []) {\n    for (const primitive of mesh.primitives) {\n      let {mode} = primitive;\n      if (typeof mode !== 'number') {\n        mode = 4; // Default is 4 - TRIANGLES\n      }\n      result.add(GLTF_PRIMITIVE_MODES[mode]);\n    }\n  }\n  return result;\n};\n\n/**\n * Merge object2 into object1\n * @param object1\n * @param object2\n * @returns nothing\n */\nexport const mergePreprocessData = (object1: PreprocessData, object2: PreprocessData): void => {\n  // Merge topology mesh types info\n  for (const type of object2.meshTopologyTypes) {\n    object1.meshTopologyTypes.add(type);\n  }\n};\n"],"mappings":"AACA,SAAQA,uBAAuB,QAAuB,UAAU;AAChE,SAAcC,UAAU,QAAO,kBAAkB;AACjD,SAAQC,KAAK,QAAO,kBAAkB;AAMtC,OAAO,MAAMC,oBAAoB,GAAG,CAClCH,uBAAuB,CAACI,MAAM,EAC9BJ,uBAAuB,CAACK,KAAK,EAC7BL,uBAAuB,CAACM,SAAS,EACjCN,uBAAuB,CAACO,UAAU,EAClCP,uBAAuB,CAACQ,SAAS,EACjCR,uBAAuB,CAACS,cAAc,EACtCT,uBAAuB,CAACU,YAAY,CACrC;AAQD,OAAO,MAAMC,kBAAkB,GAAG,MAChCC,WAAsC,IACV;EAC5B,MAAMC,MAAsB,GAAG;IAC7BC,iBAAiB,EAAE,IAAIC,GAAG,CAAC;EAC7B,CAAC;EACD,IAAI,EAACH,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEI,eAAe,GAAE;IACjC,OAAOH,MAAM;EACf;EAEA,MAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACU,WAAW,CAACI,eAAe,EAAEf,UAAU,EAAE;IACpEiB,IAAI,EAAE;MAACC,SAAS,EAAE,KAAK;MAAEC,WAAW,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEC,gBAAgB,EAAE;IAAK;EACzF,CAAC,CAAC;EACF,MAAMJ,IAAI,GAAGD,QAAQ,CAACM,IAAI;EAE1B,IAAI,CAACL,IAAI,EAAE;IACT,OAAOL,MAAM;EACf;EACA,MAAMW,SAAS,GAAGC,oBAAoB,CAACP,IAAI,CAAC;EAC5CL,MAAM,CAACC,iBAAiB,GAAGU,SAAS;EACpC,OAAOX,MAAM;AACf,CAAC;AAOD,MAAMY,oBAAoB,GAAIC,QAAc,IAAmC;EAC7E,MAAMb,MAAoC,GAAG,IAAIE,GAAG,CAAC,CAAC;EACtD,KAAK,MAAMY,IAAI,IAAID,QAAQ,CAACE,MAAM,IAAI,EAAE,EAAE;IACxC,KAAK,MAAMC,SAAS,IAAIF,IAAI,CAACG,UAAU,EAAE;MACvC,IAAI;QAACC;MAAI,CAAC,GAAGF,SAAS;MACtB,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAAE;QAC5BA,IAAI,GAAG,CAAC;MACV;MACAlB,MAAM,CAACmB,GAAG,CAAC7B,oBAAoB,CAAC4B,IAAI,CAAC,CAAC;IACxC;EACF;EACA,OAAOlB,MAAM;AACf,CAAC;AAQD,OAAO,MAAMoB,mBAAmB,GAAGA,CAACC,OAAuB,EAAEC,OAAuB,KAAW;EAE7F,KAAK,MAAMC,IAAI,IAAID,OAAO,CAACrB,iBAAiB,EAAE;IAC5CoB,OAAO,CAACpB,iBAAiB,CAACkB,GAAG,CAACI,IAAI,CAAC;EACrC;AACF,CAAC"}