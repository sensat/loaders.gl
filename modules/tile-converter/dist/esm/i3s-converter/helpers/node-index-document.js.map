{"version":3,"file":"node-index-document.js","names":["join","transform","v4","uuidv4","openJson","writeFile","writeFileForSlpk","NODE","nodeTemplate","NodeIndexDocument","constructor","id","converter","_defineProperty","inPageId","toString","addData","data","options","instantNodeWriting","write","addChildren","childNodes","newChildren","node","nodeData","load","push","href","concat","obb","mbs","children","_data$children","addNeighbors","childNode","_childNodeData$neighb","_nodeData$children","childNodeData","neighbors","Number","length","neighbor","console","warn","save","flush","path","layers0Path","slpk","writeQueue","enqueue","archiveKey","writePromise","JSON","stringify","compressList","parentNodePath","parentNodeFileName","createRootNode","boundingVolumes","rootData","createRootNodeIndexDocument","rootNode","createNode","parentNode","lodSelection","nodeInPage","resources","createNodeIndexDocument","index","root0data","version","toUpperCase","level","metricType","maxError","texture","attributes","nodeId","parentNodeData","mesh","_parentNode$converter","_parentNode$converter2","geometryData","sharedResource","textureData","layers0","attributeStorageInfo","attributeData","folderName","key"],"sources":["../../../../src/i3s-converter/helpers/node-index-document.ts"],"sourcesContent":["import {join} from 'path';\nimport {\n  BoundingVolumes,\n  LodSelection,\n  Node3DIndexDocument,\n  NodeInPage,\n  NodeReference\n} from '@loaders.gl/i3s';\nimport transform from 'json-map-transform';\nimport {v4 as uuidv4} from 'uuid';\nimport {openJson, writeFile, writeFileForSlpk} from '../../lib/utils/file-utils';\nimport I3SConverter from '../i3s-converter';\nimport {NODE as nodeTemplate} from '../json-templates/node';\nimport {I3SConvertedResources} from '../types';\n\n/**\n * Wrapper for https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md data\n * The class allows working with 3DNodeIndexDocument in 2 modes:\n * in memory: the data is stored in `data` field\n * on disk: the data is written on disk in a file. The file can be rewritten when new childrend or neighbors have to be added\n */\nexport class NodeIndexDocument {\n  /** Node id */\n  public id: string;\n  /** Id in node pages */\n  public inPageId: number;\n  /** 3DNodeIndexDocument data */\n  public data: Node3DIndexDocument | null = null;\n  /** children */\n  public children: NodeIndexDocument[] = [];\n  /** converter instance */\n  private converter: I3SConverter;\n\n  /**\n   * Constructor\n   * @param id - id of the node in node pages\n   * @param converter - converter instance\n   */\n  constructor(id: number, converter: I3SConverter) {\n    this.inPageId = id;\n    this.id = id === 0 ? 'root' : id.toString();\n    this.converter = converter;\n  }\n\n  /**\n   * Add Node3DIndexDocument data to the node\n   * @param data Node3DIndexDocument data\n   * @returns this NodeIndexDocument instance (to recurring with constructor)\n   */\n  public async addData(data: Node3DIndexDocument): Promise<NodeIndexDocument> {\n    if (this.converter.options.instantNodeWriting) {\n      await this.write(data);\n    } else {\n      this.data = data;\n    }\n    return this;\n  }\n\n  /**\n   * Add child node references\n   * @param childNodes - child NodeIndexDocument instances\n   */\n  public async addChildren(childNodes: NodeIndexDocument[]): Promise<void> {\n    const newChildren: NodeReference[] = [];\n    for (const node of childNodes) {\n      const nodeData = await node.load();\n      newChildren.push({\n        id: node.id,\n        href: `../${node.id}`,\n        obb: nodeData.obb,\n        mbs: nodeData.mbs\n      });\n    }\n    this.children = this.children.concat(childNodes);\n\n    let data: Node3DIndexDocument | null = this.data;\n    if (this.converter.options.instantNodeWriting) {\n      data = (await this.load()) as Node3DIndexDocument;\n    }\n    if (data) {\n      data.children = data.children ?? [];\n      data.children = data.children.concat(newChildren);\n    }\n    if (this.converter.options.instantNodeWriting && data) {\n      await this.write(data);\n    }\n  }\n\n  /**\n   * Add neighbors to child nodes of this node\n   */\n  public async addNeighbors(): Promise<void> {\n    const nodeData = await this.load();\n    for (const childNode of this.children) {\n      const childNodeData = await childNode.load();\n      childNodeData.neighbors = childNodeData.neighbors ?? [];\n\n      // Don't do large amount of \"neightbors\" to avoid big memory consumption\n      if (Number(nodeData?.children?.length) < 1000) {\n        for (const neighbor of nodeData.children || []) {\n          if (childNode.id === neighbor.id) {\n            continue; // eslint-disable-line\n          }\n\n          childNodeData.neighbors.push({...neighbor});\n        }\n      } else {\n        // eslint-disable-next-line no-console, no-undef\n        console.warn(\n          `Node ${childNode.id}: neighbors attribute is omited because of large number of neigbors`\n        );\n        delete childNodeData.neighbors;\n      }\n\n      if (this.converter.options.instantNodeWriting && childNodeData) {\n        await childNode.write(childNodeData);\n      }\n      await childNode.save();\n      // The save after adding neighbors is the last one. Flush the the node\n      childNode.flush();\n    }\n  }\n\n  /** Save 3DNodeIndexDocument in file on disk */\n  public async save(): Promise<void> {\n    if (this.data) {\n      await this.write(this.data);\n    }\n  }\n\n  /**\n   * Write 3DNodeIndexDocument https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md\n   * @param node - Node3DIndexDocument object\n   */\n  private async write(node: Node3DIndexDocument): Promise<void> {\n    const path = join(this.converter.layers0Path, 'nodes', this.id);\n    if (this.converter.options.slpk) {\n      await this.converter.writeQueue.enqueue(\n        {\n          archiveKey: `nodes/${this.id}/3dNodeIndexDocument.json.gz`,\n          writePromise: () =>\n            writeFileForSlpk(\n              path,\n              JSON.stringify(node),\n              '3dNodeIndexDocument.json',\n              true,\n              this.converter.compressList\n            )\n        },\n        true\n      );\n    } else {\n      await this.converter.writeQueue.enqueue(\n        {writePromise: () => writeFile(path, JSON.stringify(node))},\n        true\n      );\n    }\n  }\n\n  /**\n   * Load 3DNodeIndexDocument data from file on disk\n   * @returns 3DNodeIndexDocument object\n   */\n  private async load(): Promise<Node3DIndexDocument> {\n    if (this.data) {\n      return this.data;\n    }\n    const path = this.id;\n    const parentNodePath = join(this.converter.layers0Path, 'nodes', path);\n    let parentNodeFileName = 'index.json';\n    if (this.converter.options.slpk) {\n      parentNodeFileName = '3dNodeIndexDocument.json';\n    }\n    return (await openJson(parentNodePath, parentNodeFileName)) as Node3DIndexDocument;\n  }\n\n  /**\n   * Unload the Node data\n   */\n  private flush(): void {\n    this.data = null;\n  }\n\n  /**\n   * Create root node of the tree\n   * @param boundingVolumes - MBS and OOB bounding volumes data\n   * @param converter - I3SConverter instance\n   * @returns instance of NodeIndexDocument\n   */\n  static async createRootNode(\n    boundingVolumes: BoundingVolumes,\n    converter: I3SConverter\n  ): Promise<NodeIndexDocument> {\n    const rootData = NodeIndexDocument.createRootNodeIndexDocument(boundingVolumes);\n    const rootNode = await new NodeIndexDocument(0, converter).addData(rootData);\n    return rootNode;\n  }\n\n  /**\n   * Create NodeIndexDocument instance\n   * @param parentNode - parent NodeIndexDocument\n   * @param boundingVolumes - MBS and OOB bounding volumes data\n   * @param lodSelection - LOD metrics data\n   * @param nodeInPage - node data in node pages\n   * @param resources - resources extracted from gltf/b3dm file\n   * @param converter - I3SConverter instance\n   * @returns NodeIndexDocument instance\n   */\n  static async createNode(\n    parentNode: NodeIndexDocument,\n    boundingVolumes: BoundingVolumes,\n    lodSelection: LodSelection[],\n    nodeInPage: NodeInPage,\n    resources: I3SConvertedResources,\n    converter: I3SConverter\n  ): Promise<NodeIndexDocument> {\n    const data = await NodeIndexDocument.createNodeIndexDocument(\n      parentNode,\n      boundingVolumes,\n      lodSelection,\n      nodeInPage,\n      resources\n    );\n    const node = await new NodeIndexDocument(nodeInPage.index, converter).addData(data);\n    return node;\n  }\n\n  /**\n   * Form 3DNodeIndexDocument data for the root node\n   * @param boundingVolumes - mbs and obb data about node's bounding volume\n   * @return 3DNodeIndexDocument data https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md\n   */\n  static createRootNodeIndexDocument(boundingVolumes: BoundingVolumes): Node3DIndexDocument {\n    const root0data = {\n      version: `{${uuidv4().toUpperCase()}}`,\n      id: 'root',\n      level: 0,\n      lodSelection: [\n        {\n          metricType: 'maxScreenThresholdSQ',\n          maxError: 0\n        },\n        {\n          metricType: 'maxScreenThreshold',\n          maxError: 0\n        }\n      ],\n      ...boundingVolumes,\n      children: []\n    };\n    return transform(root0data, nodeTemplate());\n  }\n\n  /**\n   * Create a new Node3DIndexDocument\n   * @param parentNode - 3DNodeIndexDocument https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md object of the parent node\n   * @param boundingVolumes - Bounding volumes\n   * @param lodSelection - Level of Details (LOD) metrics\n   * @param nodeInPage - corresponding node object in a node page\n   * @param resources - the node resources data\n   * @param resources.texture - texture image\n   * @param resources.attributes - feature attributes\n   * @return 3DNodeIndexDocument https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md object\n   */\n  static async createNodeIndexDocument(\n    parentNode: NodeIndexDocument,\n    boundingVolumes: BoundingVolumes,\n    lodSelection: LodSelection[],\n    nodeInPage: NodeInPage,\n    resources: I3SConvertedResources\n  ): Promise<Node3DIndexDocument> {\n    const {texture, attributes} = resources;\n    const nodeId = nodeInPage.index!;\n    const parentNodeData = await parentNode.load();\n    const nodeData = {\n      version: parentNodeData.version,\n      id: nodeId.toString(),\n      level: parentNodeData.level! + 1,\n      ...boundingVolumes,\n      lodSelection,\n      parentNode: {\n        id: parentNode.id,\n        href: `../${parentNode.id}`,\n        mbs: parentNodeData.mbs,\n        obb: parentNodeData.obb\n      },\n      children: [],\n      neighbors: []\n    };\n    const node = transform(nodeData, nodeTemplate());\n\n    if (nodeInPage.mesh) {\n      node.geometryData = [{href: './geometries/0'}];\n      node.sharedResource = {href: './shared'};\n\n      if (texture) {\n        node.textureData = [{href: './textures/0'}, {href: './textures/1'}];\n      }\n\n      if (\n        attributes &&\n        attributes.length &&\n        parentNode.converter.layers0?.attributeStorageInfo?.length\n      ) {\n        node.attributeData = [];\n        for (let index = 0; index < attributes.length; index++) {\n          const folderName = parentNode.converter.layers0.attributeStorageInfo[index].key;\n          node.attributeData.push({href: `./attributes/${folderName}/0`});\n        }\n      }\n    }\n\n    return node;\n  }\n}\n"],"mappings":";AAAA,SAAQA,IAAI,QAAO,MAAM;AAQzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAAQC,EAAE,IAAIC,MAAM,QAAO,MAAM;AACjC,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAO,4BAA4B;AAEhF,SAAQC,IAAI,IAAIC,YAAY,QAAO,wBAAwB;AAS3D,OAAO,MAAMC,iBAAiB,CAAC;EAiB7BC,WAAWA,CAACC,EAAU,EAAEC,SAAuB,EAAE;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA,eAXP,IAAI;IAAAA,eAAA,mBAEP,EAAE;IAAAA,eAAA;IAUvC,IAAI,CAACC,QAAQ,GAAGH,EAAE;IAClB,IAAI,CAACA,EAAE,GAAGA,EAAE,KAAK,CAAC,GAAG,MAAM,GAAGA,EAAE,CAACI,QAAQ,CAAC,CAAC;IAC3C,IAAI,CAACH,SAAS,GAAGA,SAAS;EAC5B;EAOA,MAAaI,OAAOA,CAACC,IAAyB,EAA8B;IAC1E,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,CAACC,kBAAkB,EAAE;MAC7C,MAAM,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;IACxB,CAAC,MAAM;MACL,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB;IACA,OAAO,IAAI;EACb;EAMA,MAAaI,WAAWA,CAACC,UAA+B,EAAiB;IACvE,MAAMC,WAA4B,GAAG,EAAE;IACvC,KAAK,MAAMC,IAAI,IAAIF,UAAU,EAAE;MAC7B,MAAMG,QAAQ,GAAG,MAAMD,IAAI,CAACE,IAAI,CAAC,CAAC;MAClCH,WAAW,CAACI,IAAI,CAAC;QACfhB,EAAE,EAAEa,IAAI,CAACb,EAAE;QACXiB,IAAI,QAAAC,MAAA,CAAQL,IAAI,CAACb,EAAE,CAAE;QACrBmB,GAAG,EAAEL,QAAQ,CAACK,GAAG;QACjBC,GAAG,EAAEN,QAAQ,CAACM;MAChB,CAAC,CAAC;IACJ;IACA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACH,MAAM,CAACP,UAAU,CAAC;IAEhD,IAAIL,IAAgC,GAAG,IAAI,CAACA,IAAI;IAChD,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,CAACC,kBAAkB,EAAE;MAC7CF,IAAI,GAAI,MAAM,IAAI,CAACS,IAAI,CAAC,CAAyB;IACnD;IACA,IAAIT,IAAI,EAAE;MAAA,IAAAgB,cAAA;MACRhB,IAAI,CAACe,QAAQ,IAAAC,cAAA,GAAGhB,IAAI,CAACe,QAAQ,cAAAC,cAAA,cAAAA,cAAA,GAAI,EAAE;MACnChB,IAAI,CAACe,QAAQ,GAAGf,IAAI,CAACe,QAAQ,CAACH,MAAM,CAACN,WAAW,CAAC;IACnD;IACA,IAAI,IAAI,CAACX,SAAS,CAACM,OAAO,CAACC,kBAAkB,IAAIF,IAAI,EAAE;MACrD,MAAM,IAAI,CAACG,KAAK,CAACH,IAAI,CAAC;IACxB;EACF;EAKA,MAAaiB,YAAYA,CAAA,EAAkB;IACzC,MAAMT,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC;IAClC,KAAK,MAAMS,SAAS,IAAI,IAAI,CAACH,QAAQ,EAAE;MAAA,IAAAI,qBAAA,EAAAC,kBAAA;MACrC,MAAMC,aAAa,GAAG,MAAMH,SAAS,CAACT,IAAI,CAAC,CAAC;MAC5CY,aAAa,CAACC,SAAS,IAAAH,qBAAA,GAAGE,aAAa,CAACC,SAAS,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MAGvD,IAAII,MAAM,CAACf,QAAQ,aAARA,QAAQ,wBAAAY,kBAAA,GAARZ,QAAQ,CAAEO,QAAQ,cAAAK,kBAAA,uBAAlBA,kBAAA,CAAoBI,MAAM,CAAC,GAAG,IAAI,EAAE;QAC7C,KAAK,MAAMC,QAAQ,IAAIjB,QAAQ,CAACO,QAAQ,IAAI,EAAE,EAAE;UAC9C,IAAIG,SAAS,CAACxB,EAAE,KAAK+B,QAAQ,CAAC/B,EAAE,EAAE;YAChC;UACF;UAEA2B,aAAa,CAACC,SAAS,CAACZ,IAAI,CAAC;YAAC,GAAGe;UAAQ,CAAC,CAAC;QAC7C;MACF,CAAC,MAAM;QAELC,OAAO,CAACC,IAAI,SAAAf,MAAA,CACFM,SAAS,CAACxB,EAAE,wEACtB,CAAC;QACD,OAAO2B,aAAa,CAACC,SAAS;MAChC;MAEA,IAAI,IAAI,CAAC3B,SAAS,CAACM,OAAO,CAACC,kBAAkB,IAAImB,aAAa,EAAE;QAC9D,MAAMH,SAAS,CAACf,KAAK,CAACkB,aAAa,CAAC;MACtC;MACA,MAAMH,SAAS,CAACU,IAAI,CAAC,CAAC;MAEtBV,SAAS,CAACW,KAAK,CAAC,CAAC;IACnB;EACF;EAGA,MAAaD,IAAIA,CAAA,EAAkB;IACjC,IAAI,IAAI,CAAC5B,IAAI,EAAE;MACb,MAAM,IAAI,CAACG,KAAK,CAAC,IAAI,CAACH,IAAI,CAAC;IAC7B;EACF;EAMA,MAAcG,KAAKA,CAACI,IAAyB,EAAiB;IAC5D,MAAMuB,IAAI,GAAG/C,IAAI,CAAC,IAAI,CAACY,SAAS,CAACoC,WAAW,EAAE,OAAO,EAAE,IAAI,CAACrC,EAAE,CAAC;IAC/D,IAAI,IAAI,CAACC,SAAS,CAACM,OAAO,CAAC+B,IAAI,EAAE;MAC/B,MAAM,IAAI,CAACrC,SAAS,CAACsC,UAAU,CAACC,OAAO,CACrC;QACEC,UAAU,WAAAvB,MAAA,CAAW,IAAI,CAAClB,EAAE,iCAA8B;QAC1D0C,YAAY,EAAEA,CAAA,KACZ/C,gBAAgB,CACdyC,IAAI,EACJO,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,EACpB,0BAA0B,EAC1B,IAAI,EACJ,IAAI,CAACZ,SAAS,CAAC4C,YACjB;MACJ,CAAC,EACD,IACF,CAAC;IACH,CAAC,MAAM;MACL,MAAM,IAAI,CAAC5C,SAAS,CAACsC,UAAU,CAACC,OAAO,CACrC;QAACE,YAAY,EAAEA,CAAA,KAAMhD,SAAS,CAAC0C,IAAI,EAAEO,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC;MAAC,CAAC,EAC3D,IACF,CAAC;IACH;EACF;EAMA,MAAcE,IAAIA,CAAA,EAAiC;IACjD,IAAI,IAAI,CAACT,IAAI,EAAE;MACb,OAAO,IAAI,CAACA,IAAI;IAClB;IACA,MAAM8B,IAAI,GAAG,IAAI,CAACpC,EAAE;IACpB,MAAM8C,cAAc,GAAGzD,IAAI,CAAC,IAAI,CAACY,SAAS,CAACoC,WAAW,EAAE,OAAO,EAAED,IAAI,CAAC;IACtE,IAAIW,kBAAkB,GAAG,YAAY;IACrC,IAAI,IAAI,CAAC9C,SAAS,CAACM,OAAO,CAAC+B,IAAI,EAAE;MAC/BS,kBAAkB,GAAG,0BAA0B;IACjD;IACA,OAAQ,MAAMtD,QAAQ,CAACqD,cAAc,EAAEC,kBAAkB,CAAC;EAC5D;EAKQZ,KAAKA,CAAA,EAAS;IACpB,IAAI,CAAC7B,IAAI,GAAG,IAAI;EAClB;EAQA,aAAa0C,cAAcA,CACzBC,eAAgC,EAChChD,SAAuB,EACK;IAC5B,MAAMiD,QAAQ,GAAGpD,iBAAiB,CAACqD,2BAA2B,CAACF,eAAe,CAAC;IAC/E,MAAMG,QAAQ,GAAG,MAAM,IAAItD,iBAAiB,CAAC,CAAC,EAAEG,SAAS,CAAC,CAACI,OAAO,CAAC6C,QAAQ,CAAC;IAC5E,OAAOE,QAAQ;EACjB;EAYA,aAAaC,UAAUA,CACrBC,UAA6B,EAC7BL,eAAgC,EAChCM,YAA4B,EAC5BC,UAAsB,EACtBC,SAAgC,EAChCxD,SAAuB,EACK;IAC5B,MAAMK,IAAI,GAAG,MAAMR,iBAAiB,CAAC4D,uBAAuB,CAC1DJ,UAAU,EACVL,eAAe,EACfM,YAAY,EACZC,UAAU,EACVC,SACF,CAAC;IACD,MAAM5C,IAAI,GAAG,MAAM,IAAIf,iBAAiB,CAAC0D,UAAU,CAACG,KAAK,EAAE1D,SAAS,CAAC,CAACI,OAAO,CAACC,IAAI,CAAC;IACnF,OAAOO,IAAI;EACb;EAOA,OAAOsC,2BAA2BA,CAACF,eAAgC,EAAuB;IACxF,MAAMW,SAAS,GAAG;MAChBC,OAAO,MAAA3C,MAAA,CAAM1B,MAAM,CAAC,CAAC,CAACsE,WAAW,CAAC,CAAC,MAAG;MACtC9D,EAAE,EAAE,MAAM;MACV+D,KAAK,EAAE,CAAC;MACRR,YAAY,EAAE,CACZ;QACES,UAAU,EAAE,sBAAsB;QAClCC,QAAQ,EAAE;MACZ,CAAC,EACD;QACED,UAAU,EAAE,oBAAoB;QAChCC,QAAQ,EAAE;MACZ,CAAC,CACF;MACD,GAAGhB,eAAe;MAClB5B,QAAQ,EAAE;IACZ,CAAC;IACD,OAAO/B,SAAS,CAACsE,SAAS,EAAE/D,YAAY,CAAC,CAAC,CAAC;EAC7C;EAaA,aAAa6D,uBAAuBA,CAClCJ,UAA6B,EAC7BL,eAAgC,EAChCM,YAA4B,EAC5BC,UAAsB,EACtBC,SAAgC,EACF;IAC9B,MAAM;MAACS,OAAO;MAAEC;IAAU,CAAC,GAAGV,SAAS;IACvC,MAAMW,MAAM,GAAGZ,UAAU,CAACG,KAAM;IAChC,MAAMU,cAAc,GAAG,MAAMf,UAAU,CAACvC,IAAI,CAAC,CAAC;IAC9C,MAAMD,QAAQ,GAAG;MACf+C,OAAO,EAAEQ,cAAc,CAACR,OAAO;MAC/B7D,EAAE,EAAEoE,MAAM,CAAChE,QAAQ,CAAC,CAAC;MACrB2D,KAAK,EAAEM,cAAc,CAACN,KAAK,GAAI,CAAC;MAChC,GAAGd,eAAe;MAClBM,YAAY;MACZD,UAAU,EAAE;QACVtD,EAAE,EAAEsD,UAAU,CAACtD,EAAE;QACjBiB,IAAI,QAAAC,MAAA,CAAQoC,UAAU,CAACtD,EAAE,CAAE;QAC3BoB,GAAG,EAAEiD,cAAc,CAACjD,GAAG;QACvBD,GAAG,EAAEkD,cAAc,CAAClD;MACtB,CAAC;MACDE,QAAQ,EAAE,EAAE;MACZO,SAAS,EAAE;IACb,CAAC;IACD,MAAMf,IAAI,GAAGvB,SAAS,CAACwB,QAAQ,EAAEjB,YAAY,CAAC,CAAC,CAAC;IAEhD,IAAI2D,UAAU,CAACc,IAAI,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACnB3D,IAAI,CAAC4D,YAAY,GAAG,CAAC;QAACxD,IAAI,EAAE;MAAgB,CAAC,CAAC;MAC9CJ,IAAI,CAAC6D,cAAc,GAAG;QAACzD,IAAI,EAAE;MAAU,CAAC;MAExC,IAAIiD,OAAO,EAAE;QACXrD,IAAI,CAAC8D,WAAW,GAAG,CAAC;UAAC1D,IAAI,EAAE;QAAc,CAAC,EAAE;UAACA,IAAI,EAAE;QAAc,CAAC,CAAC;MACrE;MAEA,IACEkD,UAAU,IACVA,UAAU,CAACrC,MAAM,KAAAyC,qBAAA,GACjBjB,UAAU,CAACrD,SAAS,CAAC2E,OAAO,cAAAL,qBAAA,gBAAAC,sBAAA,GAA5BD,qBAAA,CAA8BM,oBAAoB,cAAAL,sBAAA,eAAlDA,sBAAA,CAAoD1C,MAAM,EAC1D;QACAjB,IAAI,CAACiE,aAAa,GAAG,EAAE;QACvB,KAAK,IAAInB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGQ,UAAU,CAACrC,MAAM,EAAE6B,KAAK,EAAE,EAAE;UACtD,MAAMoB,UAAU,GAAGzB,UAAU,CAACrD,SAAS,CAAC2E,OAAO,CAACC,oBAAoB,CAAClB,KAAK,CAAC,CAACqB,GAAG;UAC/EnE,IAAI,CAACiE,aAAa,CAAC9D,IAAI,CAAC;YAACC,IAAI,kBAAAC,MAAA,CAAkB6D,UAAU;UAAI,CAAC,CAAC;QACjE;MACF;IACF;IAEA,OAAOlE,IAAI;EACb;AACF"}