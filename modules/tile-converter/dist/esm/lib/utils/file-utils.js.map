{"version":3,"file":"file-utils.js","names":["load","JSONLoader","promises","fs","isAbsolute","join","compressFileWithGzip","writeFile","path","data","fileName","arguments","length","undefined","toWriteData","Promise","Uint8Array","ArrayBuffer","mkdir","recursive","pathFile","err","console","log","concat","writeFileForSlpk","compress","compressList","includes","push","pathGzFile","removeFile","openJson","resolve","reject","count","intervalId","setInterval","then","result","clearInterval","catch","Error","isFileExists","stat","removeDir","rm","unlink","getAbsoluteFilePath","filePath","process","cwd"],"sources":["../../../../src/lib/utils/file-utils.ts"],"sourcesContent":["import {load} from '@loaders.gl/core';\nimport {JSONLoader} from '@loaders.gl/loader-utils';\nimport {promises as fs} from 'fs';\nimport {isAbsolute, join} from 'path';\nimport {compressFileWithGzip} from './compress-util';\n\n/**\n * Write a file with data and name fileName to path\n *\n * @param path - output path\n * @param data - file content\n * @param fileName - name of output file (default: index.json)\n */\nexport async function writeFile(\n  path: string,\n  data: string | Uint8Array | ArrayBuffer | Promise<ArrayBuffer>,\n  fileName: string = 'index.json'\n): Promise<string> {\n  let toWriteData: string | Uint8Array;\n  if (data instanceof Promise) {\n    toWriteData = new Uint8Array(await data);\n  } else if (data instanceof ArrayBuffer) {\n    toWriteData = new Uint8Array(data as ArrayBuffer);\n  } else {\n    toWriteData = data;\n  }\n  await fs.mkdir(path, {recursive: true});\n  const pathFile = join(path, fileName);\n  try {\n    await fs.writeFile(pathFile, toWriteData);\n  } catch (err) {\n    throw err;\n  }\n  console.log(`${pathFile} saved.`); // eslint-disable-line\n  return pathFile;\n}\n\n/**\n * Write a file with data and name fileName to path - specific one for further packaging into slpk\n *\n * @param path - output path\n * @param data - file content\n * @param fileName - name of output file (default: index.json)\n * @param compress - if need to compress file with gzip (default: true)\n * @param compressList - if set - the file should be added to this list and compressed in the end of conversion\n */\nexport async function writeFileForSlpk(\n  path: string,\n  data: string | Uint8Array | ArrayBuffer | Promise<ArrayBuffer>,\n  fileName: string = 'index.json',\n  compress: boolean = true,\n  compressList?: string[] | null\n): Promise<string | null> {\n  const pathFile = await writeFile(path, data, fileName);\n  if (compress) {\n    if (compressList) {\n      if (!compressList.includes(pathFile)) {\n        compressList.push(pathFile);\n        return `${pathFile}.gz`;\n      } else {\n        return null;\n      }\n    } else {\n      const pathGzFile = await compressFileWithGzip(pathFile);\n      // After compression, we don't need an uncompressed file\n      await removeFile(pathFile);\n      return pathGzFile;\n    }\n  }\n  return pathFile;\n}\n\n/**\n * Open json file\n * @param path - path to the file\n * @param fileName - file name\n * @returns object\n */\nexport async function openJson(path: string, fileName: string): Promise<{[key: string]: any}> {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    console.log(`load ${path}/${fileName}.`); // eslint-disable-line\n    const intervalId = setInterval(() => {\n      const pathFile = join(path, fileName);\n      load(pathFile, JSONLoader)\n        .then((result) => {\n          clearInterval(intervalId);\n          resolve(result);\n        })\n        .catch(() => {\n          count++;\n          if (count > 100) {\n            clearInterval(intervalId);\n            reject(new Error(`Cannon load ${path}/${fileName}.`));\n          }\n        });\n    }, 200);\n  });\n}\n\n/**\n * Check if the file exists\n * @param fileName - full name of file\n * @returns true if file exists, otherwise - false\n */\nexport async function isFileExists(fileName: string): Promise<boolean> {\n  try {\n    await fs.stat(fileName);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Remove dir with path\n *\n * @param path\n */\nexport function removeDir(path: string) {\n  // (node:35607) [DEP0147] DeprecationWarning: In future versions of Node.js, fs.rmdir(path, { recursive: true }) will be removed. Use fs.rm(path, { recursive: true }) instead\n  return fs.rm(path, {recursive: true});\n}\n\n/**\n * Remove file with path\n *\n * @param path\n */\nexport function removeFile(path: string) {\n  return fs.unlink(path);\n}\n\n/**\n * Generates absolute file path\n * @param filePath\n */\nexport function getAbsoluteFilePath(filePath: string) {\n  return isAbsolute(filePath) ? filePath : join(process.cwd(), filePath);\n}\n"],"mappings":"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"}