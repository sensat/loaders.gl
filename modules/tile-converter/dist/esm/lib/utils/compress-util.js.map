{"version":3,"file":"compress-util.js","names":["createGzip","join","promises","fs","createReadStream","createWriteStream","archiver","removeFile","ChildProcessProxy","JSZip","MD5Hash","crypt","getAbsoluteFilePath","compressFileWithGzip","pathFile","compressedPathFile","concat","gzip","input","output","Promise","resolve","reject","on","console","log","error","pipe","compressFilesWithZip","fileMap","outputFile","level","arguments","length","undefined","e","archive","zlib","pointer","err","subFileName","subFileData","appendFileToArchive","finalize","compressWithChildProcess","inputFolder","inputFiles","sevenZipExe","process","platform","compressWithChildProcessWindows","compressWithChildProcessUnix","fullOutputFile","args","childProcess","start","command","spawn","cwd","wait","substr","generateHash128FromZip","inputZipFile","readFile","zip","loadAsync","hashTable","zipFiles","files","relativePath","zipEntry","_data","content","compressedContent","dir","hash","Buffer","from","toLowerCase","push","key","atob","value","byteOffset","sort","prev","next","item","longToByteArray","write","hexToBytes","close","long","buffer","ArrayBuffer","longNum","Float64Array","parseInt","Array","Uint8Array","reverse","addFileToZip","fileName","zipFile","fileStream","append","name"],"sources":["../../../../src/lib/utils/compress-util.ts"],"sourcesContent":["import {createGzip} from 'zlib';\nimport {join} from 'path';\nimport {promises as fs, createReadStream, createWriteStream} from 'fs';\nimport archiver from 'archiver';\nimport {removeFile} from './file-utils';\nimport {ChildProcessProxy} from '@loaders.gl/worker-utils';\nimport JSZip from 'jszip';\nimport {MD5Hash} from '@loaders.gl/crypto';\nimport crypt from 'crypt';\nimport {getAbsoluteFilePath} from './file-utils';\n\n/**\n * Compress file to gzip file\n *\n * @param pathFile - the path to the file\n * @return the path to the gzip file\n */\nexport function compressFileWithGzip(pathFile: string): Promise<string> {\n  const compressedPathFile = `${pathFile}.gz`;\n  const gzip = createGzip();\n  const input = createReadStream(pathFile);\n  const output = createWriteStream(compressedPathFile);\n\n  return new Promise((resolve, reject) => {\n    input.on('end', () => {\n      console.log(`${compressedPathFile} compressed and saved.`); // eslint-disable-line no-undef,no-console\n      resolve(compressedPathFile);\n    });\n    input.on('error', (error) => {\n      console.log(`${compressedPathFile}: compression error!`); // eslint-disable-line no-undef,no-console\n      reject(error);\n    });\n    input.pipe(gzip).pipe(output);\n  });\n}\n\n/**\n * Compress files from map into slpk file\n *\n * @param fileMap - map with file paths (key: output path, value: input path)\n * @param outputFile - output slpk file\n * @param level - compression level\n */\nexport async function compressFilesWithZip(\n  fileMap: {[key: string]: string},\n  outputFile: string,\n  level: number = 0\n) {\n  // Before creating a new file, we need to delete the old file\n  try {\n    await removeFile(outputFile);\n  } catch (e) {\n    // Do nothing if old file doesn't exist\n  }\n\n  const output = createWriteStream(outputFile);\n  const archive = archiver('zip', {\n    zlib: {level} // Sets the compression level.\n  });\n\n  return new Promise(async (resolve, reject) => {\n    // listen for all archive data to be writte\n    // 'close' event is fired only when a file descriptor is involved\n    output.on('close', function () {\n      console.log(`${outputFile} saved.`); // eslint-disable-line no-undef,no-console\n      console.log(`${archive.pointer()} total bytes`); // eslint-disable-line no-undef,no-console\n      resolve(null);\n    });\n\n    // This event is fired when the data source is drained no matter what was the data source.\n    // It is not part of this library but rather from the NodeJS Stream API.\n    // @see: https://nodejs.org/api/stream.html#stream_event_end\n    output.on('end', function () {\n      console.log('Data has been drained'); // eslint-disable-line no-undef,no-console\n      resolve(null);\n    });\n\n    // good practice to catch warnings (ie stat failures and other non-blocking errors)\n    archive.on('warning', function (err) {\n      console.log(err); // eslint-disable-line no-undef,no-console\n      reject(err);\n    });\n\n    // good practice to catch this error explicitly\n    archive.on('error', function (err) {\n      reject(err);\n    });\n\n    // pipe archive data to the file\n    archive.pipe(output);\n\n    for (const subFileName in fileMap) {\n      const subFileData = fileMap[subFileName];\n      await appendFileToArchive(archive, subFileName, subFileData);\n    }\n\n    // finalize the archive (ie we are done appending files but streams have to finish yet)\n    archive.finalize();\n  });\n}\n\n/**\n * Compress files using external tool 'zip'/'7z'\n *\n * @param inputFolder - folder to archive - for cwd option\n * @param outputFile - output slpk file\n * @param level - compression level\n * @param inputFiles - input files path to pass to the executable as option\n * @param sevenZipExe - path to 7z.exe executable\n */\nexport async function compressWithChildProcess(\n  inputFolder: string,\n  outputFile: string,\n  level: number,\n  inputFiles: string,\n  sevenZipExe: string\n) {\n  // eslint-disable-next-line no-undef\n  if (process.platform === 'win32') {\n    await compressWithChildProcessWindows(inputFolder, outputFile, level, inputFiles, sevenZipExe);\n  } else {\n    await compressWithChildProcessUnix(inputFolder, outputFile, level, inputFiles);\n  }\n}\n\n/**\n * Compress files using external linux tool 'zip'\n *\n * @param inputFolder - folder to archive - for cwd option\n * @param outputFile - output slpk file\n * @param level - compression level\n * @param inputFiles - input files path to pass to the executable as option\n */\nasync function compressWithChildProcessUnix(\n  inputFolder: string,\n  outputFile: string,\n  level: number = 0,\n  inputFiles: string = '.'\n) {\n  const fullOutputFile = getAbsoluteFilePath(outputFile);\n  const args = [`-${level}`, '-r', fullOutputFile, inputFiles];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'zip',\n    arguments: args,\n    spawn: {\n      cwd: inputFolder\n    },\n    wait: 0\n  });\n}\n\n/**\n * Compress files using windows external tool '7z'\n *\n * @param inputFolder - folder to archive - for cwd option\n * @param outputFile - output slpk file\n * @param level - compression level\n * @param inputFiles - input files path to pass to the executable as option\n * @param sevenZipExe - path to 7z.exe executable\n */\nasync function compressWithChildProcessWindows(\n  inputFolder: string,\n  outputFile: string,\n  level: number = 0,\n  inputFiles: string = join('.', '*'),\n  sevenZipExe: string\n) {\n  // Workaround for @listfile issue. In 7z.exe @-leading files are handled as listfiles\n  // https://sevenzip.osdn.jp/chm/cmdline/syntax.htm\n  if (inputFiles[0] === '@') {\n    inputFiles = `*${inputFiles.substr(1)}`;\n  }\n\n  const fullOutputFile = getAbsoluteFilePath(outputFile);\n  const args = ['a', '-tzip', `-mx=${level}`, fullOutputFile, inputFiles];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: sevenZipExe,\n    arguments: args,\n    spawn: {\n      cwd: `${inputFolder}`\n    },\n    wait: 0\n  });\n}\n\n/**\n * Generate hash file from zip archive\n * https://github.com/Esri/i3s-spec/blob/master/docs/1.7/slpk_hashtable.cmn.md\n *\n * @param inputZipFile\n * @param outputFile\n */\nexport async function generateHash128FromZip(inputZipFile: string, outputFile: string) {\n  const input = await fs.readFile(inputZipFile);\n  const zip = await JSZip.loadAsync(input);\n  const hashTable: {key: string; value: string}[] = [];\n  const zipFiles = zip.files;\n  for (const relativePath in zipFiles) {\n    const zipEntry = zipFiles[relativePath];\n    // Had to use a workaround because the correct string is getting the wrong data\n    // const content = await zipEntry.async('nodebuffer');\n    // _data isn't described in the interface, so lint thought it was wrong\n    const _data = '_data';\n    const content = zipEntry[_data].compressedContent;\n    if (zipEntry.dir) continue; // eslint-disable-line no-continue\n    // eslint-disable-next-line no-undef\n    const hash = await new MD5Hash().hash(Buffer.from(relativePath.toLowerCase()));\n    // eslint-disable-next-line no-undef\n    hashTable.push({key: atob(hash), value: content.byteOffset});\n  }\n\n  hashTable.sort((prev, next) => {\n    if (prev.key === next.key) {\n      return prev.value < next.value ? -1 : 1;\n    }\n    return prev.key < next.key ? -1 : 1;\n  });\n\n  const output = createWriteStream(outputFile);\n  return new Promise((resolve, reject) => {\n    output.on('close', function () {\n      console.log(`${outputFile} generated and saved`); // eslint-disable-line\n      resolve(null);\n    });\n    output.on('error', function (err) {\n      console.log(err); // eslint-disable-line\n      reject(err);\n    });\n    for (const key in hashTable) {\n      const item = hashTable[key];\n      const value = longToByteArray(item.value);\n      // TODO: perhaps you need to wait for the 'drain' event if the write returns 'false'\n      // eslint-disable-next-line no-undef\n      output.write(Buffer.from(crypt.hexToBytes(item.key).concat(value)));\n    }\n    output.close();\n  });\n}\n\n/**\n * Encode 64 bit value to byte array\n *\n * @param long - stringified number\n * @returns\n */\nfunction longToByteArray(long: string): number[] {\n  const buffer = new ArrayBuffer(8); // JS numbers are 8 bytes long, or 64 bits\n  const longNum = new Float64Array(buffer); // so equivalent to Float64\n  longNum[0] = parseInt(long);\n  return Array.from(new Uint8Array(buffer)).reverse(); // reverse to get little endian\n}\n\n/**\n * Add file to zip archive\n *\n * @param inputFile\n * @param fileName\n * @param zipFile\n * @param sevenZipExe\n */\nexport async function addFileToZip(\n  inputFolder: string,\n  fileName: string,\n  zipFile: string,\n  sevenZipExe: string\n) {\n  await compressWithChildProcess(inputFolder, zipFile, 0, fileName, sevenZipExe);\n  console.log(`${fileName} added to ${zipFile}.`); // eslint-disable-line\n}\n\n/**\n *\n * @param archive zip archive instance\n * @param subFileName file path inside archive\n * @param subFileData source file path\n * @returns\n */\nfunction appendFileToArchive(archive: any, subFileName: string, subFileData: string) {\n  return new Promise((resolve) => {\n    const fileStream = createReadStream(subFileData);\n    console.log(`Compression start: ${subFileName}`); // eslint-disable-line no-undef,no-console\n    fileStream.on('close', () => {\n      console.log(`Compression finish: ${subFileName}`); // eslint-disable-line no-undef,no-console\n      resolve(null);\n    });\n    archive.append(fileStream, {name: subFileName});\n  });\n}\n"],"mappings":"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"}