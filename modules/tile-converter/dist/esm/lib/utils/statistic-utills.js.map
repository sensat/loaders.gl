{"version":3,"file":"statistic-utills.js","names":["join","promises","fs","getAbsoluteFilePath","timeConverter","time","nanoSecondsInMillisecond","timeInSeconds","hours","Math","floor","minutes","seconds","milliseconds","result","concat","calculateFilesSize","params","slpk","outputPath","tilesetName","fullOutputPath","slpkPath","stat","size","directoryPath","totalSize","getTotalFilesSize","error","console","log","dirPath","totalFileSize","files","readdir","file","fileStat","isDirectory"],"sources":["../../../../src/lib/utils/statistic-utills.ts"],"sourcesContent":["import {join} from 'path';\nimport {promises as fs} from 'fs';\nimport {getAbsoluteFilePath} from './file-utils';\n\nexport function timeConverter(time) {\n  const nanoSecondsInMillisecond = 1e6;\n  let timeInSeconds = time[0];\n  const hours = Math.floor(timeInSeconds / 3600);\n  timeInSeconds = timeInSeconds - hours * 3600;\n  const minutes = Math.floor(timeInSeconds / 60);\n  timeInSeconds = timeInSeconds - minutes * 60;\n  const seconds = Math.floor(timeInSeconds);\n  const milliseconds = time[1] / nanoSecondsInMillisecond;\n  let result = '';\n\n  if (hours) {\n    result += `${hours}h `;\n  }\n\n  if (minutes) {\n    result += `${minutes}m `;\n  }\n\n  if (seconds) {\n    result += `${seconds}s`;\n  }\n\n  if (!result) {\n    result += `${milliseconds}ms`;\n  }\n\n  return result;\n}\n\nexport async function calculateFilesSize(params) {\n  const {slpk, outputPath, tilesetName} = params;\n  const fullOutputPath = getAbsoluteFilePath(outputPath);\n\n  try {\n    if (slpk) {\n      const slpkPath = join(fullOutputPath, `${tilesetName}.slpk`);\n      const stat = await fs.stat(slpkPath);\n      return stat.size;\n    }\n\n    const directoryPath = join(fullOutputPath, tilesetName);\n    const totalSize = await getTotalFilesSize(directoryPath);\n    return totalSize;\n  } catch (error) {\n    console.log('Calculate file sizes error: ', error); // eslint-disable-line\n    return null;\n  }\n}\n\nasync function getTotalFilesSize(dirPath) {\n  let totalFileSize = 0;\n\n  const files = await fs.readdir(dirPath);\n\n  for (const file of files) {\n    const fileStat = await fs.stat(join(dirPath, file));\n    if (fileStat.isDirectory()) {\n      totalFileSize += await getTotalFilesSize(join(dirPath, file));\n    } else {\n      totalFileSize += fileStat.size;\n    }\n  }\n  return totalFileSize;\n}\n"],"mappings":"AAAA,SAAQA,IAAI,QAAO,MAAM;AACzB,SAAQC,QAAQ,IAAIC,EAAE,QAAO,IAAI;AACjC,SAAQC,mBAAmB,QAAO,cAAc;AAEhD,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAE;EAClC,MAAMC,wBAAwB,GAAG,GAAG;EACpC,IAAIC,aAAa,GAAGF,IAAI,CAAC,CAAC,CAAC;EAC3B,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,aAAa,GAAG,IAAI,CAAC;EAC9CA,aAAa,GAAGA,aAAa,GAAGC,KAAK,GAAG,IAAI;EAC5C,MAAMG,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,aAAa,GAAG,EAAE,CAAC;EAC9CA,aAAa,GAAGA,aAAa,GAAGI,OAAO,GAAG,EAAE;EAC5C,MAAMC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACH,aAAa,CAAC;EACzC,MAAMM,YAAY,GAAGR,IAAI,CAAC,CAAC,CAAC,GAAGC,wBAAwB;EACvD,IAAIQ,MAAM,GAAG,EAAE;EAEf,IAAIN,KAAK,EAAE;IACTM,MAAM,OAAAC,MAAA,CAAOP,KAAK,OAAI;EACxB;EAEA,IAAIG,OAAO,EAAE;IACXG,MAAM,OAAAC,MAAA,CAAOJ,OAAO,OAAI;EAC1B;EAEA,IAAIC,OAAO,EAAE;IACXE,MAAM,OAAAC,MAAA,CAAOH,OAAO,MAAG;EACzB;EAEA,IAAI,CAACE,MAAM,EAAE;IACXA,MAAM,OAAAC,MAAA,CAAOF,YAAY,OAAI;EAC/B;EAEA,OAAOC,MAAM;AACf;AAEA,OAAO,eAAeE,kBAAkBA,CAACC,MAAM,EAAE;EAC/C,MAAM;IAACC,IAAI;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGH,MAAM;EAC9C,MAAMI,cAAc,GAAGlB,mBAAmB,CAACgB,UAAU,CAAC;EAEtD,IAAI;IACF,IAAID,IAAI,EAAE;MACR,MAAMI,QAAQ,GAAGtB,IAAI,CAACqB,cAAc,KAAAN,MAAA,CAAKK,WAAW,UAAO,CAAC;MAC5D,MAAMG,IAAI,GAAG,MAAMrB,EAAE,CAACqB,IAAI,CAACD,QAAQ,CAAC;MACpC,OAAOC,IAAI,CAACC,IAAI;IAClB;IAEA,MAAMC,aAAa,GAAGzB,IAAI,CAACqB,cAAc,EAAED,WAAW,CAAC;IACvD,MAAMM,SAAS,GAAG,MAAMC,iBAAiB,CAACF,aAAa,CAAC;IACxD,OAAOC,SAAS;EAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,KAAK,CAAC;IAClD,OAAO,IAAI;EACb;AACF;AAEA,eAAeD,iBAAiBA,CAACI,OAAO,EAAE;EACxC,IAAIC,aAAa,GAAG,CAAC;EAErB,MAAMC,KAAK,GAAG,MAAM/B,EAAE,CAACgC,OAAO,CAACH,OAAO,CAAC;EAEvC,KAAK,MAAMI,IAAI,IAAIF,KAAK,EAAE;IACxB,MAAMG,QAAQ,GAAG,MAAMlC,EAAE,CAACqB,IAAI,CAACvB,IAAI,CAAC+B,OAAO,EAAEI,IAAI,CAAC,CAAC;IACnD,IAAIC,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAE;MAC1BL,aAAa,IAAI,MAAML,iBAAiB,CAAC3B,IAAI,CAAC+B,OAAO,EAAEI,IAAI,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLH,aAAa,IAAII,QAAQ,CAACZ,IAAI;IAChC;EACF;EACA,OAAOQ,aAAa;AACtB"}