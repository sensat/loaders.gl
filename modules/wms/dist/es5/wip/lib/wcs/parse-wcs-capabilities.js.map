{"version":3,"file":"parse-wcs-capabilities.js","names":["_xml","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","parseWCSCapabilities","text","options","_XMLLoader$parseTextS","parsedXML","XMLLoader","parseTextSync","call","xml","removeNSPrefix","xmlCapabilities","Capabilities"],"sources":["../../../../../src/wip/lib/wcs/parse-wcs-capabilities.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {XMLLoader} from '@loaders.gl/xml';\n\n/** All capabilities of a WCS service - response to a WCS `GetCapabilities` data structure extracted from XML */\nexport type WCSCapabilities = {\n  serviceIdentification: {\n    title: string;\n    serviceTypeVersion: string;\n    serviceType: string;\n  };\n\n  serviceProvider: {\n    providerName: string;\n    providerSite: string;\n    serviceContact: {\n      individualName: string;\n      positionName: string;\n      contactInfo: {\n        address: {\n          administrativeArea: string;\n          city: string;\n          country: string;\n          deliveryPoint: string;\n          electronicMailAddress: string;\n          postalCode: string;\n        };\n        phone: {\n          voice: string;\n        };\n      };\n    };\n  };\n\n  operationsMetadata: {\n    GetCapabilities: any;\n    GetFeatureInfo: any;\n    GetTile: any;\n  };\n\n  contents: {\n    layers: {\n      abstract: string;\n      identifier: string;\n      title: string;\n      formats: string[];\n      styles: {\n        identifier: string;\n        isDefault: string;\n        title: string;\n        abstract?: string;\n      }[];\n      bounds: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      tileMatrixSetLinks: {\n        tileMatrixSet: string;\n      }[];\n      tileMatrixSets: {\n        identifier: string;\n        matrixIds: {\n          identifier: string;\n          matrixHeight: number;\n          matrixWidth: number;\n          scaleDenominator: number;\n          tileWidth: number;\n          tileHeight: number;\n          topLeftCorner: {\n            lon: number;\n            lat: number;\n          };\n        }[];\n      };\n    }[];\n  };\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWCSCapabilities(text: string, options): WCSCapabilities {\n  const parsedXML = XMLLoader.parseTextSync?.(text, {...options, xml: {...options?.xml, removeNSPrefix: true}});\n  const xmlCapabilities: any = parsedXML.Capabilities || parsedXML;\n  return xmlCapabilities;\n}\n"],"mappings":";;;;;;;;AAEA,IAAAA,IAAA,GAAAC,OAAA;AAA0C,SAAAC,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAR,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAmB,yBAAA,GAAAnB,MAAA,CAAAoB,gBAAA,CAAAV,MAAA,EAAAV,MAAA,CAAAmB,yBAAA,CAAAL,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAqB,cAAA,CAAAX,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA;AAkFnC,SAASY,oBAAoBA,CAACC,IAAY,EAAEC,OAAO,EAAmB;EAAA,IAAAC,qBAAA;EAC3E,IAAMC,SAAS,IAAAD,qBAAA,GAAGE,cAAS,CAACC,aAAa,cAAAH,qBAAA,uBAAvBA,qBAAA,CAAAI,IAAA,CAAAF,cAAS,EAAiBJ,IAAI,EAAAd,aAAA,CAAAA,aAAA,KAAMe,OAAO;IAAEM,GAAG,EAAArB,aAAA,CAAAA,aAAA,KAAMe,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,GAAG;MAAEC,cAAc,EAAE;IAAI;EAAC,EAAC,CAAC;EAC7G,IAAMC,eAAoB,GAAGN,SAAS,CAACO,YAAY,IAAIP,SAAS;EAChE,OAAOM,eAAe;AACxB"}