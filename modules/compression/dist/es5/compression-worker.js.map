{"version":3,"file":"compression-worker.js","names":["_workerUtils","require","VERSION","CompressionWorker","id","name","module","version","options","exports","compressOnWorker","data","processOnWorker","_typecheckCompressionWorker"],"sources":["../../src/compression-worker.ts"],"sourcesContent":["import type {WorkerObject} from '@loaders.gl/worker-utils';\nimport {processOnWorker} from '@loaders.gl/worker-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type CompressionWorkerOptions = {\n  compression: string;\n  operation: 'compress' | 'decompress';\n};\n\n/**\n * Worker for Zlib real-time compression and decompression\n */\nexport const CompressionWorker = {\n  id: 'compression',\n  name: 'compression',\n  module: 'compression',\n  version: VERSION,\n  options: {}\n};\n\n/**\n * Provide type safety\n */\nexport function compressOnWorker(\n  data: ArrayBuffer,\n  options: CompressionWorkerOptions\n): Promise<ArrayBuffer> {\n  return processOnWorker(CompressionWorker, data, options);\n}\n\nexport const _typecheckCompressionWorker: WorkerObject = CompressionWorker;\n"],"mappings":";;;;;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AAIA,IAAMC,OAAO,GAAG,sBAAkB,KAAK,WAAW,qBAAiB,QAAQ;AAUpE,IAAMC,iBAAiB,GAAG;EAC/BC,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,aAAa;EACrBC,OAAO,EAAEL,OAAO;EAChBM,OAAO,EAAE,CAAC;AACZ,CAAC;AAACC,OAAA,CAAAN,iBAAA,GAAAA,iBAAA;AAKK,SAASO,gBAAgBA,CAC9BC,IAAiB,EACjBH,OAAiC,EACX;EACtB,OAAO,IAAAI,4BAAe,EAACT,iBAAiB,EAAEQ,IAAI,EAAEH,OAAO,CAAC;AAC1D;AAEO,IAAMK,2BAAyC,GAAGV,iBAAiB;AAACM,OAAA,CAAAI,2BAAA,GAAAA,2BAAA"}