{"version":3,"file":"worker.js","names":["_workerUtils","require","_noCompression","_brotliCompression","_deflateCompression","_gzipCompression","_lz4Compression","_snappyCompression","_zstdCompression","_lz4js","_interopRequireDefault","modules","lz4js","COMPRESSIONS","NoCompression","BrotliCompression","DeflateCompression","GZipCompression","LZ4Compression","SnappyCompression","ZstdCompression","createWorker","_ref","_asyncToGenerator2","default","_regenerator","mark","_callee","data","options","operation","compression","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","getOperation","String","getCompression","t0","compress","abrupt","sent","decompress","Error","stop","_x","apply","concat","name","Compression","find","compression_"],"sources":["../../../src/workers/worker.ts"],"sourcesContent":["import {createWorker} from '@loaders.gl/worker-utils';\n\n// Compressors\nimport {NoCompression} from '../lib/no-compression';\nimport {BrotliCompression} from '../lib/brotli-compression';\nimport {DeflateCompression} from '../lib/deflate-compression';\nimport {GZipCompression} from '../lib/gzip-compression';\nimport {LZ4Compression} from '../lib/lz4-compression';\n// import {LZOCompression} from '../lib/lzo-compression';\nimport {SnappyCompression} from '../lib/snappy-compression';\nimport {ZstdCompression} from '../lib/zstd-compression';\n\n// Import big dependencies\n\n// import brotli from 'brotli'; - brotli has problems with decompress in browsers\n// import brotliDecompress from 'brotli/decompress';\nimport lz4js from 'lz4js';\n// import lzo from 'lzo';\n// import {ZstdCodec} from 'zstd-codec';\n\n// Inject large dependencies through Compression constructor options\nconst modules = {\n  // brotli has problems with decompress in browsers\n  // brotli: {\n  //   decompress: brotliDecompress,\n  //   compress: () => {\n  //     throw new Error('brotli compress');\n  //   }\n  // },\n  lz4js\n  // lzo,\n  // 'zstd-codec': ZstdCodec\n};\n\n/** @type {Compression[]} */\nconst COMPRESSIONS = [\n  new NoCompression({modules}),\n  new BrotliCompression({modules}),\n  new DeflateCompression({modules}),\n  new GZipCompression({modules}),\n  // new LZOCompression({modules}),\n  new LZ4Compression({modules}),\n  new SnappyCompression({modules}),\n  new ZstdCompression({modules})\n];\n\ncreateWorker(async (data, options = {}) => {\n  const operation = getOperation(String(options?.operation));\n  const compression = getCompression(String(options?.compression));\n\n  // @ts-ignore\n  switch (operation) {\n    case 'compress':\n      return await compression.compress(data);\n    case 'decompress':\n      return await compression.decompress(data);\n    default:\n      throw new Error('invalid option');\n  }\n});\n\nfunction getOperation(operation: string): 'compress' | 'decompress' {\n  switch (operation) {\n    case 'compress':\n    case 'deflate':\n      return 'compress';\n    case 'decompress':\n    case 'inflate':\n      return 'decompress';\n    default:\n      throw new Error(\n        `@loaders.gl/compression: Unsupported operation ${operation}. Expected 'compress' or 'decompress'`\n      );\n  }\n}\n\nfunction getCompression(name: string) {\n  const Compression = COMPRESSIONS.find((compression_) => name === compression_.name);\n  if (!Compression) {\n    throw new Error(`@loaders.gl/compression: Unsupported compression ${name}`);\n  }\n  return Compression;\n}\n"],"mappings":"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"}