{"version":3,"file":"snappy-compression.js","names":["_compression","require","_snappyjs","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","SnappyCompression","_Compression","_inherits2","_super","options","_this","_classCallCheck2","_defineProperty2","_assertThisInitialized2","_createClass2","key","value","compressSync","input","compress","decompressSync","uncompress","Compression","exports"],"sources":["../../../src/lib/snappy-compression.ts"],"sourcesContent":["// SNAPPY (aka ZIPPY)\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\nimport {compress, uncompress} from 'snappyjs'; // https://bundlephobia.com/package/snappy\n\n/**\n * Snappy/zippy compression / decompression\n */\nexport class SnappyCompression extends Compression {\n  readonly name: string = 'snappy';\n  readonly extensions = [];\n  readonly contentEncodings = [];\n  readonly isSupported = true;\n  readonly options: CompressionOptions;\n\n  constructor(options?: CompressionOptions) {\n    super(options);\n    this.options = options || {};\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    // Accepts arrayBuffer - https://github.com/zhipeng-jia/snappyjs#usage\n    return compress(input);\n  }\n\n  decompressSync(input: ArrayBuffer): ArrayBuffer {\n    // Accepts arrayBuffer - https://github.com/zhipeng-jia/snappyjs#usage\n    return uncompress(input);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AAA8C,SAAAE,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;AAAA,IAKjCC,iBAAiB,aAAAC,YAAA;EAAA,IAAAC,UAAA,CAAAlB,OAAA,EAAAgB,iBAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAA1B,YAAA,CAAAuB,iBAAA;EAO5B,SAAAA,kBAAYI,OAA4B,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAAtB,OAAA,QAAAgB,iBAAA;IACxCK,KAAA,GAAAF,MAAA,CAAAL,IAAA,OAAMM,OAAO;IAAE,IAAAG,gBAAA,CAAAvB,OAAA,MAAAwB,uBAAA,CAAAxB,OAAA,EAAAqB,KAAA,WAPO,QAAQ;IAAA,IAAAE,gBAAA,CAAAvB,OAAA,MAAAwB,uBAAA,CAAAxB,OAAA,EAAAqB,KAAA,iBACV,EAAE;IAAA,IAAAE,gBAAA,CAAAvB,OAAA,MAAAwB,uBAAA,CAAAxB,OAAA,EAAAqB,KAAA,uBACI,EAAE;IAAA,IAAAE,gBAAA,CAAAvB,OAAA,MAAAwB,uBAAA,CAAAxB,OAAA,EAAAqB,KAAA,kBACP,IAAI;IAAA,IAAAE,gBAAA,CAAAvB,OAAA,MAAAwB,uBAAA,CAAAxB,OAAA,EAAAqB,KAAA;IAKzBA,KAAA,CAAKD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAAC,OAAAC,KAAA;EAC/B;EAAC,IAAAI,aAAA,CAAAzB,OAAA,EAAAgB,iBAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAaC,KAAkB,EAAe;MAE5C,OAAO,IAAAC,kBAAQ,EAACD,KAAK,CAAC;IACxB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAI,eAAeF,KAAkB,EAAe;MAE9C,OAAO,IAAAG,oBAAU,EAACH,KAAK,CAAC;IAC1B;EAAC;EAAA,OAAAb,iBAAA;AAAA,EApBoCiB,wBAAW;AAAAC,OAAA,CAAAlB,iBAAA,GAAAA,iBAAA"}