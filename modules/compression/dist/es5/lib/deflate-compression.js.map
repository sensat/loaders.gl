{"version":3,"file":"deflate-compression.js","names":["_compression","require","_loaderUtils","_pako","_interopRequireDefault","_zlib","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","n","next","return","_return","ret","throw","_throw","thr","DeflateCompression","_Compression","_inherits2","_super","_this4","options","length","undefined","_classCallCheck2","_defineProperty2","_assertThisInitialized2","_createClass2","key","_compress","_asyncToGenerator2","_regenerator","mark","_callee","input","_this$options$deflate","_this$options$deflate2","buffer","wrap","_callee$","_context","prev","isBrowser","deflate","useZlib","gzip","promisify1","zlib","t0","sent","abrupt","toArrayBuffer","compressSync","stop","compress","_x","_decompress","_callee2","_this$options$deflate3","_this$options$deflate4","_callee2$","_context2","gunzip","inflate","decompressSync","decompress","_x2","_this$options$deflate5","_this$options","_this$options$deflate6","gzipSync","deflateSync","pakoOptions","inputArray","Uint8Array","pako","_this$options$deflate7","_this$options2","_this$options$deflate8","gunzipSync","inflateSync","compressBatches","_this","_wrapAsyncGenerator2","_callee3","_this$options3","pakoProcessor","_callee3$","_context3","Deflate","delegateYield","_asyncGeneratorDelegate2","transformBatches","_awaitAsyncGenerator2","decompressBatches","_this2","_callee4","_this2$options","_callee4$","_context4","Inflate","_this3","_callee5","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","uint8Array","_ok","_chunks","emptyChunk","ok","chunks","_callee5$","_context5","onData","_onData","bind","onEnd","_onEnd","push","Error","concat","_getError","_getChunks","t1","finish","status","code","MESSAGES","name","Compression","exports"],"sources":["../../../src/lib/deflate-compression.ts"],"sourcesContent":["// DEFLATE\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport pako from 'pako'; // https://bundlephobia.com/package/pako\nimport zlib from 'zlib';\nimport {promisify1} from '@loaders.gl/loader-utils';\n\nexport type DeflateCompressionOptions = CompressionOptions & {\n  deflate?: pako.InflateOptions & pako.DeflateOptions & {useZlib?: boolean};\n};\n\n/**\n * DEFLATE compression / decompression\n */\nexport class DeflateCompression extends Compression {\n  readonly name: string = 'deflate';\n  readonly extensions: string[] = [];\n  readonly contentEncodings = ['deflate'];\n  readonly isSupported = true;\n\n  readonly options: DeflateCompressionOptions;\n\n  private _chunks: ArrayBuffer[] = [];\n\n  constructor(options: DeflateCompressionOptions = {}) {\n    super(options);\n    this.options = options;\n  }\n\n  async compress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.deflate?.useZlib) {\n      const buffer = this.options.deflate?.gzip\n        ? await promisify1(zlib.gzip)(input)\n        : await promisify1(zlib.deflate)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.compressSync(input);\n  }\n\n  async decompress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.deflate?.useZlib) {\n      const buffer = this.options.deflate?.gzip\n        ? await promisify1(zlib.gunzip)(input)\n        : await promisify1(zlib.inflate)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.decompressSync(input);\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.deflate?.useZlib) {\n      const buffer = this.options.deflate?.gzip ? zlib.gzipSync(input) : zlib.deflateSync(input);\n      return toArrayBuffer(buffer);\n    }\n    const pakoOptions: pako.DeflateOptions = this.options?.deflate || {};\n    const inputArray = new Uint8Array(input);\n    return pako.deflate(inputArray, pakoOptions).buffer;\n  }\n\n  decompressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.deflate?.useZlib) {\n      const buffer = this.options.deflate?.gzip ? zlib.gunzipSync(input) : zlib.inflateSync(input);\n      return toArrayBuffer(buffer);\n    }\n    const pakoOptions: pako.InflateOptions = this.options?.deflate || {};\n    const inputArray = new Uint8Array(input);\n    return pako.inflate(inputArray, pakoOptions).buffer;\n  }\n\n  async *compressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    const pakoOptions: pako.DeflateOptions = this.options?.deflate || {};\n    const pakoProcessor = new pako.Deflate(pakoOptions);\n    yield* this.transformBatches(pakoProcessor, asyncIterator);\n  }\n\n  async *decompressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    const pakoOptions: pako.InflateOptions = this.options?.deflate || {};\n    const pakoProcessor = new pako.Inflate(pakoOptions);\n    yield* this.transformBatches(pakoProcessor, asyncIterator);\n  }\n\n  async *transformBatches(\n    pakoProcessor: pako.Inflate | pako.Deflate,\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    pakoProcessor.onData = this._onData.bind(this);\n    pakoProcessor.onEnd = this._onEnd.bind(this);\n    for await (const chunk of asyncIterator) {\n      const uint8Array = new Uint8Array(chunk);\n      const ok = pakoProcessor.push(uint8Array, false); // false -> not last chunk\n      if (!ok) {\n        throw new Error(`${this._getError()}write`);\n      }\n      const chunks = this._getChunks();\n      yield* chunks;\n    }\n\n    // End\n    const emptyChunk = new Uint8Array(0);\n    const ok = pakoProcessor.push(emptyChunk, true); // true -> last chunk\n    if (!ok) {\n      // For some reason we get error but it still works???\n      // throw new Error(this._getError() + 'end');\n    }\n    const chunks = this._getChunks();\n    yield* chunks;\n  }\n\n  _onData(chunk) {\n    this._chunks.push(chunk);\n  }\n\n  _onEnd(status) {\n    if (status !== 0) {\n      throw new Error(this._getError(status) + this._chunks.length);\n    }\n  }\n\n  _getChunks(): ArrayBuffer[] {\n    const chunks = this._chunks;\n    this._chunks = [];\n    return chunks;\n  }\n\n  // TODO - For some reason we don't get the error message from pako in _onEnd?\n  _getError(code: number = 0): string {\n    const MESSAGES = {\n      /* Z_NEED_DICT       2  */\n      2: 'need dictionary',\n      /* Z_STREAM_END      1  */\n      1: 'stream end',\n      /* Z_OK              0  */\n      0: '',\n      /* Z_ERRNO         (-1) */\n      '-1': 'file error',\n      /* Z_STREAM_ERROR  (-2) */\n      '-2': 'stream error',\n      /* Z_DATA_ERROR    (-3) */\n      '-3': 'data error',\n      /* Z_MEM_ERROR     (-4) */\n      '-4': 'insufficient memory',\n      /* Z_BUF_ERROR     (-5) */\n      '-5': 'buffer error',\n      /* Z_VERSION_ERROR (-6) */\n      '-6': 'incompatible version'\n    };\n    return `${this.name}: ${MESSAGES[code]}`;\n  }\n}\n"],"mappings":"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"}