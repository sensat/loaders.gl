{"version":3,"file":"brotli-compression.js","names":["_compression","require","_loaderUtils","_decode","_zlib","_interopRequireDefault","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","DEFAULT_BROTLI_OPTIONS","brotli","mode","quality","lgwin","BrotliCompression","_Compression","_inherits2","_super","options","_this","_classCallCheck2","_assertThisInitialized2","_createClass2","value","_preload","_asyncToGenerator2","_regenerator","mark","_callee","_this$options","_this$options$modules","wrap","_callee$","_context","prev","next","modules","console","warn","concat","name","stop","preload","_compress","_callee2","input","_this$options$brotli","buffer","_callee2$","_context2","isBrowser","useZlib","promisify1","zlib","brotliCompress","sent","abrupt","toArrayBuffer","compressSync","compress","_x","_this$options$brotli2","_this$options2","brotliCompressSync","brotliOptions","inputArray","Uint8Array","Error","outputArray","_decompress","_callee3","_this$options$brotli3","_callee3$","_context3","brotliDecompress","decompressSync","decompress","_x2","_this$options$brotli4","_this$options3","brotliDecompressSync","BrotliDecode","undefined","Compression","exports"],"sources":["../../../src/lib/brotli-compression.ts"],"sourcesContent":["// BROTLI\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport type brotliNamespace from 'brotli';\n// import brotli from 'brotli';  // https://bundlephobia.com/package/brotli\nimport {BrotliDecode} from '../brotli/decode';\nimport zlib from 'zlib';\nimport {promisify1} from '@loaders.gl/loader-utils';\n\nexport type BrotliCompressionOptions = CompressionOptions & {\n  brotli?: {\n    mode?: number;\n    quality?: number;\n    lgwin?: number;\n    useZlib?: boolean;\n  };\n};\n\nconst DEFAULT_BROTLI_OPTIONS = {\n  brotli: {\n    mode: 0,\n    quality: 8,\n    lgwin: 22\n  }\n};\n\nlet brotli: typeof brotliNamespace;\n\n/**\n * brotli compression / decompression\n */\nexport class BrotliCompression extends Compression {\n  readonly name: string = 'brotli';\n  readonly extensions = ['br'];\n  readonly contentEncodings = ['br'];\n  readonly isSupported = true;\n  readonly options: BrotliCompressionOptions;\n\n  constructor(options: BrotliCompressionOptions) {\n    super(options);\n    this.options = options;\n  }\n\n  /**\n   * brotli is an injectable dependency due to big size\n   * @param options\n   */\n  async preload(): Promise<void> {\n    brotli = brotli || this.options?.modules?.brotli;\n    if (!brotli) {\n      // eslint-disable-next-line no-console\n      console.warn(`${this.name} library not installed`);\n    }\n  }\n\n  async compress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = await promisify1(zlib.brotliCompress)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.compressSync(input);\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = zlib.brotliCompressSync(input);\n      return toArrayBuffer(buffer);\n    }\n    const brotliOptions = {...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli};\n    const inputArray = new Uint8Array(input);\n\n    if (!brotli) {\n      throw new Error('brotli compression: brotli module not installed');\n    }\n\n    // @ts-ignore brotli types state that only Buffers are accepted...\n    const outputArray = brotli.compress(inputArray, brotliOptions);\n    return outputArray.buffer;\n  }\n\n  async decompress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = await promisify1(zlib.brotliDecompress)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.decompressSync(input);\n  }\n\n  decompressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = zlib.brotliDecompressSync(input);\n      return toArrayBuffer(buffer);\n    }\n\n    const brotliOptions = {...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli};\n    const inputArray = new Uint8Array(input);\n\n    if (brotli) {\n      // @ts-ignore brotli types state that only Buffers are accepted...\n      const outputArray = brotli.decompress(inputArray, brotliOptions);\n      return outputArray.buffer;\n    }\n    const outputArray = BrotliDecode(inputArray, undefined);\n    return outputArray.buffer;\n  }\n}\n"],"mappings":"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"}