{"version":3,"file":"lz4-compression.js","names":["_loaderUtils","require","_compression","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","LZ4_MAGIC_NUMBER","lz4js","LZ4Compression","_Compression","_inherits2","_super","options","_this$options","_this$options$modules","_this","_classCallCheck2","_defineProperty2","_assertThisInitialized2","modules","Error","name","_createClass2","key","value","compressSync","input","inputArray","Uint8Array","compress","buffer","decompressSync","data","maxSize","isMagicNumberExists","checkMagicNumber","decompress","error","improveError","uncompressed","uncompressedSize","decodeBlock","slice","toArrayBuffer","output","startIndex","endIndex","length","index","token","literalsLength","end","offset","matchLength","pos","magic","Uint32Array","Compression","exports"],"sources":["../../../src/lib/lz4-compression.ts"],"sourcesContent":["// Copyright (c) 2012 Pierre Curto\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable complexity */\n/* eslint-disable max-statements */\n\n// LZ4\nimport {toArrayBuffer} from '@loaders.gl/loader-utils';\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\n// import lz4js from 'lz4js'; // https://bundlephobia.com/package/lz4\nconst LZ4_MAGIC_NUMBER = 0x184d2204;\n\nlet lz4js;\n\n/**\n * LZ4 compression / decompression\n */\nexport class LZ4Compression extends Compression {\n  readonly name: string = 'lz4';\n  readonly extensions = ['lz4'];\n  readonly contentEncodings = ['x-lz4'];\n  readonly isSupported = true;\n  readonly options: CompressionOptions;\n\n  constructor(options: CompressionOptions) {\n    super(options);\n    this.options = options;\n\n    lz4js = lz4js || this.options?.modules?.lz4js;\n    if (!lz4js) {\n      throw new Error(this.name);\n    }\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    const inputArray = new Uint8Array(input);\n    return lz4js.compress(inputArray).buffer;\n  }\n\n  /**\n   * Decompresses an ArrayBuffer containing an Lz4 frame. maxSize is optional; if not\n   * provided, a maximum size will be determined by examining the data. The\n   * returned ArrayBuffer will always be perfectly sized.\n   * If data provided without magic number we will parse it as block\n   */\n  decompressSync(data: ArrayBuffer, maxSize?: number): ArrayBuffer {\n    try {\n      const isMagicNumberExists = this.checkMagicNumber(data);\n      const inputArray = new Uint8Array(data);\n\n      if (isMagicNumberExists) {\n        return lz4js.decompress(inputArray, maxSize).buffer;\n      }\n\n      if (!maxSize) {\n        const error = new Error('Need to provide maxSize');\n        throw this.improveError(error);\n      }\n\n      let uncompressed = new Uint8Array(maxSize);\n      const uncompressedSize = this.decodeBlock(inputArray, uncompressed);\n      uncompressed = uncompressed.slice(0, uncompressedSize);\n\n      return toArrayBuffer(uncompressed);\n    } catch (error) {\n      throw this.improveError(error);\n    }\n  }\n\n  /**\n   * Decode lz4 file as block\n   * Solution taken from here\n   * https://github.com/pierrec/node-lz4/blob/0dac687262403fd34f905b963da7220692f2a4a1/lib/binding.js#L25\n   * @param input\n   * @param output\n   * @param startIndex\n   * @param endIndex\n   */\n  decodeBlock(\n    data: Uint8Array,\n    output: Uint8Array,\n    startIndex?: number,\n    endIndex?: number\n  ): number {\n    startIndex = startIndex || 0;\n    endIndex = endIndex || data.length - startIndex;\n\n    let uncompressedSize = 0;\n    // Process each sequence in the incoming data\n    for (let index = startIndex; index < endIndex; ) {\n      const token = data[index++];\n\n      // Literals\n      let literalsLength = token >> 4;\n\n      if (literalsLength > 0) {\n        // length of literals\n        let length = literalsLength + 240;\n\n        while (length === 255) {\n          length = data[index++];\n          literalsLength += length;\n        }\n\n        // Copy the literals\n        const end = index + literalsLength;\n\n        while (index < end) {\n          output[uncompressedSize++] = data[index++];\n        }\n\n        // End of buffer?\n        if (index === endIndex) {\n          return uncompressedSize;\n        }\n      }\n\n      // Match copy\n      // 2 bytes offset (little endian)\n      const offset = data[index++] | (data[index++] << 8);\n\n      // 0 is an invalid offset value\n      if (offset === 0 || offset > uncompressedSize) {\n        return -(index - 2);\n      }\n\n      // length of match copy\n      let matchLength = token & 0xf;\n      let length = matchLength + 240;\n\n      while (length === 255) {\n        length = data[index++];\n        matchLength += length;\n      }\n\n      // Copy the match\n      let pos = uncompressedSize - offset; // position of the match copy in the current output\n      const end = uncompressedSize + matchLength + 4; // minmatch = 4\n\n      while (uncompressedSize < end) {\n        output[uncompressedSize++] = output[pos++];\n      }\n    }\n\n    return uncompressedSize;\n  }\n\n  /**\n   * Compare file magic with lz4 magic number\n   * @param input\n   */\n  checkMagicNumber(data: ArrayBuffer): boolean {\n    const magic = new Uint32Array(data.slice(0, 4));\n    return magic[0] === LZ4_MAGIC_NUMBER;\n  }\n}\n"],"mappings":"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"}