{"version":3,"file":"lzo-compression.js","names":["toBuffer","Compression","lzo","LZOCompression","constructor","options","_this$options","_this$options$modules","_defineProperty","modules","Error","name","preload","compress","input","inputBuffer","buffer","decompress","error"],"sources":["../../../src/lib/lzo-compression.ts"],"sourcesContent":["// LZO\n// import {loadLibrary} from '@loaders.gl/worker-utils';\nimport {toBuffer} from '@loaders.gl/loader-utils';\n\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\n// import {isBrowser} from '@loaders.gl/loader-utils';\n\n// import lzo from 'lzo'; // https://bundlephobia.com/package/lzo\n// import {decompress} from 'lzo-wasm';\n\n// const LZO_WASM_JS_URL = './node_modules/lzo-wasm/lzo-wasm.js';\n// const LZO_WASM_WASM_URL = './node_modules/lzo-wasm/lzo-wasm.wasm';\n\nlet lzo;\n\n/**\n * Lempel-Ziv-Oberheimer compression / decompression\n */\nexport class LZOCompression extends Compression {\n  readonly name = 'lzo';\n  readonly extensions = [];\n  readonly contentEncodings = [];\n  readonly isSupported = false; // !isBrowser;\n  readonly options: CompressionOptions;\n\n  /**\n   * lzo is an injectable dependency due to big size\n   * @param options\n   */\n  constructor(options: CompressionOptions) {\n    super(options);\n    this.options = options;\n\n    lzo = lzo || this.options?.modules?.lzo;\n    if (!lzo) {\n      throw new Error(this.name);\n    }\n  }\n\n  async preload() {\n    // await loadLibrary(LZO_WASM_JS_URL);\n    // await loadLibrary(LZO_WASM_WASM_URL);\n  }\n\n  async compress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    await this.preload();\n    // const inputArray = new Uint8Array(input);\n    const inputBuffer = toBuffer(input);\n    return lzo.compress(inputBuffer).buffer;\n  }\n\n  async decompress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    try {\n      await this.preload();\n      // const inputArray = new Uint8Array(input);\n      const inputBuffer = toBuffer(input);\n      return lzo.decompress(inputBuffer).buffer;\n    } catch (error) {\n      // TODO - solve SharedArrayBuffer issues\n      // return decompress(input);\n      throw error;\n    }\n  }\n}\n"],"mappings":";AAEA,SAAQA,QAAQ,QAAO,0BAA0B;AAGjD,SAAQC,WAAW,QAAO,eAAe;AASzC,IAAIC,GAAG;AAKP,OAAO,MAAMC,cAAc,SAASF,WAAW,CAAC;EAW9CG,WAAWA,CAACC,OAA2B,EAAE;IAAA,IAAAC,aAAA,EAAAC,qBAAA;IACvC,KAAK,CAACF,OAAO,CAAC;IAACG,eAAA,eAXD,KAAK;IAAAA,eAAA,qBACC,EAAE;IAAAA,eAAA,2BACI,EAAE;IAAAA,eAAA,sBACP,KAAK;IAAAA,eAAA;IAS1B,IAAI,CAACH,OAAO,GAAGA,OAAO;IAEtBH,GAAG,GAAGA,GAAG,MAAAI,aAAA,GAAI,IAAI,CAACD,OAAO,cAAAC,aAAA,wBAAAC,qBAAA,GAAZD,aAAA,CAAcG,OAAO,cAAAF,qBAAA,uBAArBA,qBAAA,CAAuBL,GAAG;IACvC,IAAI,CAACA,GAAG,EAAE;MACR,MAAM,IAAIQ,KAAK,CAAC,IAAI,CAACC,IAAI,CAAC;IAC5B;EACF;EAEA,MAAMC,OAAOA,CAAA,EAAG,CAGhB;EAEA,MAAMC,QAAQA,CAACC,KAAkB,EAAwB;IACvD,MAAM,IAAI,CAACF,OAAO,CAAC,CAAC;IAEpB,MAAMG,WAAW,GAAGf,QAAQ,CAACc,KAAK,CAAC;IACnC,OAAOZ,GAAG,CAACW,QAAQ,CAACE,WAAW,CAAC,CAACC,MAAM;EACzC;EAEA,MAAMC,UAAUA,CAACH,KAAkB,EAAwB;IACzD,IAAI;MACF,MAAM,IAAI,CAACF,OAAO,CAAC,CAAC;MAEpB,MAAMG,WAAW,GAAGf,QAAQ,CAACc,KAAK,CAAC;MACnC,OAAOZ,GAAG,CAACe,UAAU,CAACF,WAAW,CAAC,CAACC,MAAM;IAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;MAGd,MAAMA,KAAK;IACb;EACF;AACF"}