{"version":3,"file":"no-compression.js","names":["Compression","NoCompression","constructor","options","_defineProperty","compressSync","input","decompressSync","compressBatches","asyncIterator","decompressBatches"],"sources":["../../../src/lib/no-compression.ts"],"sourcesContent":["// NO COMPRESSION\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\n\n/**\n * Applies no compression.\n */\nexport class NoCompression extends Compression {\n  readonly name: string = 'uncompressed';\n  readonly extensions: string[] = [];\n  readonly contentEncodings: string[] = [];\n  readonly isSupported = true;\n\n  readonly options: CompressionOptions;\n\n  constructor(options?: CompressionOptions) {\n    super(options);\n    this.options = options || {};\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    return input;\n  }\n\n  decompressSync(input: ArrayBuffer): ArrayBuffer {\n    return input;\n  }\n\n  async *compressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    return yield* asyncIterator;\n  }\n\n  async *decompressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    return yield* asyncIterator;\n  }\n}\n"],"mappings":";AAEA,SAAQA,WAAW,QAAO,eAAe;AAKzC,OAAO,MAAMC,aAAa,SAASD,WAAW,CAAC;EAQ7CE,WAAWA,CAACC,OAA4B,EAAE;IACxC,KAAK,CAACA,OAAO,CAAC;IAACC,eAAA,eARO,cAAc;IAAAA,eAAA,qBACN,EAAE;IAAAA,eAAA,2BACI,EAAE;IAAAA,eAAA,sBACjB,IAAI;IAAAA,eAAA;IAMzB,IAAI,CAACD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC9B;EAEAE,YAAYA,CAACC,KAAkB,EAAe;IAC5C,OAAOA,KAAK;EACd;EAEAC,cAAcA,CAACD,KAAkB,EAAe;IAC9C,OAAOA,KAAK;EACd;EAEA,OAAOE,eAAeA,CACpBC,aAAiE,EACrC;IAC5B,OAAO,OAAOA,aAAa;EAC7B;EAEA,OAAOC,iBAAiBA,CACtBD,aAAiE,EACrC;IAC5B,OAAO,OAAOA,aAAa;EAC7B;AACF"}