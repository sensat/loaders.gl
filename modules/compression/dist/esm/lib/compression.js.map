{"version":3,"file":"compression.js","names":["concatenateArrayBuffersAsync","Compression","constructor","options","_defineProperty","compressBatches","bind","decompressBatches","preload","compress","input","compressSync","decompress","size","decompressSync","Error","concat","name","asyncIterator","concatenate","improveError","error","message","includes"],"sources":["../../../src/lib/compression.ts"],"sourcesContent":["// Compression interface\nimport {concatenateArrayBuffersAsync} from '@loaders.gl/loader-utils';\n\n/** Compression options */\nexport type CompressionOptions = {\n  // operation: 'compress' | 'decompress';\n  modules?: {[moduleName: string]: any};\n};\n\n/** Compression */\nexport abstract class Compression {\n  abstract readonly name: string;\n  abstract readonly extensions: string[];\n  abstract readonly contentEncodings: string[];\n  abstract readonly isSupported: boolean;\n\n  constructor(options?: CompressionOptions) {\n    this.compressBatches = this.compressBatches.bind(this);\n    this.decompressBatches = this.decompressBatches.bind(this);\n  }\n\n  /** Preloads any dynamic libraries. May enable sync functions */\n  async preload(): Promise<void> {\n    return;\n  }\n\n  /** Asynchronously compress data */\n  async compress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    await this.preload();\n    return this.compressSync(input);\n  }\n\n  /** Asynchronously decompress data */\n  async decompress(input: ArrayBuffer, size?: number): Promise<ArrayBuffer> {\n    await this.preload();\n    return this.decompressSync(input, size);\n  }\n\n  /** Synchronously compress data */\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    throw new Error(`${this.name}: sync compression not supported`);\n  }\n\n  /** Synchronously compress data */\n  decompressSync(input: ArrayBuffer, size?: number): ArrayBuffer {\n    throw new Error(`${this.name}: sync decompression not supported`);\n  }\n\n  /** Compress batches */\n  async *compressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    // TODO - implement incremental compression\n    const input = await this.concatenate(asyncIterator);\n    yield this.compress(input);\n  }\n\n  /** Decompress batches */\n  async *decompressBatches(\n    asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>\n  ): AsyncIterable<ArrayBuffer> {\n    // TODO - implement incremental compression\n    const input = await this.concatenate(asyncIterator);\n    yield this.decompress(input);\n  }\n\n  // HELPERS\n\n  protected concatenate(asyncIterator): Promise<ArrayBuffer> {\n    return concatenateArrayBuffersAsync(asyncIterator);\n  }\n\n  protected improveError(error) {\n    if (!error.message.includes(this.name)) {\n      error.message = `${this.name} ${error.message}`;\n    }\n    return error;\n  }\n}\n"],"mappings":";AACA,SAAQA,4BAA4B,QAAO,0BAA0B;AASrE,OAAO,MAAeC,WAAW,CAAC;EAMhCC,WAAWA,CAACC,OAA4B,EAAE;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IACxC,IAAI,CAACC,eAAe,GAAG,IAAI,CAACA,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACD,IAAI,CAAC,IAAI,CAAC;EAC5D;EAGA,MAAME,OAAOA,CAAA,EAAkB;IAC7B;EACF;EAGA,MAAMC,QAAQA,CAACC,KAAkB,EAAwB;IACvD,MAAM,IAAI,CAACF,OAAO,CAAC,CAAC;IACpB,OAAO,IAAI,CAACG,YAAY,CAACD,KAAK,CAAC;EACjC;EAGA,MAAME,UAAUA,CAACF,KAAkB,EAAEG,IAAa,EAAwB;IACxE,MAAM,IAAI,CAACL,OAAO,CAAC,CAAC;IACpB,OAAO,IAAI,CAACM,cAAc,CAACJ,KAAK,EAAEG,IAAI,CAAC;EACzC;EAGAF,YAAYA,CAACD,KAAkB,EAAe;IAC5C,MAAM,IAAIK,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACC,IAAI,qCAAkC,CAAC;EACjE;EAGAH,cAAcA,CAACJ,KAAkB,EAAEG,IAAa,EAAe;IAC7D,MAAM,IAAIE,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACC,IAAI,uCAAoC,CAAC;EACnE;EAGA,OAAOZ,eAAeA,CACpBa,aAAiE,EACrC;IAE5B,MAAMR,KAAK,GAAG,MAAM,IAAI,CAACS,WAAW,CAACD,aAAa,CAAC;IACnD,MAAM,IAAI,CAACT,QAAQ,CAACC,KAAK,CAAC;EAC5B;EAGA,OAAOH,iBAAiBA,CACtBW,aAAiE,EACrC;IAE5B,MAAMR,KAAK,GAAG,MAAM,IAAI,CAACS,WAAW,CAACD,aAAa,CAAC;IACnD,MAAM,IAAI,CAACN,UAAU,CAACF,KAAK,CAAC;EAC9B;EAIUS,WAAWA,CAACD,aAAa,EAAwB;IACzD,OAAOlB,4BAA4B,CAACkB,aAAa,CAAC;EACpD;EAEUE,YAAYA,CAACC,KAAK,EAAE;IAC5B,IAAI,CAACA,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACN,IAAI,CAAC,EAAE;MACtCI,KAAK,CAACC,OAAO,MAAAN,MAAA,CAAM,IAAI,CAACC,IAAI,OAAAD,MAAA,CAAIK,KAAK,CAACC,OAAO,CAAE;IACjD;IACA,OAAOD,KAAK;EACd;AACF"}