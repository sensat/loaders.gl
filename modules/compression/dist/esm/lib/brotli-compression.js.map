{"version":3,"file":"brotli-compression.js","names":["Compression","isBrowser","toArrayBuffer","BrotliDecode","zlib","promisify1","DEFAULT_BROTLI_OPTIONS","brotli","mode","quality","lgwin","BrotliCompression","constructor","options","_defineProperty","preload","_this$options","_this$options$modules","modules","console","warn","concat","name","compress","input","_this$options$brotli","useZlib","buffer","brotliCompress","compressSync","_this$options$brotli2","_this$options2","brotliCompressSync","brotliOptions","inputArray","Uint8Array","Error","outputArray","decompress","_this$options$brotli3","brotliDecompress","decompressSync","_this$options$brotli4","_this$options3","brotliDecompressSync","undefined"],"sources":["../../../src/lib/brotli-compression.ts"],"sourcesContent":["// BROTLI\nimport type {CompressionOptions} from './compression';\nimport {Compression} from './compression';\nimport {isBrowser, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport type brotliNamespace from 'brotli';\n// import brotli from 'brotli';  // https://bundlephobia.com/package/brotli\nimport {BrotliDecode} from '../brotli/decode';\nimport zlib from 'zlib';\nimport {promisify1} from '@loaders.gl/loader-utils';\n\nexport type BrotliCompressionOptions = CompressionOptions & {\n  brotli?: {\n    mode?: number;\n    quality?: number;\n    lgwin?: number;\n    useZlib?: boolean;\n  };\n};\n\nconst DEFAULT_BROTLI_OPTIONS = {\n  brotli: {\n    mode: 0,\n    quality: 8,\n    lgwin: 22\n  }\n};\n\nlet brotli: typeof brotliNamespace;\n\n/**\n * brotli compression / decompression\n */\nexport class BrotliCompression extends Compression {\n  readonly name: string = 'brotli';\n  readonly extensions = ['br'];\n  readonly contentEncodings = ['br'];\n  readonly isSupported = true;\n  readonly options: BrotliCompressionOptions;\n\n  constructor(options: BrotliCompressionOptions) {\n    super(options);\n    this.options = options;\n  }\n\n  /**\n   * brotli is an injectable dependency due to big size\n   * @param options\n   */\n  async preload(): Promise<void> {\n    brotli = brotli || this.options?.modules?.brotli;\n    if (!brotli) {\n      // eslint-disable-next-line no-console\n      console.warn(`${this.name} library not installed`);\n    }\n  }\n\n  async compress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = await promisify1(zlib.brotliCompress)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.compressSync(input);\n  }\n\n  compressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = zlib.brotliCompressSync(input);\n      return toArrayBuffer(buffer);\n    }\n    const brotliOptions = {...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli};\n    const inputArray = new Uint8Array(input);\n\n    if (!brotli) {\n      throw new Error('brotli compression: brotli module not installed');\n    }\n\n    // @ts-ignore brotli types state that only Buffers are accepted...\n    const outputArray = brotli.compress(inputArray, brotliOptions);\n    return outputArray.buffer;\n  }\n\n  async decompress(input: ArrayBuffer): Promise<ArrayBuffer> {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = await promisify1(zlib.brotliDecompress)(input);\n      return toArrayBuffer(buffer);\n    }\n    return this.decompressSync(input);\n  }\n\n  decompressSync(input: ArrayBuffer): ArrayBuffer {\n    // On Node.js we can use built-in zlib\n    if (!isBrowser && this.options.brotli?.useZlib) {\n      const buffer = zlib.brotliDecompressSync(input);\n      return toArrayBuffer(buffer);\n    }\n\n    const brotliOptions = {...DEFAULT_BROTLI_OPTIONS.brotli, ...this.options?.brotli};\n    const inputArray = new Uint8Array(input);\n\n    if (brotli) {\n      // @ts-ignore brotli types state that only Buffers are accepted...\n      const outputArray = brotli.decompress(inputArray, brotliOptions);\n      return outputArray.buffer;\n    }\n    const outputArray = BrotliDecode(inputArray, undefined);\n    return outputArray.buffer;\n  }\n}\n"],"mappings":"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"}