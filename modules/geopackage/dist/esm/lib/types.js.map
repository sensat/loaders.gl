{"version":3,"file":"types.js","names":[],"sources":["../../../src/lib/types.ts"],"sourcesContent":["/* eslint-disable camelcase */\nexport interface GeometryBitFlags {\n  littleEndian: boolean;\n  envelopeLength: number;\n  emptyGeometry: boolean;\n  extendedGeometryType: boolean;\n}\n\nexport type ProjectionMapping = {[srsId: number]: string};\nexport type DataColumnsMapping = {[columnName: string]: string | null};\nexport type SQLiteTypes =\n  | 'BOOLEAN'\n  | 'TINYINT'\n  | 'SMALLINT'\n  | 'MEDIUMINT'\n  | 'INT'\n  | 'INTEGER'\n  | 'FLOAT'\n  | 'DOUBLE'\n  | 'REAL'\n  | 'TEXT'\n  | 'BLOB'\n  | 'DATE'\n  | 'DATETIME';\n\n/** Type names for geopackage geometries\n *\n * As defined in https://www.geopackage.org/spec130/index.html#table_column_data_types, geometries\n * can be stored with any geometry name listed here:\n * https://www.geopackage.org/spec130/index.html#geometry_types\n */\nexport type GeoPackageGeometryTypes =\n  | 'GEOMETRY'\n  | 'POINT'\n  | 'LINESTRING'\n  | 'POLYGON'\n  | 'MULTIPOINT'\n  | 'MULTILINESTRING'\n  | 'MULTIPOLYGON'\n  | 'GEOMETRYCOLLECTION';\n\n/**\n * https://www.geopackage.org/spec121/#spatial_ref_sys\n */\nexport interface SpatialRefSysRow {\n  /**\n   * Human readable name of this SRS\n   */\n  srs_name: string;\n\n  /**\n   * Unique identifier for each Spatial Reference System within a GeoPackage\n   */\n  srs_id: number;\n\n  /**\n   * Case-insensitive name of the defining organization e.g. EPSG or epsg\n   */\n  organization: string;\n\n  /**\n   * Numeric ID of the Spatial Reference System assigned by the organization\n   */\n  organization_coordsys_id: number;\n\n  /**\n   * Well-known Text [A32] Representation of the Spatial Reference System\n   */\n  definition: string;\n\n  /**\n   * Human readable description of this SRS\n   */\n  description?: string;\n}\n\n/**\n * https://www.geopackage.org/spec121/#_contents\n */\nexport interface ContentsRow {\n  /**\n   * The name of the actual content (e.g., tiles, features, or attributes) table\n   */\n  table_name: string;\n\n  /**\n   * Type of data stored in the table\n   */\n  data_type: 'features' | 'attributes' | 'tiles';\n\n  /**\n   * A human-readable identifier (e.g. short name) for the table_name content\n   */\n  identifier?: string;\n\n  /**\n   * A human-readable description for the table_name content\n   */\n  description?: string;\n\n  /**\n   * timestamp of last change to content, in ISO 8601 format\n   */\n  last_change: string;\n\n  /**\n   * Bounding box minimum easting or longitude for all content in table_name. If tiles, this is informational and the tile matrix set should be used for calculating tile coordinates.\n   */\n  min_x?: number;\n\n  /**\n   * Bounding box minimum northing or latitude for all content in table_name. If tiles, this is informational and the tile matrix set should be used for calculating tile coordinates.\n   */\n  min_y?: number;\n  /**\n   * Bounding box maximum easting or longitude for all content in table_name. If tiles, this is informational and the tile matrix set should be used for calculating tile coordinates.\n   */\n  max_x?: number;\n\n  /**\n   * Bounding box maximum northing or latitude for all content in table_name. If tiles, this is informational and the tile matrix set should be used for calculating tile coordinates.\n   */\n  max_y?: number;\n\n  /**\n   * Spatial Reference System ID: gpkg_spatial_ref_sys.srs_id; when data_type is features, SHALL also match gpkg_geometry_columns.srs_id; When data_type is tiles, SHALL also match gpkg_tile_matrix_set.srs_id\n   */\n  srs_id?: number;\n}\n\n// https://www.geopackage.org/spec121/#geometry_types_extension\ntype GeometryType =\n  | 'GEOMETRY'\n  | 'POINT'\n  | 'LINESTRING'\n  | 'POLYGON'\n  | 'MULTIPOINT'\n  | 'MULTILINESTRING'\n  | 'MULTIPOLYGON'\n  | 'GEOMETRYCOLLECTION'\n  | 'CIRCULARSTRING'\n  | 'COMPOUNDCURVE'\n  | 'CURVEPOLYGON'\n  | 'MULTICURVE'\n  | 'MULTISURFACE'\n  | 'CURVE'\n  | 'SURFACE';\n\n/**\n * https://www.geopackage.org/spec121/#_geometry_columns\n */\nexport interface GeometryColumnsRow {\n  /**\n   * Name of the table containing the geometry column\n   */\n  table_name: string;\n\n  /**\n   * Name of a column in the feature table that is a Geometry Column\n   */\n  column_name: string;\n\n  /**\n   * Name from Geometry Type Codes (Core) or Geometry Type Codes (Extension) in Geometry Types (Normative)\n   */\n  geometry_type_name: GeometryType;\n\n  /**\n   * Spatial Reference System ID: gpkg_spatial_ref_sys.srs_id\n   */\n  srs_id: number;\n\n  /**\n   * 0: z values prohibited; 1: z values mandatory; 2: z values optional\n   */\n  z: 0 | 1 | 2;\n\n  /**\n   * 0: m values prohibited; 1: m values mandatory; 2: m values optional\n   */\n  m: 0 | 1 | 2;\n}\n\n/**\n * https://www.geopackage.org/spec121/#extensions_table_definition\n */\nexport interface ExtensionsRow {\n  /**\n   * Name of the table that requires the extension. When NULL, the extension is required for the entire GeoPackage. SHALL NOT be NULL when the column_name is not NULL.\n   */\n  table_name?: string;\n\n  /**\n   * Name of the column that requires the extension. When NULL, the extension is required for the entire table.\n   */\n  column_name?: string;\n\n  /**\n   * The case sensitive name of the extension that is required, in the form <author>_<extension_name>.\n   */\n  extension_name: string;\n\n  /**\n   * Permalink, URI, or reference to a document that defines the extension\n   */\n  definition: string;\n\n  /**\n   * Indicates scope of extension effects on readers / writers: 'read-write' or 'write-only' in lowercase.\n   */\n  scope: string;\n}\n\n/**\n * https://www.geopackage.org/spec121/#gpkg_data_columns_cols\n */\nexport interface DataColumnsRow {\n  /**\n   * Name of the tiles or feature table\n   */\n  table_name: string;\n\n  /**\n   * Name of the table column\n   */\n  column_name: string;\n\n  /**\n   * A human-readable identifier (e.g. short name) for the column_name content\n   */\n  name?: string;\n\n  /**\n   * A human-readable formal title for the column_name content\n   */\n  title?: string;\n\n  /**\n   * A human-readable description for the column_name content\n   */\n  description?: string;\n\n  /**\n   * MIME [A21] type of column_name if BLOB type, or NULL for other types\n   */\n  mime_type?: string;\n\n  /**\n   * Column value constraint name (lowercase) specified by reference to gpkg_data_column_constraints.constraint name\n   */\n  constraint_name?: string;\n}\n\n/**\n * Type for PRAGMA table_info(tableName);\n */\nexport interface PragmaTableInfoRow {\n  cid: number;\n  name: string;\n  type: SQLiteTypes;\n  notnull: 0 | 1;\n  dflt_value: any;\n  pk: 0 | 1;\n}\n"],"mappings":""}