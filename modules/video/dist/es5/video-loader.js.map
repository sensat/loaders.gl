{"version":3,"file":"video-loader.js","names":["_parseVideo","_interopRequireDefault","require","VERSION","EXTENSIONS","MIME_TYPES","DEFAULT_LOADER_OPTIONS","video","VideoLoader","name","id","module","version","extensions","mimeTypes","parse","parseVideo","options","exports","_typecheckVideoLoader"],"sources":["../../src/video-loader.ts"],"sourcesContent":["import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport parseVideo from './lib/parsers/parse-video';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nconst EXTENSIONS = ['mp4'];\nconst MIME_TYPES = ['video/mp4'];\n\n// Loads a platform-specific image type that can be used as input data to WebGL textures\n\nexport type VideoLoaderOptions = LoaderOptions & {\n  video: {};\n};\n\nconst DEFAULT_LOADER_OPTIONS: VideoLoaderOptions = {\n  video: {}\n};\n\nexport const VideoLoader = {\n  name: 'Video',\n  id: 'video',\n  module: 'video',\n  version: VERSION,\n  extensions: EXTENSIONS,\n  mimeTypes: MIME_TYPES,\n\n  parse: parseVideo,\n\n  // tests: arrayBuffer => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer))),\n  options: DEFAULT_LOADER_OPTIONS\n};\n\nexport const _typecheckVideoLoader: LoaderWithParser = VideoLoader;\n"],"mappings":";;;;;;;AACA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAIA,IAAMC,OAAO,GAAG,sBAAkB,KAAK,WAAW,qBAAiB,QAAQ;AAE3E,IAAMC,UAAU,GAAG,CAAC,KAAK,CAAC;AAC1B,IAAMC,UAAU,GAAG,CAAC,WAAW,CAAC;AAQhC,IAAMC,sBAA0C,GAAG;EACjDC,KAAK,EAAE,CAAC;AACV,CAAC;AAEM,IAAMC,WAAW,GAAG;EACzBC,IAAI,EAAE,OAAO;EACbC,EAAE,EAAE,OAAO;EACXC,MAAM,EAAE,OAAO;EACfC,OAAO,EAAET,OAAO;EAChBU,UAAU,EAAET,UAAU;EACtBU,SAAS,EAAET,UAAU;EAErBU,KAAK,EAAEC,mBAAU;EAGjBC,OAAO,EAAEX;AACX,CAAC;AAACY,OAAA,CAAAV,WAAA,GAAAA,WAAA;AAEK,IAAMW,qBAAuC,GAAGX,WAAW;AAACU,OAAA,CAAAC,qBAAA,GAAAA,qBAAA"}