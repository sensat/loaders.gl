{"version":3,"file":"ktx2-basis-writer-worker-node.js","names":["require","_workerUtils","_ktx2BasisWriter","WorkerBody","inWorkerThread","onmessage","_ref","_asyncToGenerator2","default","_regenerator","mark","_callee","type","payload","_KTX2BasisWriter$enco","input","options","result","message","wrap","_callee$","_context","prev","next","t0","KTX2BasisWriter","encode","call","sent","postMessage","t1","Error","error","abrupt","stop","_x","_x2","apply","arguments"],"sources":["../../../src/workers/ktx2-basis-writer-worker-node.ts"],"sourcesContent":["// Polyfills increases the bundle size significantly. Use it for NodeJS worker only\nimport '@loaders.gl/polyfills';\nimport {WorkerBody, WorkerMessagePayload} from '@loaders.gl/worker-utils';\nimport {KTX2BasisWriter} from '../ktx2-basis-writer';\n\n(() => {\n  // Check that we are actually in a worker thread\n  if (!WorkerBody.inWorkerThread()) {\n    return;\n  }\n\n  WorkerBody.onmessage = async (type, payload: WorkerMessagePayload) => {\n    switch (type) {\n      case 'process':\n        try {\n          const {input, options} = payload;\n          const result = await KTX2BasisWriter.encode?.(input, options);\n          WorkerBody.postMessage('done', {result});\n        } catch (error) {\n          const message = error instanceof Error ? error.message : '';\n          WorkerBody.postMessage('error', {error: message});\n        }\n        break;\n      default:\n    }\n  };\n})();\n"],"mappings":";;;;;AACAA,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AAEA,CAAC,YAAM;EAEL,IAAI,CAACG,uBAAU,CAACC,cAAc,CAAC,CAAC,EAAE;IAChC;EACF;EAEAD,uBAAU,CAACE,SAAS;IAAA,IAAAC,IAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAAC,YAAA,CAAAD,OAAA,CAAAE,IAAA,CAAG,SAAAC,QAAOC,IAAI,EAAEC,OAA6B;MAAA,IAAAC,qBAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,OAAA;MAAA,OAAAT,YAAA,CAAAD,OAAA,CAAAW,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAG,EAAA,GACvDZ,IAAI;YAAAS,QAAA,CAAAE,IAAA,GAAAF,QAAA,CAAAG,EAAA,KACL,SAAS;YAAA;UAAA;YAAAH,QAAA,CAAAC,IAAA;YAEHP,KAAK,GAAaF,OAAO,CAAzBE,KAAK,EAAEC,OAAO,GAAIH,OAAO,CAAlBG,OAAO;YAAAK,QAAA,CAAAE,IAAA;YAAA,QAAAT,qBAAA,GACAW,gCAAe,CAACC,MAAM,cAAAZ,qBAAA,uBAAtBA,qBAAA,CAAAa,IAAA,CAAAF,gCAAe,EAAUV,KAAK,EAAEC,OAAO,CAAC;UAAA;YAAvDC,MAAM,GAAAI,QAAA,CAAAO,IAAA;YACZzB,uBAAU,CAAC0B,WAAW,CAAC,MAAM,EAAE;cAACZ,MAAM,EAANA;YAAM,CAAC,CAAC;YAACI,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;YAEnCH,OAAO,GAAGG,QAAA,CAAAS,EAAA,YAAiBC,KAAK,GAAGV,QAAA,CAAAS,EAAA,CAAMZ,OAAO,GAAG,EAAE;YAC3Df,uBAAU,CAAC0B,WAAW,CAAC,OAAO,EAAE;cAACG,KAAK,EAAEd;YAAO,CAAC,CAAC;UAAC;YAAA,OAAAG,QAAA,CAAAY,MAAA;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA,GAAAvB,OAAA;IAAA,CAKzD;IAAA,iBAAAwB,EAAA,EAAAC,GAAA;MAAA,OAAA9B,IAAA,CAAA+B,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH,CAAC,EAAE,CAAC"}