{"version":3,"file":"tile-3d.js","names":["_core","require","_culling","_core2","_constants","_boundingVolume","_tiles3dLod","_i3sLod","_dTilesOptions","_tilesetTraverser","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","scratchVector","Vector3","defined","x","undefined","Tile3D","tileset","header","parentHeader","extendedId","_classCallCheck2","TILE_CONTENT_STATE","UNLOADED","Matrix4","TilesetTraverser","id","url","parent","refine","_getRefine","type","contentUrl","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","seal","_createClass2","value","destroy","isDestroyed","get","_selectedFrame","_frameNumber","_visible","_inRequestVolume","hasEmptyContent","hasTilesetContent","children","contentState","READY","Boolean","contentReady","hasRenderContent","_expiredContent","contentFailed","contentUnloaded","EXPIRED","FAILED","_distanceToCamera","_screenSpaceError","_boundingBox","getCartographicBounds","boundingVolume","getScreenSpaceError","frameState","useParentLodMetric","TILESET_TYPE","I3S","getProjectedRadius","TILES3D","getTiles3DScreenSpaceError","Error","unselect","_getGpuMemoryUsageInBytes","content","gpuMemoryUsageInBytes","byteLength","_getLoadPriority","traverser","_traverser","skipLevelOfDetail","options","maySkipTile","TILE_REFINEMENT","ADD","isVisible","_touchedFrame","_getScreenPriority","useParentScreenSpaceError","screenSpaceError","rootScreenSpaceError","root","_distanceToScreenCenter","Math","max","_loadContent","_asyncToGenerator2","_regenerator","mark","_callee","expired","requestToken","loader","wrap","_callee$","_context","prev","next","abrupt","contentExpired","_expireDate","LOADING","_requestScheduler","scheduleRequest","bind","sent","getTileUrl","loadOptions","isTileset","_getLoaderSpecificOptions","load","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","t0","done","finish","stop","loadContent","unloadContent","updateVisibility","viewportIds","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","CullingVolume","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","distanceToScreenCenter","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","center","_frameState$viewport$","viewport","project","_frameState$viewport$2","_slicedToArray2","screenX","screenY","cameraSpaceZDepth","_ref","subVectors","direction","dot","viewerRequestVolume","_viewerRequestVolume","updateExpiration","now","Date","lessThan","extras","lodMetricType","console","warn","lodMetricValue","tileHeader","transform","clone","multiplyRight","parentInitialTransform","_initialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","depth","level","_shouldRefine","_centerZDepth","_stackLength","_selectionDepth","_visitedFrame","_requestedFrame","_loadPriority","_screenPriority","REPLACE","indexOf","disableSkipLevelOfDetail","createBoundingVolume","didTransformChange","equals","loaderId","i3s","_tileOptions","attributeUrls","textureUrl","textureFormat","textureLoaderOptions","materialDefinition","isDracoGeometry","mbs","_tilesetOptions","store","attributeStorageInfo","fields","isTileHeader","get3dTilesOptions","exports"],"sources":["../../../src/tileset/tile-3d.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport type {DoublyLinkedListNode} from '../utils/doubly-linked-list-node';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {\n  createBoundingVolume,\n  getCartographicBounds,\n  CartographicBounds\n} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  /* Specifies the type of refine that is used when traversing this tile for rendering. */\n  refine: number;\n  type: string;\n  contentUrl: string;\n  /** Different refinement algorithms used by I3S and 3D tiles */\n  lodMetricType: 'geometricError' | 'maxScreenThreshold' = 'geometricError';\n  /** The error, in meters, introduced if this tile is rendered and its children are not. */\n  lodMetricValue: number = 0;\n\n  /** @todo math.gl is not exporting BoundingVolume base type? */\n  boundingVolume: any = null;\n\n  /**\n   * The tile's content.  This represents the actual tile's payload,\n   * not the content's metadata in the tileset JSON file.\n   */\n  content: any = null;\n  contentState: number = TILE_CONTENT_STATE.UNLOADED;\n  gpuMemoryUsageInBytes: number = 0;\n\n  /** The tile's children - an array of Tile3D objects. */\n  children: Tile3D[] = [];\n  depth: number = 0;\n  viewportIds: any[] = [];\n  transform = new Matrix4();\n  extensions: any = null;\n  /** TODO Cesium 3d tiles specific */\n  implicitTiling?: any = null;\n\n  /** Container to store application specific data */\n  userData: Record<string, any> = {};\n\n  computedTransform: any;\n  hasEmptyContent: boolean = false;\n  hasTilesetContent: boolean = false;\n\n  traverser = new TilesetTraverser({});\n\n  /** Used by TilesetCache */\n  _cacheNode: DoublyLinkedListNode | null = null;\n\n  private _frameNumber: any = null;\n\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any = null;\n  private _expiredContent: any = null;\n\n  private _boundingBox?: CartographicBounds;\n\n  /** updated every frame for tree traversal and rendering optimizations: */\n  public _distanceToCamera: number = 0;\n  public _distanceToScreenCenter: number = 0;\n  _screenSpaceError: number = 0;\n  private _visibilityPlaneMask: any;\n  private _visible: boolean | undefined = undefined;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4 = new Matrix4();\n\n  // Used by traverser, cannot be marked private\n  _loadPriority: number = 0;\n  _screenPriority: number = 0;\n  _selectedFrame: number = 0;\n  _requestedFrame: number = 0;\n  _selectionDepth: number = 0;\n  _touchedFrame: number = 0;\n  _centerZDepth: number = 0;\n  _shouldRefine: boolean = false;\n  _stackLength: number = 0;\n  _visitedFrame: number = 0;\n  _inRequestVolume: boolean = false;\n  _lodJudge: any = null; // TODO i3s specific, needs to remove\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /**\n   * Get bounding box in cartographic coordinates\n   * @returns [min, max] each in [longitude, latitude, altitude]\n   */\n  get boundingBox(): CartographicBounds {\n    if (!this._boundingBox) {\n      this._boundingBox = getCartographicBounds(this.header.boundingVolume, this.boundingVolume);\n    }\n    return this._boundingBox;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /**\n   * Memory usage of tile on GPU\n   */\n  _getGpuMemoryUsageInBytes(): number {\n    return this.content.gpuMemoryUsageInBytes || this.content.byteLength || 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getLoadPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return this._getScreenPriority();\n  }\n\n  // eslint-disable-next-line complexity\n  _getScreenPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return this._distanceToScreenCenter / Math.max(rootScreenSpaceError - screenSpaceError, 1e-7);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getLoadPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          // @ts-expect-error\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._distanceToScreenCenter = this.distanceToScreenCenter(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's distance from screen center\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  distanceToScreenCenter(frameState: FrameState): number {\n    const center = this.boundingVolume.center;\n    const [screenX, screenY] = frameState.viewport.project(center);\n    return Math.sqrt(screenX * screenX + screenY * screenY);\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._loadPriority = 0.0;\n    this._screenPriority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    } else {\n      this.gpuMemoryUsageInBytes = this._getGpuMemoryUsageInBytes();\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"mappings":"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"}