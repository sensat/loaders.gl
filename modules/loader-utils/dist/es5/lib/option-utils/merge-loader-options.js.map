{"version":3,"file":"merge-loader-options.js","names":["mergeLoaderOptions","baseOptions","newOptions","mergeOptionsRecursively","options","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray2","default","key","newValue","_typeof2"],"sources":["../../../../src/lib/option-utils/merge-loader-options.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {LoaderOptions} from '../../types';\n\n/**\n *\n * @param baseOptions Can be undefined, in which case a fresh options object will be minted\n * @param newOptions\n * @returns\n */\nexport function mergeLoaderOptions<Options extends LoaderOptions>(\n  baseOptions: Options | undefined,\n  newOptions: Options\n): Options {\n  return mergeOptionsRecursively(baseOptions || {}, newOptions) as Options;\n}\n\nfunction mergeOptionsRecursively(\n  baseOptions: Record<string, unknown>,\n  newOptions: Record<string, unknown>\n): Record<string, unknown> {\n  const options = {...baseOptions};\n  for (const [key, newValue] of Object.entries(newOptions)) {\n    if (newValue && typeof newValue === 'object') {\n      options[key] = mergeOptionsRecursively(\n        (options[key] as Record<string, unknown>) || {},\n        newOptions[key] as Record<string, unknown>\n      );\n      // Object.assign(options[key] as object, newOptions[key]);\n    } else {\n      options[key] = newOptions[key];\n    }\n  }\n  return options as Record<string, unknown>;\n}\n"],"mappings":";;;;;;;;;;;;AAUO,SAASA,kBAAkBA,CAChCC,WAAgC,EAChCC,UAAmB,EACV;EACT,OAAOC,uBAAuB,CAACF,WAAW,IAAI,CAAC,CAAC,EAAEC,UAAU,CAAC;AAC/D;AAEA,SAASC,uBAAuBA,CAC9BF,WAAoC,EACpCC,UAAmC,EACV;EACzB,IAAME,OAAO,GAAAC,aAAA,KAAOJ,WAAW,CAAC;EAChC,SAAAK,EAAA,MAAAC,eAAA,GAA8BC,MAAM,CAACC,OAAO,CAACP,UAAU,CAAC,EAAAI,EAAA,GAAAC,eAAA,CAAAG,MAAA,EAAAJ,EAAA,IAAE;IAArD,IAAAK,kBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAN,eAAA,CAAAD,EAAA;MAAOQ,GAAG,GAAAH,kBAAA;MAAEI,QAAQ,GAAAJ,kBAAA;IACvB,IAAII,QAAQ,IAAI,IAAAC,QAAA,CAAAH,OAAA,EAAOE,QAAQ,MAAK,QAAQ,EAAE;MAC5CX,OAAO,CAACU,GAAG,CAAC,GAAGX,uBAAuB,CACnCC,OAAO,CAACU,GAAG,CAAC,IAAgC,CAAC,CAAC,EAC/CZ,UAAU,CAACY,GAAG,CAChB,CAAC;IAEH,CAAC,MAAM;MACLV,OAAO,CAACU,GAAG,CAAC,GAAGZ,UAAU,CAACY,GAAG,CAAC;IAChC;EACF;EACA,OAAOV,OAAO;AAChB"}