{"version":3,"file":"parse-obj.js","names":["_schema","require","_parseObjMeshes","_getObjSchema","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","parseOBJ","text","options","_parseOBJMeshes","parseOBJMeshes","meshes","vertexCount","reduce","mesh","header","attributes","mergeAttributes","boundingBox","getMeshBoundingBox","schema","getOBJSchema","mode","loaderData","topology","positions","Float32Array","normals","colors","uvs","_iterator","_step","_mesh$attributes","POSITION","NORMAL","COLOR_0","TEXCOORD_0","set","size"],"sources":["../../../src/lib/parse-obj.ts"],"sourcesContent":["import type {Mesh, MeshAttributes} from '@loaders.gl/schema';\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\nimport {parseOBJMeshes} from './parse-obj-meshes';\nimport {getOBJSchema} from './get-obj-schema';\n\nexport function parseOBJ(text, options): Mesh {\n  const {meshes} = parseOBJMeshes(text);\n\n  // @ts-expect-error\n  const vertexCount = meshes.reduce((s, mesh) => s + mesh.header.vertexCount, 0);\n  // TODO - render objects separately\n  const attributes = mergeAttributes(meshes, vertexCount);\n\n  const header = {\n    vertexCount,\n    // @ts-ignore Need to export Attributes type\n    boundingBox: getMeshBoundingBox(attributes)\n  };\n\n  const schema = getOBJSchema(attributes, {\n    mode: 4,\n    boundingBox: header.boundingBox\n  });\n\n  return {\n    // Data return by this loader implementation\n    loaderData: {\n      header: {}\n    },\n\n    // Normalised data\n    schema,\n    header,\n    mode: 4, // TRIANGLES\n    topology: 'point-list',\n\n    attributes\n  };\n}\n\n// eslint-disable-next-line max-statements\nfunction mergeAttributes(meshes, vertexCount): MeshAttributes {\n  const positions = new Float32Array(vertexCount * 3);\n  let normals;\n  let colors;\n  let uvs;\n  let i = 0;\n\n  for (const mesh of meshes) {\n    const {POSITION, NORMAL, COLOR_0, TEXCOORD_0} = mesh.attributes;\n\n    positions.set(POSITION.value, i * 3);\n\n    if (NORMAL) {\n      normals = normals || new Float32Array(vertexCount * 3);\n      normals.set(NORMAL.value, i * 3);\n    }\n    if (COLOR_0) {\n      colors = colors || new Float32Array(vertexCount * 3);\n      colors.set(COLOR_0.value, i * 3);\n    }\n    if (TEXCOORD_0) {\n      uvs = uvs || new Float32Array(vertexCount * 2);\n      uvs.set(TEXCOORD_0.value, i * 2);\n    }\n\n    i += POSITION.value.length / 3;\n  }\n\n  const attributes: MeshAttributes = {};\n  attributes.POSITION = {value: positions, size: 3};\n\n  if (normals) {\n    attributes.NORMAL = {value: normals, size: 3};\n  }\n  if (colors) {\n    attributes.COLOR_0 = {value: colors, size: 3};\n  }\n  if (uvs) {\n    attributes.TEXCOORD_0 = {value: uvs, size: 2};\n  }\n\n  return attributes;\n}\n"],"mappings":"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"}