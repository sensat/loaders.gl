{"version":3,"file":"parse-slpk.js","names":["_cdFileHeader","require","_localFileHeader","_slpkArchieve","getByteAt","offset","buffer","getUint8","byteOffset","parseSLPK","_x","_parseSLPK","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","data","_options$slpk$path","_options$slpk","_options$slpk2","options","archive","cdFileHeaderSignature","searchWindow","hashCDOffset","i","cdFileHeader","textDecoder","localFileHeader","fileDataOffset","hashFile","_args","wrap","_callee$","_context","prev","next","length","undefined","DataView","byteLength","every","val","index","abrupt","parseZipCDFileHeader","TextDecoder","decode","fileName","Error","parseZipLocalFileHeader","localHeaderOffset","slice","compressedSize","SLPKArchive","getFile","slpk","path","pathMode","sent","stop"],"sources":["../../../../../src/lib/parsers/parse-slpk/parse-slpk.ts"],"sourcesContent":["import type {SLPKLoaderOptions} from '../../../i3s-slpk-loader';\nimport {parseZipCDFileHeader} from '../parse-zip/cd-file-header';\nimport {parseZipLocalFileHeader} from '../parse-zip/local-file-header';\nimport {SLPKArchive} from './slpk-archieve';\n\n/**\n * Returns one byte from the provided buffer at the provided position\n * @param offset - position where to read\n * @param buffer - buffer to read\n * @returns one byte from the provided buffer at the provided position\n */\nconst getByteAt = (offset: number, buffer: DataView): number => {\n  return buffer.getUint8(buffer.byteOffset + offset);\n};\n\nexport async function parseSLPK(data: ArrayBuffer, options: SLPKLoaderOptions = {}) {\n  const archive = new DataView(data);\n  const cdFileHeaderSignature = [80, 75, 1, 2];\n\n  const searchWindow = [\n    getByteAt(archive.byteLength - 1, archive),\n    getByteAt(archive.byteLength - 2, archive),\n    getByteAt(archive.byteLength - 3, archive),\n    undefined\n  ];\n\n  let hashCDOffset = 0;\n\n  // looking for the last record in the central directory\n  for (let i = archive.byteLength - 4; i > -1; i--) {\n    searchWindow[3] = searchWindow[2];\n    searchWindow[2] = searchWindow[1];\n    searchWindow[1] = searchWindow[0];\n    searchWindow[0] = getByteAt(i, archive);\n    if (searchWindow.every((val, index) => val === cdFileHeaderSignature[index])) {\n      hashCDOffset = i;\n      break;\n    }\n  }\n\n  const cdFileHeader = parseZipCDFileHeader(hashCDOffset, archive);\n\n  const textDecoder = new TextDecoder();\n  if (textDecoder.decode(cdFileHeader.fileName) !== '@specialIndexFileHASH128@') {\n    throw new Error('No hash file in slpk');\n  }\n\n  const localFileHeader = parseZipLocalFileHeader(cdFileHeader.localHeaderOffset, archive);\n\n  const fileDataOffset = localFileHeader.fileDataOffset;\n  const hashFile = archive.buffer.slice(\n    fileDataOffset,\n    fileDataOffset + localFileHeader.compressedSize\n  );\n\n  if (!hashFile) {\n    throw new Error('No hash file in slpk');\n  }\n\n  return await new SLPKArchive(data, hashFile).getFile(\n    options.slpk?.path ?? '',\n    options.slpk?.pathMode\n  );\n}\n"],"mappings":"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"}