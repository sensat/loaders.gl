{"version":3,"file":"parse-i3s-building-scene-layer.js","names":["OBJECT_3D_LAYER_TYPE","parseBuildingSceneLayer","_x","_x2","_parseBuildingSceneLayer","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","data","url","layer0","sublayers","wrap","_callee$","_context","prev","next","JSON","parse","TextDecoder","decode","abrupt","header","parseSublayersTree","stop","layers","index","length","_subLayer$sublayers","subLayer","id","layerType","_subLayer$visibility","visibility","rest","_objectWithoutProperties2","_excluded","sublayerUrl","concat","push","_objectSpread","_toConsumableArray2"],"sources":["../../../../src/lib/parsers/parse-i3s-building-scene-layer.ts"],"sourcesContent":["import type {BuildingSceneLayerTileset, BuildingSceneSublayer} from '../../types';\n\nconst OBJECT_3D_LAYER_TYPE = '3DObject';\n\n/**\n * Parses Builiding Scene Layer and creates tileset\n * @param data\n * @param options\n * @param context\n */\nexport async function parseBuildingSceneLayer(\n  data: ArrayBuffer,\n  url: string\n): Promise<BuildingSceneLayerTileset> {\n  const layer0 = JSON.parse(new TextDecoder().decode(data));\n  const {sublayers} = layer0;\n\n  return {\n    header: layer0,\n    sublayers: parseSublayersTree(sublayers, url)\n  };\n}\n\n/**\n * Recursively parses Building Scene Layer sublayers.\n * @param sublayers\n * @param url\n */\nfunction parseSublayersTree(\n  sublayers: BuildingSceneSublayer[],\n  url: string\n): BuildingSceneSublayer[] {\n  let layers: BuildingSceneSublayer[] = [];\n\n  for (let index = 0; index < sublayers.length; index++) {\n    const subLayer = sublayers[index];\n    const {id, layerType, visibility = true, ...rest} = subLayer;\n\n    // Add support only for 3DObject layer type for I3S purposes.\n    if (layerType === OBJECT_3D_LAYER_TYPE) {\n      const sublayerUrl = `${url}/sublayers/${id}`;\n\n      layers.push({\n        url: sublayerUrl,\n        id,\n        layerType,\n        visibility,\n        ...rest\n      });\n    }\n\n    if (subLayer?.sublayers?.length) {\n      layers = [...layers, ...parseSublayersTree(subLayer.sublayers, url)];\n    }\n  }\n\n  return layers;\n}\n"],"mappings":";;;;;;;;;;;;;;;AAEA,IAAMA,oBAAoB,GAAG,UAAU;AAAC,SAQlBC,uBAAuBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,yBAAA;EAAAA,wBAAA,OAAAG,kBAAA,CAAAC,OAAA,EAAAC,YAAA,CAAAD,OAAA,CAAAE,IAAA,CAAtC,SAAAC,QACLC,IAAiB,EACjBC,GAAW;IAAA,IAAAC,MAAA,EAAAC,SAAA;IAAA,OAAAN,YAAA,CAAAD,OAAA,CAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAELN,MAAM,GAAGO,IAAI,CAACC,KAAK,CAAC,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACZ,IAAI,CAAC,CAAC;UAClDG,SAAS,GAAID,MAAM,CAAnBC,SAAS;UAAA,OAAAG,QAAA,CAAAO,MAAA,WAET;YACLC,MAAM,EAAEZ,MAAM;YACdC,SAAS,EAAEY,kBAAkB,CAACZ,SAAS,EAAEF,GAAG;UAC9C,CAAC;QAAA;QAAA;UAAA,OAAAK,QAAA,CAAAU,IAAA;MAAA;IAAA,GAAAjB,OAAA;EAAA,CACF;EAAA,OAAAP,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAOD,SAASqB,kBAAkBA,CACzBZ,SAAkC,EAClCF,GAAW,EACc;EACzB,IAAIgB,MAA+B,GAAG,EAAE;EAExC,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGf,SAAS,CAACgB,MAAM,EAAED,KAAK,EAAE,EAAE;IAAA,IAAAE,mBAAA;IACrD,IAAMC,QAAQ,GAAGlB,SAAS,CAACe,KAAK,CAAC;IACjC,IAAOI,EAAE,GAA2CD,QAAQ,CAArDC,EAAE;MAAEC,SAAS,GAAgCF,QAAQ,CAAjDE,SAAS;MAAAC,oBAAA,GAAgCH,QAAQ,CAAtCI,UAAU;MAAVA,UAAU,GAAAD,oBAAA,cAAG,IAAI,GAAAA,oBAAA;MAAKE,IAAI,OAAAC,yBAAA,CAAA/B,OAAA,EAAIyB,QAAQ,EAAAO,SAAA;IAG5D,IAAIL,SAAS,KAAKnC,oBAAoB,EAAE;MACtC,IAAMyC,WAAW,MAAAC,MAAA,CAAM7B,GAAG,iBAAA6B,MAAA,CAAcR,EAAE,CAAE;MAE5CL,MAAM,CAACc,IAAI,CAAAC,aAAA;QACT/B,GAAG,EAAE4B,WAAW;QAChBP,EAAE,EAAFA,EAAE;QACFC,SAAS,EAATA,SAAS;QACTE,UAAU,EAAVA;MAAU,GACPC,IAAI,CACR,CAAC;IACJ;IAEA,IAAIL,QAAQ,aAARA,QAAQ,gBAAAD,mBAAA,GAARC,QAAQ,CAAElB,SAAS,cAAAiB,mBAAA,eAAnBA,mBAAA,CAAqBD,MAAM,EAAE;MAC/BF,MAAM,MAAAa,MAAA,KAAAG,mBAAA,CAAArC,OAAA,EAAOqB,MAAM,OAAAgB,mBAAA,CAAArC,OAAA,EAAKmB,kBAAkB,CAACM,QAAQ,CAAClB,SAAS,EAAEF,GAAG,CAAC,EAAC;IACtE;EACF;EAEA,OAAOgB,MAAM;AACf"}