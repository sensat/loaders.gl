{"version":3,"file":"parse-arcgis-webscene.js","names":["_core","require","SUPPORTED_WKID","ARCGIS_SCENE_SERVER_LAYER_TYPE","BUILDING_SCENE_LAYER","INTEGRATED_MESH_LAYER","GROUP_LAYER","SUPPORTED_LAYERS_TYPES","NO_AVAILABLE_SUPPORTED_LAYERS_ERROR","NOT_SUPPORTED_CRS_ERROR","parseWebscene","_x","_parseWebscene","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","data","layer0","operationalLayers","_yield$parseOperation","layers","unsupportedLayers","wrap","_callee$","_context","prev","next","JSON","parse","TextDecoder","decode","parseOperationalLayers","sent","length","Error","abrupt","header","stop","_x2","_x3","_parseOperationalLayers","_callee2","layersList","needToCheckCRS","index","_layer$layers","layer","isLayerSupported","_yield$parseOperation2","childLayers","childUnsupportedLayers","_callee2$","_context2","includes","layerType","checkSupportedIndexCRS","push","concat","_toConsumableArray2","_x4","_checkSupportedIndexCRS","_callee3","_layerJson$spatialRef","layerJson","wkid","_callee3$","_context3","load","url","JSONLoader","spatialReference","t0"],"sources":["../../../../src/lib/parsers/parse-arcgis-webscene.ts"],"sourcesContent":["import {JSONLoader, load} from '@loaders.gl/core';\nimport type {ArcGisWebSceneData, OperationalLayer} from '../../types';\n\n/**\n * WKID, or Well-Known ID, of the CRS. Specify either WKID or WKT of the CRS.\n * Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/spatialReference.cmn.md\n */\nconst SUPPORTED_WKID = 4326;\n\nconst ARCGIS_SCENE_SERVER_LAYER_TYPE = 'ArcGISSceneServiceLayer';\nconst BUILDING_SCENE_LAYER = 'BuildingSceneLayer';\nconst INTEGRATED_MESH_LAYER = 'IntegratedMeshLayer';\nconst GROUP_LAYER = 'GroupLayer';\n\n/**\n * Supported layers list\n * Possible operational layers in WebScene: https://developers.arcgis.com/web-scene-specification/objects/operationalLayers/\n */\nconst SUPPORTED_LAYERS_TYPES = [\n  ARCGIS_SCENE_SERVER_LAYER_TYPE,\n  INTEGRATED_MESH_LAYER,\n  BUILDING_SCENE_LAYER,\n  GROUP_LAYER\n];\n\nconst NO_AVAILABLE_SUPPORTED_LAYERS_ERROR = 'NO_AVAILABLE_SUPPORTED_LAYERS_ERROR';\nconst NOT_SUPPORTED_CRS_ERROR = 'NOT_SUPPORTED_CRS_ERROR';\n\n/**\n * Parses ArcGIS WebScene\n * @param data\n */\nexport async function parseWebscene(data: ArrayBuffer): Promise<ArcGisWebSceneData> {\n  const layer0 = JSON.parse(new TextDecoder().decode(data));\n  const {operationalLayers} = layer0;\n  const {layers, unsupportedLayers} = await parseOperationalLayers(operationalLayers, true);\n\n  if (!layers.length) {\n    throw new Error(NO_AVAILABLE_SUPPORTED_LAYERS_ERROR);\n  }\n\n  return {\n    header: layer0,\n    layers,\n    unsupportedLayers\n  };\n}\n\n/**\n * Recursively parses WebScene operational layers.\n * @param layersList\n */\nasync function parseOperationalLayers(\n  layersList: OperationalLayer[],\n  needToCheckCRS: boolean\n): Promise<{layers: OperationalLayer[]; unsupportedLayers: OperationalLayer[]}> {\n  const layers: OperationalLayer[] = [];\n  let unsupportedLayers: OperationalLayer[] = [];\n\n  for (let index = 0; index < layersList.length; index++) {\n    const layer = layersList[index];\n    const isLayerSupported = SUPPORTED_LAYERS_TYPES.includes(layer.layerType);\n\n    if (isLayerSupported) {\n      if (needToCheckCRS && layer.layerType !== GROUP_LAYER) {\n        await checkSupportedIndexCRS(layer);\n        needToCheckCRS = false;\n      }\n\n      layers.push(layer);\n    } else {\n      unsupportedLayers.push(layer);\n    }\n\n    if (layer.layers?.length) {\n      const {layers: childLayers, unsupportedLayers: childUnsupportedLayers} =\n        await parseOperationalLayers(layer.layers, needToCheckCRS);\n      layer.layers = childLayers;\n      unsupportedLayers = [...unsupportedLayers, ...childUnsupportedLayers];\n    }\n  }\n\n  return {layers, unsupportedLayers};\n}\n\n/**\n * Check if layer has supported CRS\n * @param layer\n */\nasync function checkSupportedIndexCRS(layer: OperationalLayer) {\n  try {\n    const layerJson = await load(layer.url, JSONLoader);\n    // @ts-expect-error\n    const wkid = layerJson?.spatialReference?.wkid;\n\n    if (wkid !== SUPPORTED_WKID) {\n      throw new Error(NOT_SUPPORTED_CRS_ERROR);\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n"],"mappings":"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"}