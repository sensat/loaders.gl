{"version":3,"file":"constants.js","names":["_constants","_interopRequireDefault","require","_types","getConstructorForDataFormat","dataType","DATA_TYPE","UInt8","Uint8Array","UInt16","Uint16Array","UInt32","Uint32Array","Float32","Float32Array","UInt64","Float64Array","Error","concat","GL_TYPE_MAP","GL","UNSIGNED_BYTE","UNSIGNED_SHORT","FLOAT","UNSIGNED_INT","DOUBLE","exports","sizeOf","Int16","Int32","Int64","Float64","STRING_ATTRIBUTE_TYPE","OBJECT_ID_ATTRIBUTE_TYPE","FLOAT_64_TYPE","INT_16_ATTRIBUTE_TYPE","COORDINATE_SYSTEM"],"sources":["../../../../src/lib/parsers/constants.ts"],"sourcesContent":["import GL from '@luma.gl/constants';\nimport {DATA_TYPE} from '../../types';\n\nexport function getConstructorForDataFormat(dataType: string) {\n  switch (dataType) {\n    case DATA_TYPE.UInt8:\n      return Uint8Array;\n    case DATA_TYPE.UInt16:\n      return Uint16Array;\n    case DATA_TYPE.UInt32:\n      return Uint32Array;\n    case DATA_TYPE.Float32:\n      return Float32Array;\n    case DATA_TYPE.UInt64:\n      return Float64Array;\n    default:\n      throw new Error(`parse i3s tile content: unknown type of data: ${dataType}`);\n  }\n}\n\nexport const GL_TYPE_MAP: {[key: string]: number} = {\n  UInt8: GL.UNSIGNED_BYTE,\n  UInt16: GL.UNSIGNED_SHORT,\n  Float32: GL.FLOAT,\n  UInt32: GL.UNSIGNED_INT,\n  UInt64: GL.DOUBLE\n};\n/**\n * Returns how many bytes a type occupies\n * @param dataType\n * @returns\n */\nexport function sizeOf(dataType: string): number {\n  switch (dataType) {\n    case DATA_TYPE.UInt8:\n      return 1;\n    case DATA_TYPE.UInt16:\n    case DATA_TYPE.Int16:\n      return 2;\n    case DATA_TYPE.UInt32:\n    case DATA_TYPE.Int32:\n    case DATA_TYPE.Float32:\n      return 4;\n    case DATA_TYPE.UInt64:\n    case DATA_TYPE.Int64:\n    case DATA_TYPE.Float64:\n      return 8;\n    default:\n      throw new Error(`parse i3s tile content: unknown size of data: ${dataType}`);\n  }\n}\n\nexport const STRING_ATTRIBUTE_TYPE = 'String';\nexport const OBJECT_ID_ATTRIBUTE_TYPE = 'Oid32';\nexport const FLOAT_64_TYPE = 'Float64';\nexport const INT_16_ATTRIBUTE_TYPE = 'Int16';\n\n// https://github.com/visgl/deck.gl/blob/9548f43cba2234a1f4877b6b17f6c88eb35b2e08/modules/core/src/lib/constants.js#L27\n// Describes the format of positions\nexport enum COORDINATE_SYSTEM {\n  /**\n   * `LNGLAT` if rendering into a geospatial viewport, `CARTESIAN` otherwise\n   */\n  DEFAULT = -1,\n  /**\n   * Positions are interpreted as [lng, lat, elevation]\n   * lng lat are degrees, elevation is meters. distances as meters.\n   */\n  LNGLAT = 1,\n  /**\n   * Positions are interpreted as meter offsets, distances as meters\n   */\n  METER_OFFSETS = 2,\n  /**\n   * Positions are interpreted as lng lat offsets: [deltaLng, deltaLat, elevation]\n   * deltaLng, deltaLat are delta degrees, elevation is meters.\n   * distances as meters.\n   */\n  LNGLAT_OFFSETS = 3,\n  /**\n   * Non-geospatial\n   */\n  CARTESIAN = 0\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEO,SAASE,2BAA2BA,CAACC,QAAgB,EAAE;EAC5D,QAAQA,QAAQ;IACd,KAAKC,gBAAS,CAACC,KAAK;MAClB,OAAOC,UAAU;IACnB,KAAKF,gBAAS,CAACG,MAAM;MACnB,OAAOC,WAAW;IACpB,KAAKJ,gBAAS,CAACK,MAAM;MACnB,OAAOC,WAAW;IACpB,KAAKN,gBAAS,CAACO,OAAO;MACpB,OAAOC,YAAY;IACrB,KAAKR,gBAAS,CAACS,MAAM;MACnB,OAAOC,YAAY;IACrB;MACE,MAAM,IAAIC,KAAK,kDAAAC,MAAA,CAAkDb,QAAQ,CAAE,CAAC;EAChF;AACF;AAEO,IAAMc,WAAoC,GAAG;EAClDZ,KAAK,EAAEa,kBAAE,CAACC,aAAa;EACvBZ,MAAM,EAAEW,kBAAE,CAACE,cAAc;EACzBT,OAAO,EAAEO,kBAAE,CAACG,KAAK;EACjBZ,MAAM,EAAES,kBAAE,CAACI,YAAY;EACvBT,MAAM,EAAEK,kBAAE,CAACK;AACb,CAAC;AAACC,OAAA,CAAAP,WAAA,GAAAA,WAAA;AAMK,SAASQ,MAAMA,CAACtB,QAAgB,EAAU;EAC/C,QAAQA,QAAQ;IACd,KAAKC,gBAAS,CAACC,KAAK;MAClB,OAAO,CAAC;IACV,KAAKD,gBAAS,CAACG,MAAM;IACrB,KAAKH,gBAAS,CAACsB,KAAK;MAClB,OAAO,CAAC;IACV,KAAKtB,gBAAS,CAACK,MAAM;IACrB,KAAKL,gBAAS,CAACuB,KAAK;IACpB,KAAKvB,gBAAS,CAACO,OAAO;MACpB,OAAO,CAAC;IACV,KAAKP,gBAAS,CAACS,MAAM;IACrB,KAAKT,gBAAS,CAACwB,KAAK;IACpB,KAAKxB,gBAAS,CAACyB,OAAO;MACpB,OAAO,CAAC;IACV;MACE,MAAM,IAAId,KAAK,kDAAAC,MAAA,CAAkDb,QAAQ,CAAE,CAAC;EAChF;AACF;AAEO,IAAM2B,qBAAqB,GAAG,QAAQ;AAACN,OAAA,CAAAM,qBAAA,GAAAA,qBAAA;AACvC,IAAMC,wBAAwB,GAAG,OAAO;AAACP,OAAA,CAAAO,wBAAA,GAAAA,wBAAA;AACzC,IAAMC,aAAa,GAAG,SAAS;AAACR,OAAA,CAAAQ,aAAA,GAAAA,aAAA;AAChC,IAAMC,qBAAqB,GAAG,OAAO;AAACT,OAAA,CAAAS,qBAAA,GAAAA,qBAAA;AAAA,IAIjCC,iBAAiB,aAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAjBA,iBAAiB,CAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;AAAAV,OAAA,CAAAU,iBAAA,GAAAA,iBAAA"}