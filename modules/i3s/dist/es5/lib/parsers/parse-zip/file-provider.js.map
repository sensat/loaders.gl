{"version":3,"file":"file-provider.js","names":[],"sources":["../../../../../src/lib/parsers/parse-zip/file-provider.ts"],"sourcesContent":["/**\n * Interface for providing file data\n */\nexport interface FileProvider {\n  /**\n   * Gets an unsigned 8-bit integer at the specified byte offset from the start of the file.\n   * @param offset The offset, in bytes, from the start of the file where to read the data.\n   */\n  getUint8(offset: number): Promise<number>;\n\n  /**\n   * Gets an unsigned 16-bit integer at the specified byte offset from the start of the file.\n   * @param offset The offset, in bytes, from the start of the file where to read the data.\n   */\n  getUint16(offset: number): Promise<number>;\n\n  /**\n   * Gets an unsigned 32-bit integer at the specified byte offset from the start of the file.\n   * @param offset The offset, in bytes, from the file of the view where to read the data.\n   */\n  getUint32(offset: number): Promise<number>;\n\n  /**\n   * returns an ArrayBuffer whose contents are a copy of this file bytes from startOffset, inclusive, up to endOffset, exclusive.\n   * @param startOffset The offset, in bytes, from the start of the file where to start reading the data.\n   * @param endOffset The offset, in bytes, from the start of the file where to end reading the data.\n   */\n  slice(startOffset: number, endOffset: number): Promise<ArrayBuffer>;\n\n  /**\n   * the length (in bytes) of the data.\n   */\n  length: number;\n}\n"],"mappings":""}