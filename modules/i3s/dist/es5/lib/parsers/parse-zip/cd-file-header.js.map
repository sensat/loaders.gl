{"version":3,"file":"cd-file-header.js","names":["parseZipCDFileHeader","headerOffset","buffer","offsets","CD_COMPRESSED_SIZE_OFFSET","CD_UNCOMPRESSED_SIZE_OFFSET","CD_FILE_NAME_LENGTH_OFFSET","CD_EXTRA_FIELD_LENGTH_OFFSET","CD_LOCAL_HEADER_OFFSET_OFFSET","CD_FILE_NAME_OFFSET","compressedSize","getUint32","uncompressedSize","fileNameLength","getUint16","fileName","slice","extraOffset","oldFormatOffset","fileDataOffset","offsetInZip64Data","localHeaderOffset","exports"],"sources":["../../../../../src/lib/parsers/parse-zip/cd-file-header.ts"],"sourcesContent":["/**\n * zip central directory file header info\n * according to https://en.wikipedia.org/wiki/ZIP_(file_format)\n */\nexport type ZipCDFileHeader = {\n  /**\n   * Compressed size\n   */\n  compressedSize: number;\n  /**\n   * Uncompressed size\n   */\n  uncompressedSize: number;\n  /**\n   * File name length\n   */\n  fileNameLength: number;\n  /**\n   * File name\n   */\n  fileName: ArrayBuffer;\n  /**\n   * Extra field offset\n   */\n  extraOffset: number;\n  /**\n   * Relative offset of local file header\n   */\n  localHeaderOffset: number;\n};\n\n/**\n * Parses central directory file header of zip file\n * @param headerOffset - offset in the archive where header starts\n * @param buffer - buffer containing whole array\n * @returns Info from the header\n */\nexport const parseZipCDFileHeader = (headerOffset: number, buffer: DataView): ZipCDFileHeader => {\n  const offsets = {\n    CD_COMPRESSED_SIZE_OFFSET: 20,\n    CD_UNCOMPRESSED_SIZE_OFFSET: 24,\n    CD_FILE_NAME_LENGTH_OFFSET: 28,\n    CD_EXTRA_FIELD_LENGTH_OFFSET: 30,\n    CD_LOCAL_HEADER_OFFSET_OFFSET: 42,\n    CD_FILE_NAME_OFFSET: 46\n  };\n\n  const compressedSize = buffer.getUint32(headerOffset + offsets.CD_COMPRESSED_SIZE_OFFSET, true);\n\n  const uncompressedSize = buffer.getUint32(\n    headerOffset + offsets.CD_UNCOMPRESSED_SIZE_OFFSET,\n    true\n  );\n\n  const fileNameLength = buffer.getUint16(headerOffset + offsets.CD_FILE_NAME_LENGTH_OFFSET, true);\n\n  const fileName = buffer.buffer.slice(\n    headerOffset + offsets.CD_FILE_NAME_OFFSET,\n    headerOffset + offsets.CD_FILE_NAME_OFFSET + fileNameLength\n  );\n\n  const extraOffset = headerOffset + offsets.CD_FILE_NAME_OFFSET + fileNameLength;\n\n  const oldFormatOffset = buffer.getUint32(\n    headerOffset + offsets.CD_LOCAL_HEADER_OFFSET_OFFSET,\n    true\n  );\n\n  let fileDataOffset = oldFormatOffset;\n  if (fileDataOffset === 0xffffffff) {\n    let offsetInZip64Data = 4;\n    // looking for info that might be also be in zip64 extra field\n    if (compressedSize === 0xffffffff) {\n      offsetInZip64Data += 8;\n    }\n    if (uncompressedSize === 0xffffffff) {\n      offsetInZip64Data += 8;\n    }\n\n    // getUint32 needs to be replaced with getBigUint64 for archieves bigger than 2gb\n    fileDataOffset = buffer.getUint32(extraOffset + offsetInZip64Data, true); // setting it to the one from zip64\n  }\n  const localHeaderOffset = fileDataOffset;\n\n  return {\n    compressedSize,\n    uncompressedSize,\n    fileNameLength,\n    fileName,\n    extraOffset,\n    localHeaderOffset\n  };\n};\n"],"mappings":";;;;;;AAqCO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,YAAoB,EAAEC,MAAgB,EAAsB;EAC/F,IAAMC,OAAO,GAAG;IACdC,yBAAyB,EAAE,EAAE;IAC7BC,2BAA2B,EAAE,EAAE;IAC/BC,0BAA0B,EAAE,EAAE;IAC9BC,4BAA4B,EAAE,EAAE;IAChCC,6BAA6B,EAAE,EAAE;IACjCC,mBAAmB,EAAE;EACvB,CAAC;EAED,IAAMC,cAAc,GAAGR,MAAM,CAACS,SAAS,CAACV,YAAY,GAAGE,OAAO,CAACC,yBAAyB,EAAE,IAAI,CAAC;EAE/F,IAAMQ,gBAAgB,GAAGV,MAAM,CAACS,SAAS,CACvCV,YAAY,GAAGE,OAAO,CAACE,2BAA2B,EAClD,IACF,CAAC;EAED,IAAMQ,cAAc,GAAGX,MAAM,CAACY,SAAS,CAACb,YAAY,GAAGE,OAAO,CAACG,0BAA0B,EAAE,IAAI,CAAC;EAEhG,IAAMS,QAAQ,GAAGb,MAAM,CAACA,MAAM,CAACc,KAAK,CAClCf,YAAY,GAAGE,OAAO,CAACM,mBAAmB,EAC1CR,YAAY,GAAGE,OAAO,CAACM,mBAAmB,GAAGI,cAC/C,CAAC;EAED,IAAMI,WAAW,GAAGhB,YAAY,GAAGE,OAAO,CAACM,mBAAmB,GAAGI,cAAc;EAE/E,IAAMK,eAAe,GAAGhB,MAAM,CAACS,SAAS,CACtCV,YAAY,GAAGE,OAAO,CAACK,6BAA6B,EACpD,IACF,CAAC;EAED,IAAIW,cAAc,GAAGD,eAAe;EACpC,IAAIC,cAAc,KAAK,UAAU,EAAE;IACjC,IAAIC,iBAAiB,GAAG,CAAC;IAEzB,IAAIV,cAAc,KAAK,UAAU,EAAE;MACjCU,iBAAiB,IAAI,CAAC;IACxB;IACA,IAAIR,gBAAgB,KAAK,UAAU,EAAE;MACnCQ,iBAAiB,IAAI,CAAC;IACxB;IAGAD,cAAc,GAAGjB,MAAM,CAACS,SAAS,CAACM,WAAW,GAAGG,iBAAiB,EAAE,IAAI,CAAC;EAC1E;EACA,IAAMC,iBAAiB,GAAGF,cAAc;EAExC,OAAO;IACLT,cAAc,EAAdA,cAAc;IACdE,gBAAgB,EAAhBA,gBAAgB;IAChBC,cAAc,EAAdA,cAAc;IACdE,QAAQ,EAARA,QAAQ;IACRE,WAAW,EAAXA,WAAW;IACXI,iBAAiB,EAAjBA;EACF,CAAC;AACH,CAAC;AAACC,OAAA,CAAAtB,oBAAA,GAAAA,oBAAA"}