{"version":3,"file":"i3s-attribute-loader.js","names":["_core","require","_parseI3sAttribute","_urlUtils","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","VERSION","EMPTY_VALUE","REJECTED_STATUS","I3SAttributeLoader","name","id","module","version","mimeTypes","parse","_parse","_asyncToGenerator2","_regenerator","mark","_callee","arrayBuffer","options","wrap","_callee$","_context","prev","next","abrupt","parseI3STileAttribute","stop","_x","_x2","extensions","binary","exports","loadFeatureAttributes","_x3","_x4","_loadFeatureAttributes","_callee2","tile","featureId","_getAttributesData","attributeStorageInfo","attributeUrls","tilesetFields","attributes","attributeLoadPromises","index","_options$i3s","url","attributeName","attributeType","loadOptions","promise","_args2","_callee2$","_context2","undefined","getAttributesData","getUrlWithToken","i3s","token","getAttributeValueType","load","Promise","allSettled","sent","t0","generateAttributesByFeatureId","_tile$tileset","_tile$tileset$tileset","_tile$header","_tile$tileset2","_tile$tileset2$tilese","tileset","header","fields","attribute","hasOwnProperty","attributeValues","valueType","getFeatureIdsAttributeName","objectIdsAttribute","find","includes","objectIdsAttributeName","objectIds","value","attributeIndex","indexOf","getFeatureAttributesByIndex","featureIdIndex","attributesObject","codedValues","getAttributeCodedValues","getAttributeByIndexAndAttributeName","formatAttributeValue","_attributeField$domai","attributeField","field","alias","domain","attributesName","attributeObject","status","String","replace","trim","codeValue","codedValue","code","Number"],"sources":["../../src/i3s-attribute-loader.ts"],"sourcesContent":["import type {LoaderOptions, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {load} from '@loaders.gl/core';\nimport type {I3STileAttributes} from './lib/parsers/parse-i3s-attribute';\nimport {parseI3STileAttribute} from './lib/parsers/parse-i3s-attribute';\nimport {getUrlWithToken} from './lib/utils/url-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\nconst EMPTY_VALUE = '';\nconst REJECTED_STATUS = 'rejected';\n\n/**\n * Loader for I3S attributes\n */\nexport const I3SAttributeLoader: LoaderWithParser<I3STileAttributes, never, LoaderOptions> = {\n  name: 'I3S Attribute',\n  id: 'i3s-attribute',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/binary'],\n  parse: async (arrayBuffer: ArrayBuffer, options?: LoaderOptions) => parseI3STileAttribute(arrayBuffer, options),\n  extensions: ['bin'],\n  options: {},\n  binary: true\n};\n\n\n// TODO - these seem to use the loader rather than being part of the loader. Move to different file...\n\n/**\n * Load attributes based on feature id\n * @param {Object} tile\n * @param {number} featureId\n * @param {Object} options\n * @returns {Promise}\n */\n// eslint-disable-next-line complexity\nexport async function loadFeatureAttributes(tile, featureId, options = {}) {\n  const {attributeStorageInfo, attributeUrls, tilesetFields} = getAttributesData(tile);\n\n  if (!attributeStorageInfo || !attributeUrls || featureId < 0) {\n    return null;\n  }\n\n  let attributes: object[] = [];\n  const attributeLoadPromises: Promise<object>[] = [];\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    // @ts-ignore\n    const url = getUrlWithToken(attributeUrls[index], options.i3s?.token);\n    const attributeName = attributeStorageInfo[index].name;\n    const attributeType = getAttributeValueType(attributeStorageInfo[index]);\n    const loadOptions = {...options, attributeName, attributeType};\n    const promise = load(url, I3SAttributeLoader, loadOptions);\n\n    attributeLoadPromises.push(promise);\n  }\n  try {\n    attributes = await Promise.allSettled(attributeLoadPromises);\n  } catch (error) {\n    // do nothing\n  }\n\n  if (!attributes.length) {\n    return null;\n  }\n\n  return generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId, tilesetFields);\n}\n\n/**\n * Gets attributes data from tile.\n * @param tile \n * @returns \n */\nfunction getAttributesData(tile) {\n  const attributeStorageInfo = tile.tileset?.tileset?.attributeStorageInfo;\n  const attributeUrls = tile.header?.attributeUrls;\n  const tilesetFields = tile.tileset?.tileset?.fields || [];\n\n  return {attributeStorageInfo, attributeUrls, tilesetFields};\n}\n\n/**\n * Get attribute value type based on property names\n * @param {Object} attribute\n * @returns {String}\n */\nexport function getAttributeValueType(attribute) {\n  if (attribute.hasOwnProperty('objectIds')) {\n    return 'Oid32';\n  } else if (attribute.hasOwnProperty('attributeValues')) {\n    return attribute.attributeValues.valueType;\n  }\n  return '';\n}\n\n/**\n * Find in attributeStorageInfo attribute name responsible for feature ids list.\n * @param attributeStorageInfo \n * @returns Feature ids attribute name\n */\nfunction getFeatureIdsAttributeName(attributeStorageInfo) {\n  const objectIdsAttribute = attributeStorageInfo.find(attribute => attribute.name.includes('OBJECTID'));\n\n  return objectIdsAttribute?.name;\n}\n\n/**\n * Generates mapping featureId to feature attributes\n * @param {Array} attributes\n * @param {Object} attributeStorageInfo\n * @param {number} featureId\n * @returns {Object}\n */\nfunction generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId, tilesetFields) {\n  const objectIdsAttributeName = getFeatureIdsAttributeName(attributeStorageInfo);\n  const objectIds = attributes.find((attribute) => attribute.value[objectIdsAttributeName]);\n\n  if (!objectIds) {\n    return null;\n  }\n\n  const attributeIndex = objectIds.value[objectIdsAttributeName].indexOf(featureId);\n\n  if (attributeIndex < 0) {\n    return null;\n  }\n\n  return getFeatureAttributesByIndex(attributes, attributeIndex, attributeStorageInfo, tilesetFields);\n}\n\n/**\n * Generates attribute object for feature mapping by feature id\n * @param {Array} attributes\n * @param {Number} featureIdIndex\n * @param {Object} attributeStorageInfo\n * @returns {Object}\n */\nfunction getFeatureAttributesByIndex(attributes, featureIdIndex, attributeStorageInfo, tilesetFields) {\n  const attributesObject = {};\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    const attributeName = attributeStorageInfo[index].name;\n    const codedValues = getAttributeCodedValues(attributeName, tilesetFields);\n    const attribute = getAttributeByIndexAndAttributeName(attributes, index, attributeName);\n    attributesObject[attributeName] = formatAttributeValue(attribute, featureIdIndex, codedValues);\n  }\n\n  return attributesObject;\n}\n\n/**\n * Get coded values list from tileset.\n * @param attributeName \n * @param tilesetFields \n */\nfunction getAttributeCodedValues(attributeName, tilesetFields) {\n  const attributeField = tilesetFields\n    .find(field => field.name === attributeName || field.alias === attributeName);\n\n  return attributeField?.domain?.codedValues || [];\n}\n\n/**\n * Return attribute value if it presents in atrributes list\n * @param {array} attributes\n * @param {number} index\n * @param {string} attributesName\n */\nfunction getAttributeByIndexAndAttributeName(attributes, index, attributesName) {\n  const attributeObject = attributes[index];\n\n  if (attributeObject.status === REJECTED_STATUS) {\n    return null;\n  }\n\n  return attributeObject.value[attributesName];\n}\n\n/**\n * Do formatting of attribute values or return empty string.\n * @param {Array} attribute\n * @param {Number} featureIdIndex\n * @returns {String}\n */\nfunction formatAttributeValue(attribute, featureIdIndex, codedValues) {\n  let value = EMPTY_VALUE;\n\n  if (attribute && (featureIdIndex in attribute)) {\n    // eslint-disable-next-line no-control-regex\n    value = String(attribute[featureIdIndex]).replace(/\\u0000|NaN/g, '').trim();\n  }\n\n  // Check if coded values are existed. If so we use them.\n  if (codedValues.length) {\n    const codeValue = codedValues.find(codedValue => codedValue.code === Number(value));\n    value = codeValue?.name || EMPTY_VALUE;\n  }\n\n  return value;\n}\n"],"mappings":"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"}