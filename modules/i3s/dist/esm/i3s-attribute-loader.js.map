{"version":3,"file":"i3s-attribute-loader.js","names":["load","parseI3STileAttribute","getUrlWithToken","VERSION","EMPTY_VALUE","REJECTED_STATUS","I3SAttributeLoader","name","id","module","version","mimeTypes","parse","arrayBuffer","options","extensions","binary","loadFeatureAttributes","tile","featureId","arguments","length","undefined","attributeStorageInfo","attributeUrls","tilesetFields","getAttributesData","attributes","attributeLoadPromises","index","_options$i3s","url","i3s","token","attributeName","attributeType","getAttributeValueType","loadOptions","promise","push","Promise","allSettled","error","generateAttributesByFeatureId","_tile$tileset","_tile$tileset$tileset","_tile$header","_tile$tileset2","_tile$tileset2$tilese","tileset","header","fields","attribute","hasOwnProperty","attributeValues","valueType","getFeatureIdsAttributeName","objectIdsAttribute","find","includes","objectIdsAttributeName","objectIds","value","attributeIndex","indexOf","getFeatureAttributesByIndex","featureIdIndex","attributesObject","codedValues","getAttributeCodedValues","getAttributeByIndexAndAttributeName","formatAttributeValue","_attributeField$domai","attributeField","field","alias","domain","attributesName","attributeObject","status","String","replace","trim","codeValue","codedValue","code","Number"],"sources":["../../src/i3s-attribute-loader.ts"],"sourcesContent":["import type {LoaderOptions, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {load} from '@loaders.gl/core';\nimport type {I3STileAttributes} from './lib/parsers/parse-i3s-attribute';\nimport {parseI3STileAttribute} from './lib/parsers/parse-i3s-attribute';\nimport {getUrlWithToken} from './lib/utils/url-utils';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\nconst EMPTY_VALUE = '';\nconst REJECTED_STATUS = 'rejected';\n\n/**\n * Loader for I3S attributes\n */\nexport const I3SAttributeLoader: LoaderWithParser<I3STileAttributes, never, LoaderOptions> = {\n  name: 'I3S Attribute',\n  id: 'i3s-attribute',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/binary'],\n  parse: async (arrayBuffer: ArrayBuffer, options?: LoaderOptions) => parseI3STileAttribute(arrayBuffer, options),\n  extensions: ['bin'],\n  options: {},\n  binary: true\n};\n\n\n// TODO - these seem to use the loader rather than being part of the loader. Move to different file...\n\n/**\n * Load attributes based on feature id\n * @param {Object} tile\n * @param {number} featureId\n * @param {Object} options\n * @returns {Promise}\n */\n// eslint-disable-next-line complexity\nexport async function loadFeatureAttributes(tile, featureId, options = {}) {\n  const {attributeStorageInfo, attributeUrls, tilesetFields} = getAttributesData(tile);\n\n  if (!attributeStorageInfo || !attributeUrls || featureId < 0) {\n    return null;\n  }\n\n  let attributes: object[] = [];\n  const attributeLoadPromises: Promise<object>[] = [];\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    // @ts-ignore\n    const url = getUrlWithToken(attributeUrls[index], options.i3s?.token);\n    const attributeName = attributeStorageInfo[index].name;\n    const attributeType = getAttributeValueType(attributeStorageInfo[index]);\n    const loadOptions = {...options, attributeName, attributeType};\n    const promise = load(url, I3SAttributeLoader, loadOptions);\n\n    attributeLoadPromises.push(promise);\n  }\n  try {\n    attributes = await Promise.allSettled(attributeLoadPromises);\n  } catch (error) {\n    // do nothing\n  }\n\n  if (!attributes.length) {\n    return null;\n  }\n\n  return generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId, tilesetFields);\n}\n\n/**\n * Gets attributes data from tile.\n * @param tile \n * @returns \n */\nfunction getAttributesData(tile) {\n  const attributeStorageInfo = tile.tileset?.tileset?.attributeStorageInfo;\n  const attributeUrls = tile.header?.attributeUrls;\n  const tilesetFields = tile.tileset?.tileset?.fields || [];\n\n  return {attributeStorageInfo, attributeUrls, tilesetFields};\n}\n\n/**\n * Get attribute value type based on property names\n * @param {Object} attribute\n * @returns {String}\n */\nexport function getAttributeValueType(attribute) {\n  if (attribute.hasOwnProperty('objectIds')) {\n    return 'Oid32';\n  } else if (attribute.hasOwnProperty('attributeValues')) {\n    return attribute.attributeValues.valueType;\n  }\n  return '';\n}\n\n/**\n * Find in attributeStorageInfo attribute name responsible for feature ids list.\n * @param attributeStorageInfo \n * @returns Feature ids attribute name\n */\nfunction getFeatureIdsAttributeName(attributeStorageInfo) {\n  const objectIdsAttribute = attributeStorageInfo.find(attribute => attribute.name.includes('OBJECTID'));\n\n  return objectIdsAttribute?.name;\n}\n\n/**\n * Generates mapping featureId to feature attributes\n * @param {Array} attributes\n * @param {Object} attributeStorageInfo\n * @param {number} featureId\n * @returns {Object}\n */\nfunction generateAttributesByFeatureId(attributes, attributeStorageInfo, featureId, tilesetFields) {\n  const objectIdsAttributeName = getFeatureIdsAttributeName(attributeStorageInfo);\n  const objectIds = attributes.find((attribute) => attribute.value[objectIdsAttributeName]);\n\n  if (!objectIds) {\n    return null;\n  }\n\n  const attributeIndex = objectIds.value[objectIdsAttributeName].indexOf(featureId);\n\n  if (attributeIndex < 0) {\n    return null;\n  }\n\n  return getFeatureAttributesByIndex(attributes, attributeIndex, attributeStorageInfo, tilesetFields);\n}\n\n/**\n * Generates attribute object for feature mapping by feature id\n * @param {Array} attributes\n * @param {Number} featureIdIndex\n * @param {Object} attributeStorageInfo\n * @returns {Object}\n */\nfunction getFeatureAttributesByIndex(attributes, featureIdIndex, attributeStorageInfo, tilesetFields) {\n  const attributesObject = {};\n\n  for (let index = 0; index < attributeStorageInfo.length; index++) {\n    const attributeName = attributeStorageInfo[index].name;\n    const codedValues = getAttributeCodedValues(attributeName, tilesetFields);\n    const attribute = getAttributeByIndexAndAttributeName(attributes, index, attributeName);\n    attributesObject[attributeName] = formatAttributeValue(attribute, featureIdIndex, codedValues);\n  }\n\n  return attributesObject;\n}\n\n/**\n * Get coded values list from tileset.\n * @param attributeName \n * @param tilesetFields \n */\nfunction getAttributeCodedValues(attributeName, tilesetFields) {\n  const attributeField = tilesetFields\n    .find(field => field.name === attributeName || field.alias === attributeName);\n\n  return attributeField?.domain?.codedValues || [];\n}\n\n/**\n * Return attribute value if it presents in atrributes list\n * @param {array} attributes\n * @param {number} index\n * @param {string} attributesName\n */\nfunction getAttributeByIndexAndAttributeName(attributes, index, attributesName) {\n  const attributeObject = attributes[index];\n\n  if (attributeObject.status === REJECTED_STATUS) {\n    return null;\n  }\n\n  return attributeObject.value[attributesName];\n}\n\n/**\n * Do formatting of attribute values or return empty string.\n * @param {Array} attribute\n * @param {Number} featureIdIndex\n * @returns {String}\n */\nfunction formatAttributeValue(attribute, featureIdIndex, codedValues) {\n  let value = EMPTY_VALUE;\n\n  if (attribute && (featureIdIndex in attribute)) {\n    // eslint-disable-next-line no-control-regex\n    value = String(attribute[featureIdIndex]).replace(/\\u0000|NaN/g, '').trim();\n  }\n\n  // Check if coded values are existed. If so we use them.\n  if (codedValues.length) {\n    const codeValue = codedValues.find(codedValue => codedValue.code === Number(value));\n    value = codeValue?.name || EMPTY_VALUE;\n  }\n\n  return value;\n}\n"],"mappings":"AACA,SAAQA,IAAI,QAAO,kBAAkB;AAErC,SAAQC,qBAAqB,QAAO,mCAAmC;AACvE,SAAQC,eAAe,QAAO,uBAAuB;AAIrD,MAAMC,OAAO,GAAG,sBAAkB,KAAK,WAAW,qBAAiB,QAAQ;AAC3E,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,eAAe,GAAG,UAAU;AAKlC,OAAO,MAAMC,kBAA6E,GAAG;EAC3FC,IAAI,EAAE,eAAe;EACrBC,EAAE,EAAE,eAAe;EACnBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEP,OAAO;EAChBQ,SAAS,EAAE,CAAC,oBAAoB,CAAC;EACjCC,KAAK,EAAE,MAAAA,CAAOC,WAAwB,EAAEC,OAAuB,KAAKb,qBAAqB,CAACY,WAAW,EAAEC,OAAO,CAAC;EAC/GC,UAAU,EAAE,CAAC,KAAK,CAAC;EACnBD,OAAO,EAAE,CAAC,CAAC;EACXE,MAAM,EAAE;AACV,CAAC;AAaD,OAAO,eAAeC,qBAAqBA,CAACC,IAAI,EAAEC,SAAS,EAAgB;EAAA,IAAdL,OAAO,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACvE,MAAM;IAACG,oBAAoB;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGC,iBAAiB,CAACR,IAAI,CAAC;EAEpF,IAAI,CAACK,oBAAoB,IAAI,CAACC,aAAa,IAAIL,SAAS,GAAG,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EAEA,IAAIQ,UAAoB,GAAG,EAAE;EAC7B,MAAMC,qBAAwC,GAAG,EAAE;EAEnD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,oBAAoB,CAACF,MAAM,EAAEQ,KAAK,EAAE,EAAE;IAAA,IAAAC,YAAA;IAEhE,MAAMC,GAAG,GAAG7B,eAAe,CAACsB,aAAa,CAACK,KAAK,CAAC,GAAAC,YAAA,GAAEhB,OAAO,CAACkB,GAAG,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,KAAK,CAAC;IACrE,MAAMC,aAAa,GAAGX,oBAAoB,CAACM,KAAK,CAAC,CAACtB,IAAI;IACtD,MAAM4B,aAAa,GAAGC,qBAAqB,CAACb,oBAAoB,CAACM,KAAK,CAAC,CAAC;IACxE,MAAMQ,WAAW,GAAG;MAAC,GAAGvB,OAAO;MAAEoB,aAAa;MAAEC;IAAa,CAAC;IAC9D,MAAMG,OAAO,GAAGtC,IAAI,CAAC+B,GAAG,EAAEzB,kBAAkB,EAAE+B,WAAW,CAAC;IAE1DT,qBAAqB,CAACW,IAAI,CAACD,OAAO,CAAC;EACrC;EACA,IAAI;IACFX,UAAU,GAAG,MAAMa,OAAO,CAACC,UAAU,CAACb,qBAAqB,CAAC;EAC9D,CAAC,CAAC,OAAOc,KAAK,EAAE,CAEhB;EAEA,IAAI,CAACf,UAAU,CAACN,MAAM,EAAE;IACtB,OAAO,IAAI;EACb;EAEA,OAAOsB,6BAA6B,CAAChB,UAAU,EAAEJ,oBAAoB,EAAEJ,SAAS,EAAEM,aAAa,CAAC;AAClG;AAOA,SAASC,iBAAiBA,CAACR,IAAI,EAAE;EAAA,IAAA0B,aAAA,EAAAC,qBAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,qBAAA;EAC/B,MAAMzB,oBAAoB,IAAAqB,aAAA,GAAG1B,IAAI,CAAC+B,OAAO,cAAAL,aAAA,wBAAAC,qBAAA,GAAZD,aAAA,CAAcK,OAAO,cAAAJ,qBAAA,uBAArBA,qBAAA,CAAuBtB,oBAAoB;EACxE,MAAMC,aAAa,IAAAsB,YAAA,GAAG5B,IAAI,CAACgC,MAAM,cAAAJ,YAAA,uBAAXA,YAAA,CAAatB,aAAa;EAChD,MAAMC,aAAa,GAAG,EAAAsB,cAAA,GAAA7B,IAAI,CAAC+B,OAAO,cAAAF,cAAA,wBAAAC,qBAAA,GAAZD,cAAA,CAAcE,OAAO,cAAAD,qBAAA,uBAArBA,qBAAA,CAAuBG,MAAM,KAAI,EAAE;EAEzD,OAAO;IAAC5B,oBAAoB;IAAEC,aAAa;IAAEC;EAAa,CAAC;AAC7D;AAOA,OAAO,SAASW,qBAAqBA,CAACgB,SAAS,EAAE;EAC/C,IAAIA,SAAS,CAACC,cAAc,CAAC,WAAW,CAAC,EAAE;IACzC,OAAO,OAAO;EAChB,CAAC,MAAM,IAAID,SAAS,CAACC,cAAc,CAAC,iBAAiB,CAAC,EAAE;IACtD,OAAOD,SAAS,CAACE,eAAe,CAACC,SAAS;EAC5C;EACA,OAAO,EAAE;AACX;AAOA,SAASC,0BAA0BA,CAACjC,oBAAoB,EAAE;EACxD,MAAMkC,kBAAkB,GAAGlC,oBAAoB,CAACmC,IAAI,CAACN,SAAS,IAAIA,SAAS,CAAC7C,IAAI,CAACoD,QAAQ,CAAC,UAAU,CAAC,CAAC;EAEtG,OAAOF,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAElD,IAAI;AACjC;AASA,SAASoC,6BAA6BA,CAAChB,UAAU,EAAEJ,oBAAoB,EAAEJ,SAAS,EAAEM,aAAa,EAAE;EACjG,MAAMmC,sBAAsB,GAAGJ,0BAA0B,CAACjC,oBAAoB,CAAC;EAC/E,MAAMsC,SAAS,GAAGlC,UAAU,CAAC+B,IAAI,CAAEN,SAAS,IAAKA,SAAS,CAACU,KAAK,CAACF,sBAAsB,CAAC,CAAC;EAEzF,IAAI,CAACC,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EAEA,MAAME,cAAc,GAAGF,SAAS,CAACC,KAAK,CAACF,sBAAsB,CAAC,CAACI,OAAO,CAAC7C,SAAS,CAAC;EAEjF,IAAI4C,cAAc,GAAG,CAAC,EAAE;IACtB,OAAO,IAAI;EACb;EAEA,OAAOE,2BAA2B,CAACtC,UAAU,EAAEoC,cAAc,EAAExC,oBAAoB,EAAEE,aAAa,CAAC;AACrG;AASA,SAASwC,2BAA2BA,CAACtC,UAAU,EAAEuC,cAAc,EAAE3C,oBAAoB,EAAEE,aAAa,EAAE;EACpG,MAAM0C,gBAAgB,GAAG,CAAC,CAAC;EAE3B,KAAK,IAAItC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,oBAAoB,CAACF,MAAM,EAAEQ,KAAK,EAAE,EAAE;IAChE,MAAMK,aAAa,GAAGX,oBAAoB,CAACM,KAAK,CAAC,CAACtB,IAAI;IACtD,MAAM6D,WAAW,GAAGC,uBAAuB,CAACnC,aAAa,EAAET,aAAa,CAAC;IACzE,MAAM2B,SAAS,GAAGkB,mCAAmC,CAAC3C,UAAU,EAAEE,KAAK,EAAEK,aAAa,CAAC;IACvFiC,gBAAgB,CAACjC,aAAa,CAAC,GAAGqC,oBAAoB,CAACnB,SAAS,EAAEc,cAAc,EAAEE,WAAW,CAAC;EAChG;EAEA,OAAOD,gBAAgB;AACzB;AAOA,SAASE,uBAAuBA,CAACnC,aAAa,EAAET,aAAa,EAAE;EAAA,IAAA+C,qBAAA;EAC7D,MAAMC,cAAc,GAAGhD,aAAa,CACjCiC,IAAI,CAACgB,KAAK,IAAIA,KAAK,CAACnE,IAAI,KAAK2B,aAAa,IAAIwC,KAAK,CAACC,KAAK,KAAKzC,aAAa,CAAC;EAE/E,OAAO,CAAAuC,cAAc,aAAdA,cAAc,wBAAAD,qBAAA,GAAdC,cAAc,CAAEG,MAAM,cAAAJ,qBAAA,uBAAtBA,qBAAA,CAAwBJ,WAAW,KAAI,EAAE;AAClD;AAQA,SAASE,mCAAmCA,CAAC3C,UAAU,EAAEE,KAAK,EAAEgD,cAAc,EAAE;EAC9E,MAAMC,eAAe,GAAGnD,UAAU,CAACE,KAAK,CAAC;EAEzC,IAAIiD,eAAe,CAACC,MAAM,KAAK1E,eAAe,EAAE;IAC9C,OAAO,IAAI;EACb;EAEA,OAAOyE,eAAe,CAAChB,KAAK,CAACe,cAAc,CAAC;AAC9C;AAQA,SAASN,oBAAoBA,CAACnB,SAAS,EAAEc,cAAc,EAAEE,WAAW,EAAE;EACpE,IAAIN,KAAK,GAAG1D,WAAW;EAEvB,IAAIgD,SAAS,IAAKc,cAAc,IAAId,SAAU,EAAE;IAE9CU,KAAK,GAAGkB,MAAM,CAAC5B,SAAS,CAACc,cAAc,CAAC,CAAC,CAACe,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;EAC7E;EAGA,IAAId,WAAW,CAAC/C,MAAM,EAAE;IACtB,MAAM8D,SAAS,GAAGf,WAAW,CAACV,IAAI,CAAC0B,UAAU,IAAIA,UAAU,CAACC,IAAI,KAAKC,MAAM,CAACxB,KAAK,CAAC,CAAC;IACnFA,KAAK,GAAG,CAAAqB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE5E,IAAI,KAAIH,WAAW;EACxC;EAEA,OAAO0D,KAAK;AACd"}