{"version":3,"file":"types.js","names":["DATA_TYPE","HeaderAttributeProperty"],"sources":["../../src/types.ts"],"sourcesContent":["import type {Matrix4, Quaternion, Vector3} from '@math.gl/core';\nimport type {TypedArray, MeshAttribute, TextureLevel} from '@loaders.gl/schema';\nimport {Tile3D, Tileset3D} from '@loaders.gl/tiles';\n\nexport enum DATA_TYPE {\n  UInt8 = 'UInt8',\n  UInt16 = 'UInt16',\n  UInt32 = 'UInt32',\n  UInt64 = 'UInt64',\n  Int16 = 'Int16',\n  Int32 = 'Int32',\n  Int64 = 'Int64',\n  Float32 = 'Float32',\n  Float64 = 'Float64'\n}\n\nexport type COLOR = [number, number, number, number];\n\n/**\n * spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/3DSceneLayer.cmn.md\n */\n// TODO Replace \"[key: string]: any\" with actual defenition\nexport interface I3STilesetHeader extends SceneLayer3D {\n  /** Not in spec, but is necessary for woking */\n  url?: string;\n  [key: string]: any;\n}\n/** https://github.com/Esri/i3s-spec/blob/master/docs/1.8/nodePage.cmn.md */\nexport type NodePage = {\n  /** Array of nodes. */\n  nodes: NodeInPage[];\n};\n/**\n * Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/mesh.cmn.md\n */\ntype NodeMesh = {\n  /**\n   * The material definition.\n   */\n  material: MeshMaterial;\n  /** The geometry definition. */\n  geometry: MeshGeometry;\n  /** The attribute set definition. */\n  attribute: meshAttribute;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/meshMaterial.cmn.md */\nexport type MeshMaterial = {\n  /** The index in layer.materialDefinitions array. */\n  definition: number;\n  /** Resource id for the material textures. i.e: layers/0/nodes/{material.resource}/textures/{tex_name}. Is required if material declares any textures. */\n  resource?: number;\n  /** Estimated number of texel for the highest resolution base color texture. */\n  texelCountHint?: number;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/meshGeometry.cmn.md */\nexport type MeshGeometry = {\n  /** The index in layer.geometryDefinitions array */\n  definition: number;\n  /** The resource locator to be used to query geometry resources: layers/0/nodes/{this.resource}/geometries/{layer.geometryDefinitions[this.definition].geometryBuffers[0 or 1]}. */\n  resource: number;\n  /** Number of vertices in the geometry buffer of this mesh for the umcompressed mesh buffer. Please note that Draco compressed meshes may have less vertices due to de-duplication (actual number of vertices is part of the Draco binary blob). Default=0 */\n  vertexCount?: number;\n  /** Number of features for this mesh. Default=0. (Must omit or set to 0 if mesh doesn't use features.) */\n  featureCount?: number;\n};\n/** https://github.com/Esri/i3s-spec/blob/master/docs/1.8/meshAttribute.cmn.md */\ntype meshAttribute = {\n  /** The resource identifier to be used to locate attribute resources of this mesh. i.e. layers/0/nodes/<resource id>/attributes/... */\n  resource: number;\n};\n\nexport type I3STextureFormat = 'jpg' | 'png' | 'ktx-etc2' | 'dds' | 'ktx2';\n\n// TODO Replace \"[key: string]: any\" with actual defenition\nexport type I3STileHeader = {\n  isDracoGeometry: boolean;\n  textureUrl?: string;\n  url?: string;\n  textureFormat?: I3STextureFormat;\n  textureLoaderOptions?: any;\n  materialDefinition?: I3SMaterialDefinition;\n  mbs: Mbs;\n  obb?: Obb;\n  lodSelection?: LodSelection[];\n  [key: string]: any;\n};\n\nexport type I3SParseOptions = {\n  /** ArcGIS access token */\n  token?: string;\n  /** Is 3DSceneLayer json expected in response */\n  isTileset?: string;\n  /** Is 3DNodeIndexDocument json expected in response */\n  isTileHeader?: string;\n  /** Tile3D instance. This property used only to load tile content */\n  /** Tile-specific options */\n  _tileOptions?: I3STileOptions;\n  /** Tileset-specific options */\n  _tilesetOptions?: I3STilesetOptions;\n  /** Load Draco Compressed geometry if available */\n  useDracoGeometry?: boolean;\n  /** Load compressed textures if available */\n  useCompressedTextures?: boolean;\n  /** Set false if don't need to parse textures */\n  decodeTextures?: boolean;\n  /** deck.gl compatible coordinate system.\n   * https://github.com/visgl/deck.gl/blob/master/docs/developer-guide/coordinate-systems.md\n   * Supported coordinate systems: METER_OFFSETS, LNGLAT_OFFSETS\n   */\n  coordinateSystem?: number;\n  colorsByAttribute?: {\n    attributeName: string;\n    minValue: number;\n    maxValue: number;\n    minColor: COLOR;\n    maxColor: COLOR;\n  };\n\n  /** @deprecated */\n  tile?: Tile3D | I3STileOptions;\n  /** Tileset3D instance. This property used only to load tile content */\n  /** @deprecated */\n  tileset?: Tileset3D | I3STilesetOptions;\n};\n\nexport type I3STileOptions = {\n  isDracoGeometry: boolean;\n  textureUrl?: string;\n  textureFormat?: I3STextureFormat;\n  textureLoaderOptions?: any;\n  materialDefinition?: I3SMaterialDefinition;\n  attributeUrls: string[];\n  mbs: Mbs;\n};\n\nexport type I3STilesetOptions = {\n  store: Store;\n  attributeStorageInfo: AttributeStorageInfo[];\n  fields: Field[];\n};\n\n// TODO Replace \"[key: string]: any\" with actual defenition\nexport type I3STileContent = {\n  attributes: I3SMeshAttributes;\n  indices: TypedArray | null;\n  featureIds: number[] | TypedArray;\n  vertexCount: number;\n  modelMatrix: Matrix4;\n  coordinateSystem: number;\n  byteLength: number;\n  texture: TileContentTexture;\n  [key: string]: any;\n};\n\nexport type TileContentTexture =\n  | ArrayBuffer\n  | {\n      compressed: boolean;\n      mipmaps: boolean;\n      width: number;\n      height: number;\n      data: TextureLevel[];\n    }\n  | null;\n\nexport type BoundingVolumes = {\n  mbs: Mbs;\n  obb: Obb;\n};\n\nexport type Obb = {\n  center: number[] | Vector3;\n  halfSize: number[] | Vector3;\n  quaternion: number[] | Quaternion;\n};\n\nexport type Mbs = [number, number, number, number];\n\n/** SceneLayer3D based on I3S specification - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/3DSceneLayer.cmn.md */\nexport type SceneLayer3D = {\n  /** Unique numeric ID of the layer. */\n  id: number;\n  /** The relative URL to the 3DSceneLayerResource. Only present as part of the SceneServiceInfo resource. */\n  href?: string;\n  /** The user-visible layer type */\n  layerType: '3DObject' | 'IntegratedMesh';\n  /** The spatialReference of the layer including the vertical coordinate reference system (CRS). Well Known Text (WKT) for CRS is included to support custom CRS. */\n  spatialReference?: SpatialReference;\n  /** Enables consuming clients to quickly determine whether this layer is compatible (with respect to its horizontal and vertical coordinate system) with existing content. */\n  heightModelInfo?: HeightModelInfo;\n  /** The ID of the last update session in which any resource belonging to this layer has been updated. */\n  version: string;\n  /** The name of this layer. */\n  name?: string;\n  /** The time of the last update. */\n  serviceUpdateTimeStamp?: {lastUpdate: number};\n  /** The display alias to be used for this layer. */\n  alias?: string;\n  /** Description string for this layer. */\n  description?: string;\n  /** Copyright and usage information for the data in this layer. */\n  copyrightText?: string;\n  /** Capabilities supported by this layer. */\n  capabilities: string[];\n  /** ZFactor to define conversion factor for elevation unit. */\n  ZFactor?: number;\n  /** Indicates if any styling information represented as drawingInfo is captured as part of the binary mesh representation. */\n  cachedDrawingInfo?: CachedDrawingInfo;\n  /** An object containing drawing information. */\n  drawingInfo?: DrawingInfo;\n  /** An object containing elevation drawing information. If absent, any content of the scene layer is drawn at its z coordinate. */\n  elevationInfo?: ElevationInfo;\n  /** PopupInfo of the scene layer. */\n  popupInfo?: PopupInfo;\n  /** Indicates if client application will show the popup information. Default is FALSE. */\n  disablePopup: boolean;\n  /**\n   * The store object describes the exact physical storage of a layer and\n   * enables the client to detect when multiple layers are served from\n   * the same store.\n   */\n  store: Store;\n  /** A collection of objects that describe each attribute field regarding its field name, datatype, and a user friendly name {name,type,alias}. */\n  fields?: Field[];\n  /** Provides the schema and layout used for storing attribute content in binary format in I3S. */\n  attributeStorageInfo?: AttributeStorageInfo[];\n  /** Contains the statistical information for a layer. */\n  statisticsInfo?: StatisticsInfo[];\n  /** The paged-access index description. */\n  nodePages?: NodePageDefinition;\n  /** List of materials classes used in this layer. */\n  materialDefinitions?: I3SMaterialDefinition[];\n  /** Defines the set of textures that can be referenced by meshes. */\n  textureSetDefinitions?: TextureSetDefinition[];\n  /** Define the layouts of mesh geometry and its attributes */\n  geometryDefinitions?: GeometryDefinition[];\n  /** 3D extent. */\n  fullExtent?: FullExtent;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/cachedDrawingInfo.cmn.md */\nexport type CachedDrawingInfo = {\n  /** If true, the drawingInfo is captured as part of the binary scene layer representation. */\n  color: boolean;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/drawingInfo.cmn.md */\nexport type DrawingInfo = {\n  /** An object defining the symbology for the layer. See more information about supported renderer types in ArcGIS clients. */\n  renderer: any;\n  /** Scale symbols for the layer. */\n  scaleSymbols: boolean;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/elevationInfo.cmn.md */\nexport type ElevationInfo = {\n  mode: 'relativeToGround' | 'absoluteHeight' | 'onTheGround' | 'relativeToScene';\n  /** Offset is always added to the result of the above logic except for onTheGround where offset is ignored. */\n  offset: number;\n  /** A string value indicating the unit for the values in elevationInfo */\n  unit: string;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/statisticsInfo.cmn.md */\nexport type StatisticsInfo = {\n  /** Key indicating the resource of the statistics. */\n  key: string;\n  /** Name of the field of the statistical information. */\n  name: string;\n  /** The URL to the statistics information. */\n  href: string;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/nodePageDefinition.cmn.md */\nexport type NodePageDefinition = {\n  /** Number of nodes per page for this layer. Must be a power-of-two less than 4096 */\n  nodesPerPage: number;\n  /** Index of the root node. Default = 0. */\n  rootIndex?: number;\n  /** Defines the meaning of nodes[].lodThreshold for this layer. */\n  lodSelectionMetricType: 'maxScreenThresholdSQ';\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/materialDefinitions.cmn.md */\nexport type I3SMaterialDefinition = {\n  /** A set of parameter values that are used to define the metallic-roughness material model from Physically-Based Rendering (PBR) methodology. When not specified, all the default values of pbrMetallicRoughness apply. */\n  pbrMetallicRoughness: I3SPbrMetallicRoughness;\n  /** The normal texture map. */\n  normalTexture?: I3SMaterialTexture;\n  /** The occlusion texture map. */\n  occlusionTexture?: I3SMaterialTexture;\n  /** The emissive texture map. */\n  emissiveTexture?: I3SMaterialTexture;\n  /** The emissive color of the material. */\n  emissiveFactor?: [number, number, number];\n  /** Defines the meaning of the alpha-channel/alpha-mask. */\n  alphaMode: 'opaque' | 'mask' | 'blend';\n  /** The alpha cutoff value of the material. */\n  alphaCutoff?: number;\n  /** Specifies whether the material is double sided. */\n  doubleSided?: boolean;\n  /** Winding order is counterclockwise. */\n  cullFace?: 'none' | 'front' | 'back';\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/pbrMetallicRoughness.cmn.md */\nexport type I3SPbrMetallicRoughness = {\n  /** The material's base color factor. default=[1,1,1,1] */\n  baseColorFactor?: [number, number, number, number];\n  /** The base color texture. */\n  baseColorTexture?: I3SMaterialTexture;\n  /** the metalness of the material. default=1.0 */\n  metallicFactor: number;\n  /** the roughness of the material. default=1.0 */\n  roughnessFactor: number;\n  /** the metallic-roughness texture. */\n  metallicRoughnessTexture?: I3SMaterialTexture;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/materialTexture.cmn.md */\nexport type I3SMaterialTexture = {\n  /** The index in layer.textureSetDefinitions. */\n  textureSetDefinitionId: number;\n  /** The set index of texture's TEXCOORD attribute used for texture coordinate mapping. Default is 0. Deprecated. */\n  texCoord?: number;\n  /** The normal texture: scalar multiplier applied to each normal vector of the normal texture. For occlusion texture,scalar multiplier controlling the amount of occlusion applied. Default=1 */\n  factor?: number;\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/attributeStorageInfo.cmn.md */\nexport type AttributeStorageInfo = {\n  key: string;\n  name: string;\n  header: {property: string; valueType: string}[];\n  ordering?: string[];\n  attributeValues?: AttributeValue;\n  attributeByteCounts?: AttributeValue;\n  objectIds?: AttributeValue;\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/field.cmn.md */\nexport type Field = {\n  name: string;\n  type: ESRIField;\n  alias?: string;\n  domain?: Domain;\n};\n\nexport type ESRIField =\n  | 'esriFieldTypeDate'\n  | 'esriFieldTypeSingle'\n  | 'esriFieldTypeDouble'\n  | 'esriFieldTypeGUID'\n  | 'esriFieldTypeGlobalID'\n  | 'esriFieldTypeInteger'\n  | 'esriFieldTypeOID'\n  | 'esriFieldTypeSmallInteger'\n  | 'esriFieldTypeString';\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/popupInfo.cmn.md */\nexport type PopupInfo = {\n  title?: string;\n  description?: string;\n  expressionInfos?: any[];\n  fieldInfos?: FieldInfo[];\n  mediaInfos?: any[];\n  popupElements?: {text?: string; type?: string; fieldInfos?: FieldInfo[]}[];\n};\n\n/**\n * Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.7/3DNodeIndexDocument.cmn.md\n */\nexport type Node3DIndexDocument = {\n  id: string;\n  version?: string;\n  level?: number;\n  mbs?: Mbs;\n  obb?: Obb;\n  lodSelection?: LodSelection[];\n  children?: NodeReference[];\n  neighbors?: NodeReference[];\n  parentNode?: NodeReference;\n  sharedResource?: Resource;\n  featureData?: Resource[];\n  geometryData?: Resource[];\n  textureData?: Resource[];\n  attributeData?: Resource[];\n  created?: string;\n  expires?: string;\n};\n\n/**\n * Minimal I3S node data is needed for loading\n */\nexport type I3SMinimalNodeData = {\n  id: string;\n  url?: string;\n  transform?: number[];\n  lodSelection?: LodSelection[];\n  obb?: Obb;\n  mbs?: Mbs;\n  contentUrl?: string;\n  textureUrl?: string;\n  attributeUrls?: string[];\n  materialDefinition?: I3SMaterialDefinition;\n  textureFormat?: I3STextureFormat;\n  textureLoaderOptions?: {[key: string]: any};\n  children?: NodeReference[];\n  isDracoGeometry: boolean;\n};\n\nexport type LodSelection = {\n  metricType?: string;\n  maxError: number;\n};\n\nexport type NodeReference = {\n  id: string;\n  version?: string;\n  mbs?: Mbs;\n  obb?: Obb;\n  href?: string;\n};\n\nexport type Resource = {\n  href: string;\n  layerContent?: string[];\n  featureRange?: number[];\n  multiTextureBundle?: string;\n  vertexElements?: number[];\n  faceElements?: number[];\n  nodePath?: string;\n};\n\nexport type MaxScreenThresholdSQ = {\n  maxError: number;\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/node.cmn.md */\nexport type NodeInPage = {\n  /**\n   * The index in the node array. May be different than material, geometry and attribute resource id. See mesh for more information.\n   */\n  index: number;\n  /**\n   * The index of the parent node in the node array.\n   */\n  parentIndex?: number;\n  /**\n   * When to switch LoD. See https://github.com/Esri/i3s-spec/blob/master/docs/1.8/nodePageDefinition.cmn.md for more information.\n   */\n  lodThreshold?: number;\n  /**\n   * Oriented bounding box for this node.\n   */\n  obb: Obb;\n  /**\n   * index of the children nodes indices.\n   */\n  children?: number[];\n  /**\n   * The mesh for this node. WARNING: only SINGLE mesh is supported at version 1.7 (i.e. length must be 0 or 1).\n   */\n  mesh?: NodeMesh;\n};\n\n/**\n * https://github.com/Esri/i3s-spec/blob/master/docs/1.8/materialDefinitionInfo.cmn.md\n */\nexport type MaterialDefinitionInfo = {\n  /** A name for the material as assigned in the creating application. */\n  name?: string;\n  /** Indicates the material type, chosen from the supported values. */\n  type?: 'standard' | 'water' | 'billboard' | 'leafcard' | 'reference';\n  /** The href that resolves to the shared resource bundle in which the material definition is contained. */\n  $ref?: string;\n  /** Parameter defined for the material.\n   * https://github.com/Esri/i3s-spec/blob/master/docs/1.8/materialParams.cmn.md\n   */\n  params: {\n    /** Indicates transparency of this material; 0 = opaque, 1 = fully transparent. */\n    transparency?: number;\n    /** Indicates reflectivity of this material. */\n    reflectivity?: number;\n    /** Indicates shininess of this material. */\n    shininess?: number;\n    /** Ambient color of this material. Ambient color is the color of an object where it is in shadow.\n     * This color is what the object reflects when illuminated by ambient light rather than direct light. */\n    ambient?: number[];\n    /** Diffuse color of this material. Diffuse color is the most instinctive meaning of the color of an object.\n     * It is that essential color that the object reveals under pure white light. It is perceived as the color\n     * of the object itself rather than a reflection of the light. */\n    diffuse?: number[];\n    /** Specular color of this material. Specular color is the color of the light of a specular reflection\n     * (specular reflection is the type of reflection that is characteristic of light reflected from a shiny\n     * surface). */\n    specular?: number[];\n    /** Rendering mode. */\n    renderMode: 'textured' | 'solid' | 'untextured' | 'wireframe';\n    /** TRUE if features with this material should cast shadows. */\n    castShadows?: boolean;\n    /** TRUE if features with this material should receive shadows */\n    receiveShadows?: boolean;\n    /** Indicates the material culling options {back, front, none}. */\n    cullFace?: string;\n    /** This flag indicates that the vertex color attribute of the geometry should be used to color the geometry\n     * for rendering. If texture is present, the vertex colors are multiplied by this color.\n     * e.g. pixel_color = [interpolated]vertex_color * texel_color. Default is false. */\n    vertexColors?: boolean;\n    /** This flag indicates that the geometry has uv region vertex attributes. These are used for adressing\n     * subtextures in a texture atlas. The uv coordinates are relative to this subtexture in this case.\n     * This is mostly useful for repeated textures in a texture atlas. Default is false. */\n    vertexRegions?: boolean;\n    /** Indicates whether Vertex Colors also contain a transparency channel. Default is false. */\n    useVertexColorAlpha?: boolean;\n  };\n};\n\n/** https://github.com/Esri/i3s-spec/blob/master/docs/1.8/sharedResource.cmn.md */\nexport type SharedResources = {\n  /** Materials describe how a Feature or a set of Features is to be rendered. */\n  materialDefinitions?: {[key: string]: MaterialDefinitionInfo};\n  /** A Texture is a set of images, with some parameters specific to the texture/uv mapping to geometries. */\n  textureDefinitions?: {[key: string]: TextureDefinitionInfo};\n};\n\n/** https://github.com/Esri/i3s-spec/blob/master/docs/1.8/image.cmn.md */\ntype TextureImage = {\n  /** A unique ID for each image. Generated using the BuildID function. */\n  id: string;\n  /** width of this image, in pixels. */\n  size?: number;\n  /** The maximum size of a single pixel in world units.\n   * This property is used by the client to pick the image to load and render. */\n  pixelInWorldUnits?: number;\n  /** The href to the image(s), one per encoding, in the same order as the encodings. */\n  href?: string[];\n  /** The byte offset of this image's encodings. There is one per encoding,\n   * in the same order as the encodings, in the block in which this texture image resides. */\n  byteOffset?: string[];\n  /** The length in bytes of this image's encodings. There is one per encoding,\n   * in the same order as the encodings. */\n  length?: number[];\n};\n\nexport type Attribute = 'OBJECTID' | 'string' | 'double' | 'Int32' | string;\n\nexport type Extent = [number, number, number, number];\n\nexport type FeatureAttribute = {\n  id: AttributeValue;\n  faceRange: AttributeValue;\n};\n\nexport type BuildingSceneLayerTileset = {\n  header: BuildingSceneLayer;\n  sublayers: BuildingSceneSublayer[];\n};\n\nexport type BuildingSceneLayer = {\n  id: number;\n  name: string;\n  version: string;\n  alias?: string;\n  layerType: 'Building';\n  description?: string;\n  copyrightText?: string;\n  fullExtent: FullExtent;\n  spatialReference: SpatialReference;\n  heightModelInfo?: HeightModelInfo;\n  sublayers: BuildingSceneSublayer[];\n  filters?: Filter[];\n  activeFilterID?: string;\n  statisticsHRef?: string;\n};\n\nexport type BuildingSceneSublayer = {\n  id: number;\n  name: string;\n  alias?: string;\n  discipline?: 'Mechanical' | 'Architectural' | 'Piping' | 'Electrical' | 'Structural';\n  modelName?: string;\n  layerType: 'group' | '3DObject' | 'Point';\n  visibility?: boolean;\n  sublayers?: BuildingSceneSublayer[];\n  isEmpty?: boolean;\n  url?: string;\n};\n\ntype Filter = {\n  id: string;\n  name: string;\n  description: string;\n  isDefaultFilter?: boolean;\n  isVisible?: boolean;\n  filterBlocks: FilterBlock[];\n  filterAuthoringInfo?: FilterAuthoringInfo;\n};\n\ntype FilterAuthoringInfo = {\n  type: string;\n  filterBlocks: FilterBlockAuthoringInfo[];\n};\n\ntype FilterBlockAuthoringInfo = {\n  filterTypes: FilterType[];\n};\n\ntype FilterType = {\n  filterType: string;\n  filterValues: string[];\n};\n\ntype FilterBlock = {\n  title: string;\n  filterMode: FilterModeSolid | FilterModeWireFrame;\n  filterExpression: string;\n};\n\ntype Edges = {\n  type: string;\n  color: number[];\n  size: number;\n  transparency: number;\n  extensionLength: number;\n};\n\ntype FilterModeSolid = {\n  type: 'solid';\n};\n\ntype FilterModeWireFrame = {\n  type: 'wireFrame';\n  edges: Edges;\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/spatialReference.cmn.md */\nexport type SpatialReference = {\n  /** The current WKID value of the vertical coordinate system. */\n  latestVcsWkid: number;\n  /** dentifies the current WKID value associated with the same spatial reference. */\n  latestWkid: number;\n  /** The WKID value of the vertical coordinate system. */\n  vcsWkid: number;\n  /** WKID, or Well-Known ID, of the CRS. Specify either WKID or WKT of the CRS. */\n  wkid: number;\n  /** WKT, or Well-Known Text, of the CRS. Specify either WKT or WKID of the CRS but not both. */\n  wkt?: string;\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/fullExtent.cmn.md */\nexport type FullExtent = {\n  /** left longitude in decimal degrees */\n  xmin: number;\n  /** right longitude in decimal degrees */\n  xmax: number;\n  /** bottom latitude in decimal degrees*/\n  ymin: number;\n  /** top latitude in decimal degrees*/\n  ymax: number;\n  /** lowest elevation in meters */\n  zmin: number;\n  /** highest elevation in meters */\n  zmax: number;\n  spatialReference?: SpatialReference;\n};\n\n/**\n * https://github.com/Esri/i3s-spec/blob/master/docs/1.8/textureDefinitionInfo.cmn.md\n */\nexport type TextureDefinitionInfo = {\n  /** MIMEtype - The encoding/content type that is used by all images in this map */\n  encoding?: string[];\n  /** UV wrapping modes, from {none, repeat, mirror}. */\n  wrap?: string[];\n  /** TRUE if the Map represents a texture atlas. */\n  atlas?: boolean;\n  /** The name of the UV set to be used as texture coordinates. */\n  uvSet?: string;\n  /** Indicates channels description. */\n  channels?: 'rbg' | 'rgba' | string;\n  /** An image is a binary resource, containing a single raster that can be used to texture a feature or symbol. */\n  images: TextureImage[];\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/domain.cmn.md */\ntype Domain = {\n  type: string;\n  name: string;\n  description?: string;\n  fieldType?: string;\n  range?: [number, number];\n  codedValues?: {name: string; code: string | number}[];\n  mergePolicy?: string;\n  splitPolicy?: string;\n};\n/**\n * spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/store.cmn.md\n */\ntype Store = {\n  id: string | number;\n  profile: string;\n  version: number | string;\n  resourcePattern: string[];\n  rootNode: string;\n  extent: number[];\n  indexCRS: string;\n  vertexCRS: string;\n  normalReferenceFrame: string;\n  attributeEncoding: string;\n  textureEncoding: string[];\n  lodType: string;\n  lodModel: string;\n  defaultGeometrySchema: DefaultGeometrySchema;\n};\n/**\n * Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/defaultGeometrySchema.cmn.md\n */\ntype DefaultGeometrySchema = {\n  geometryType?: 'triangles';\n  topology: 'PerAttributeArray' | 'Indexed';\n  header: HeaderAttribute[];\n  ordering: string[];\n  vertexAttributes: VertexAttribute;\n  faces?: VertexAttribute;\n  featureAttributeOrder: string[];\n  featureAttributes: FeatureAttribute;\n  // TODO Do we realy need this Property?\n  attributesOrder?: string[];\n};\n/**\n * spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/headerAttribute.cmn.md\n */\nexport type HeaderAttribute = {\n  property: HeaderAttributeProperty.vertexCount | HeaderAttributeProperty.featureCount | string;\n  type:\n    | DATA_TYPE.UInt8\n    | DATA_TYPE.UInt16\n    | DATA_TYPE.UInt32\n    | DATA_TYPE.UInt64\n    | DATA_TYPE.Int16\n    | DATA_TYPE.Int32\n    | DATA_TYPE.Int64\n    | DATA_TYPE.Float32\n    | DATA_TYPE.Float64;\n};\nexport enum HeaderAttributeProperty {\n  vertexCount = 'vertexCount',\n  featureCount = 'featureCount'\n}\nexport type VertexAttribute = {\n  position: GeometryAttribute;\n  normal: GeometryAttribute;\n  uv0: GeometryAttribute;\n  color: GeometryAttribute;\n  region?: GeometryAttribute;\n};\nexport type GeometryAttribute = {\n  byteOffset?: number;\n  valueType:\n    | DATA_TYPE.UInt8\n    | DATA_TYPE.UInt16\n    | DATA_TYPE.Int16\n    | DATA_TYPE.Int32\n    | DATA_TYPE.Int64\n    | DATA_TYPE.Float32\n    | DATA_TYPE.Float64;\n  valuesPerElement: number;\n};\nexport type I3SMeshAttributes = {\n  [key: string]: I3SMeshAttribute;\n};\nexport interface I3SMeshAttribute extends MeshAttribute {\n  type?: number;\n  metadata?: any;\n}\n/** https://github.com/Esri/i3s-spec/blob/master/docs/1.8/heightModelInfo.cmn.md */\ntype HeightModelInfo = {\n  heightModel: 'gravity_related_height' | 'ellipsoidal';\n  vertCRS: string;\n  heightUnit:\n    | 'meter'\n    | 'us-foot'\n    | 'foot'\n    | 'clarke-foot'\n    | 'clarke-yard'\n    | 'clarke-link'\n    | 'sears-yard'\n    | 'sears-foot'\n    | 'sears-chain'\n    | 'benoit-1895-b-chain'\n    | 'indian-yard'\n    | 'indian-1937-yard'\n    | 'gold-coast-foot'\n    | 'sears-1922-truncated-chain'\n    | 'us-inch'\n    | 'us-mile'\n    | 'us-yard'\n    | 'millimeter'\n    | 'decimeter'\n    | 'centimeter'\n    | 'kilometer';\n};\n\nexport type TextureSetDefinitionFormats = {name: string; format: I3STextureFormat}[];\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/textureSetDefinition.cmn.md */\ntype TextureSetDefinition = {\n  formats: TextureSetDefinitionFormats;\n  atlas?: boolean;\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/geometryDefinition.cmn.md */\ntype GeometryDefinition = {\n  topology: 'triangle' | string;\n  geometryBuffers: GeometryBuffer[];\n};\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/geometryBuffer.cmn.md */\ntype GeometryBuffer = {\n  offset?: number;\n  position?: GeometryBufferItem;\n  normal?: GeometryBufferItem;\n  uv0?: GeometryBufferItem;\n  color?: GeometryBufferItem;\n  uvRegion?: GeometryBufferItem;\n  featureId?: GeometryBufferItem;\n  faceRange?: GeometryBufferItem;\n  compressedAttributes?: {encoding: string; attributes: string[]};\n};\n\ntype GeometryBufferItem = {type: string; component: number; encoding?: string; binding: string};\n\ntype AttributeValue = {valueType: string; encoding?: string; valuesPerElement?: number};\n\nexport type FieldInfo = {\n  fieldName: string;\n  visible: boolean;\n  isEditable: boolean;\n  label: string;\n};\n\nexport type ArcGisWebSceneData = {\n  header: ArcGisWebScene;\n  layers: OperationalLayer[];\n  unsupportedLayers: OperationalLayer[];\n};\n\n/**\n * ArcGis WebScene spec - https://developers.arcgis.com/web-scene-specification/objects/webscene/\n */\nexport type ArcGisWebScene = {\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/applicationProperties/\n   * Configuration of application and UI elements.\n   */\n  applicationProperties?: any;\n  /**\n   * Operational layers contain business data which are used to make thematic scenes.\n   */\n  operationalLayers: OperationalLayer[];\n  /**\n   * Basemaps give the web scene a geographic context.\n   */\n  baseMap: BaseMap;\n  /**\n   * Ground defines the main surface of the web scene, based on elevation layers.\n   */\n  ground: Ground;\n  /**\n   * An object that defines the characteristics of the vertical coordinate system used by the web scene.\n   */\n  heightModelInfo: HeightModelInfo;\n  /**\n   * Root element in the web scene specifying a string value indicating the web scene version.\n   * Valid values: 1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.20, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.27\n   */\n  version: string;\n  /**\n   * String value indicating the application which authored the webmap\n   */\n  authoringApp: string;\n  /**\n   * String value indicating the authoring App's version number.\n   */\n  authoringAppVersion: string;\n  /**\n   * A presentation consists of multiple slides, where each slide is a specific view into the web scene.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/presentation/\n   * @todo Add presentation type.\n   */\n  presentation: ArcGisPresentation;\n  /**\n   * An object that provides information about the initial environment settings and viewpoint of the web scene.\n   */\n  initialState: InitialState;\n  /**\n   * An object used to specify the spatial reference of the given geometry.\n   */\n  spatialReference: SpatialReference;\n  viewingMode: 'global' | 'local';\n  /**\n   * @todo add type.\n   * Defines area to be clipped for display.\n   */\n  clippingArea?: any;\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/mapFloorInfo/\n   * Contains floor-awareness information for the web scene.\n   */\n  mapFloorInfo?: any;\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/mapRangeInfo/\n   * Map Range Information\n   */\n  mapRangeInfo?: any;\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/table/\n   * An array of table objects.\n   */\n  tables?: any;\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/transportationNetwork/\n   * Used to specify the transportation networks of the scene.\n   */\n  transportationNetworks?: any;\n  /**\n   * @todo add type.\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/widgets/\n   * The widgets object contains widgets that should be exposed to the user.\n   */\n  widgets?: any;\n};\n\n/**\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-webscene-Presentation.html\n */\ntype ArcGisPresentation = {\n  slides: Slide[];\n};\n\n/**\n * A slide stores a snapshot of several pre-set properties of the WebScene and SceneView,\n * such as the basemap, viewpoint and visible layers.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-webscene-Slide.html\n */\ntype Slide = {\n  id: string;\n  title: {\n    text: string;\n  };\n  thumbnail: {\n    url: string;\n  };\n  description: {\n    text: string;\n  };\n  ground: {\n    transparency: number;\n  };\n  baseMap: ArcGisBaseMap;\n  visibleLayers: ArcGisVisibleLayer[];\n  viewpoint: ArcGisViewPoint;\n};\n\n/**\n * The basemap of the scene. Only the base and reference layers of the basemap are stored in a slide.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-Basemap.html\n */\ntype ArcGisBaseMap = {\n  id: string;\n  title: string;\n  baseMapLayers: ArcGisBaseMapLayer[];\n};\n\n/**\n * The visible layers of the scene.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-webscene-Slide.html#visibleLayers\n */\ntype ArcGisVisibleLayer = {\n  id: string;\n  sublayerIds: number[];\n};\n/**\n * The basemap of the scene.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-Basemap.html\n */\ntype ArcGisBaseMapLayer = {\n  id: string;\n  title: string;\n  url: string;\n  layerType: string;\n  visibility: boolean;\n};\n\n/**\n * The viewpoint of the slide. This acts like a bookmark, saving a predefined location or point of view from which to view the scene.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-Viewpoint.html\n */\ntype ArcGisViewPoint = {\n  scale: number;\n  rotation?: number;\n  /**\n   * Spec - https://developers.arcgis.com/web-scene-specification/objects/viewpoint/\n   */\n  targetGeometry: any;\n  camera: ArcGisCamera;\n};\n\n/**\n * The camera defines the position, tilt, and heading of the point from which the SceneView's visible extent is observed.\n * It is not associated with device hardware. This class only applies to 3D SceneViews.\n * Spec - https://developers.arcgis.com/javascript/latest/api-reference/esri-Camera.html\n */\nexport type ArcGisCamera = {\n  position: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  spatialReference: {\n    wkid: number;\n    latestWkid: number;\n  };\n  heading: number;\n  tilt: number;\n};\n\n/**\n * Operational layers contain your data. Usually, a basemap sits beneath your operational layers to give them geographic context.\n * Spec- https://developers.arcgis.com/web-scene-specification/objects/operationalLayers/\n */\nexport type OperationalLayer = {\n  id: string;\n  opacity: number;\n  title: string;\n  url: string;\n  visibility: boolean;\n  itemId: string;\n  layerType: string;\n  LayerDefinition: LayerDefinition;\n  screenSizePerspective: boolean;\n  showLabels?: boolean;\n  disablePopup?: boolean;\n  showLegend?: boolean;\n  layers?: OperationalLayer[];\n};\n\ntype LayerDefinition = {\n  elevationInfo: ElevationInfo;\n  drawingInfo: DrawingInfo;\n};\n\ntype BaseMap = {\n  id: string;\n  title: string;\n  baseMapLayers: BaseMapLayer[];\n  elevationLayers: ElevationLayer[];\n};\n\ntype BaseMapLayer = {\n  id: string;\n  opacity: number;\n  title: string;\n  url: string;\n  visibility: boolean;\n  layerType: string;\n};\n\ntype ElevationLayer = {\n  id: string;\n  listMode: string;\n  title: string;\n  url: string;\n  visibility: boolean;\n  layerType: string;\n};\n\ntype Ground = {\n  layers: ElevationLayer[];\n  transparency: number;\n  navigationConstraint: NavigationConstraint;\n};\n\ntype NavigationConstraint = {\n  type: string;\n};\n\ntype InitialState = {\n  environment: Enviroment;\n  viewpoint: ViewPoint;\n};\n\ntype Enviroment = {\n  lighting: Lighting;\n  atmosphereEnabled?: string;\n  starsEnabled?: string;\n};\n\ntype Lighting = {\n  datetime?: number;\n  displayUTCOffset?: number;\n};\n\ntype ViewPoint = {\n  camera: Camera;\n};\n\ntype Camera = {\n  position: CameraPosition;\n  heading: number;\n  tilt: number;\n};\n\ntype CameraPosition = {\n  spatialReference: SpatialReference;\n  x: number;\n  y: number;\n  z: number;\n};\n\n/**\n * Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/statsInfo.cmn.md\n */\nexport type StatsInfo = {\n  /** Represents the count of the value. */\n  totalValuesCount?: number;\n  /** Minimum attribute value for the entire layer. */\n  min?: number;\n  /** Maximum attribute value for the entire layer. */\n  max?: number;\n  /** Count for the entire layer. */\n  count?: number;\n  /** Sum of the attribute values over the entire layer. */\n  sum?: number;\n  /** Representing average or mean value. For example, sum/count. */\n  avg?: number;\n  /** Representing the standard deviation. */\n  stddev?: number;\n  /**\tRepresenting variance. For example, stats.stddev *stats.stddev. */\n  variance?: number;\n  /** Represents the histogram. */\n  histogram?: Histogram;\n  /** An array of most frequently used values within the point cloud scene layer. */\n  mostFrequentValues?: ValueCount[];\n};\n\n/** Spec - https://github.com/Esri/i3s-spec/blob/master/docs/1.8/histogram.cmn.md */\nexport type Histogram = {\n  /** Minimum attribute value for the entire layer. */\n  minimum: number;\n  /** Maximum attribute value for the entire layer. Maximum array size for stats.histo.counts is 256. */\n  maximum: number;\n  /** Count for the entire layer. */\n  counts: number[];\n};\n\nexport type ValueCount = {\n  /** Type of the attribute values after decompression, if applicable. Please note that string is not supported for point cloud scene layer attributes. */\n  value: number | string;\n  /** Count of the number of values. May exceed 32 bits. */\n  count: number;\n};\n"],"mappings":"AAIA,WAAYA,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AA6tBrB,WAAYC,uBAAuB,aAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAA,OAAvBA,uBAAuB;AAAA"}