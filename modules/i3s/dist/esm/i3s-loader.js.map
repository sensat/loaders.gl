{"version":3,"file":"i3s-loader.js","names":["parse","I3SContentLoader","normalizeTileData","normalizeTilesetData","COORDINATE_SYSTEM","VERSION","TILESET_REGEX","TILE_HEADER_REGEX","SLPK_HEX","POINT_CLOUD","I3SLoader","name","id","module","version","mimeTypes","parseI3S","extensions","options","i3s","token","isTileset","isTileHeader","tile","tileset","_tileOptions","_tilesetOptions","useDracoGeometry","useCompressedTextures","decodeTextures","coordinateSystem","METER_OFFSETS","colorsByAttribute","data","arguments","length","undefined","context","url","magicNumber","getMagicNumber","Error","test","parseTileset","parseTile","parseTileContent","arrayBuffer","tilesetJson","JSON","TextDecoder","decode","layerType","loader","ArrayBuffer","Uint8Array","map","value","toString","padStart","join"],"sources":["../../src/i3s-loader.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {parse} from '@loaders.gl/core';\nimport {I3SContentLoader} from './i3s-content-loader';\nimport {normalizeTileData, normalizeTilesetData} from './lib/parsers/parse-i3s';\nimport {COORDINATE_SYSTEM} from './lib/parsers/constants';\nimport {I3SParseOptions} from './types';\nimport {LoaderOptions} from './../../loader-utils/src/types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nconst TILESET_REGEX = /layers\\/[0-9]+$/;\nconst TILE_HEADER_REGEX = /nodes\\/([0-9-]+|root)$/;\nconst SLPK_HEX = '504b0304';\nconst POINT_CLOUD = 'PointCloud';\n\nexport type I3SLoaderOptions = LoaderOptions & {\n  i3s?: I3SParseOptions;\n};\n\n/**\n * Loader for I3S - Indexed 3D Scene Layer\n */\nexport const I3SLoader: LoaderWithParser = {\n  name: 'I3S (Indexed Scene Layers)',\n  id: 'i3s',\n  module: 'i3s',\n  version: VERSION,\n  mimeTypes: ['application/octet-stream'],\n  parse: parseI3S,\n  extensions: ['bin'],\n  options: {\n    i3s: {\n      token: null,\n      isTileset: 'auto',\n      isTileHeader: 'auto',\n      tile: null,\n      tileset: null,\n      _tileOptions: null,\n      _tilesetOptions: null,\n      useDracoGeometry: true,\n      useCompressedTextures: true,\n      decodeTextures: true,\n      coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n      colorsByAttribute: null\n    }\n  }\n};\n\nasync function parseI3S(data, options: I3SLoaderOptions = {}, context) {\n  const url = context.url;\n  options.i3s = options.i3s || {};\n  const magicNumber = getMagicNumber(data);\n\n  // check if file is slpk\n  if (magicNumber === SLPK_HEX) {\n    throw new Error('Files with .slpk extention currently are not supported by I3SLoader');\n  }\n\n  // auto detect file type based on url\n  let isTileset;\n  if (options.i3s.isTileset === 'auto') {\n    isTileset = TILESET_REGEX.test(url);\n  } else {\n    isTileset = options.i3s.isTileset;\n  }\n\n  let isTileHeader;\n  if (options.isTileHeader === 'auto') {\n    isTileHeader = TILE_HEADER_REGEX.test(url);\n  } else {\n    isTileHeader = options.i3s.isTileHeader;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else if (isTileHeader) {\n    data = await parseTile(data, context);\n  } else {\n    data = await parseTileContent(data, options);\n  }\n\n  return data;\n}\n\nasync function parseTileContent(arrayBuffer, options: I3SLoaderOptions) {\n  return await parse(arrayBuffer, I3SContentLoader, options);\n}\n\nasync function parseTileset(data, options: I3SLoaderOptions, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n\n  if (tilesetJson?.layerType === POINT_CLOUD) {\n    throw new Error('Point Cloud layers currently are not supported by I3SLoader');\n  }\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = I3SLoader;\n  await normalizeTilesetData(tilesetJson, options, context);\n\n  return tilesetJson;\n}\n\nasync function parseTile(data, context) {\n  data = JSON.parse(new TextDecoder().decode(data));\n  return normalizeTileData(data, context);\n}\n\nfunction getMagicNumber(data) {\n  if (data instanceof ArrayBuffer) {\n    // slice binary data (4 bytes from the beginning) and transform it to hexadecimal numeral system\n    return [...new Uint8Array(data, 0, 4)]\n      .map((value) => value.toString(16).padStart(2, '0'))\n      .join('');\n  }\n  return null;\n}\n"],"mappings":"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"}