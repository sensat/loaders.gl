{"version":3,"file":"bson-writer.js","names":["encodeBSONSync","VERSION","BSONWriter","name","id","module","version","extensions","options","bson","encode","data","encodeSync"],"sources":["../../src/bson-writer.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {Writer, WriterOptions} from '@loaders.gl/loader-utils';\nimport type {EncodeBSONOptions} from './lib/encoders/encode-bson';\nimport {encodeBSONSync} from './lib/encoders/encode-bson';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type BSONWriterOptions = WriterOptions & {\n  bson?: EncodeBSONOptions\n}\n\nexport const BSONWriter: Writer<Record<string, unknown>, never, BSONWriterOptions> = {\n  name: 'BSON',\n  id: 'bson',\n  module: 'bson',\n  version: VERSION,\n  extensions: ['bson'],\n  options: {\n    bson: {}\n  },\n  async encode(data: Record<string, unknown>, options?: WriterOptions): Promise<ArrayBuffer> {\n    return encodeBSONSync(data, {}); // options\n  },\n  encodeSync(data: Record<string, unknown>, options?: WriterOptions): ArrayBuffer {\n    return encodeBSONSync(data, {}); // options\n  }\n};\n"],"mappings":"AAIA,SAAQA,cAAc,QAAO,4BAA4B;AAIzD,MAAMC,OAAO,GAAG,sBAAkB,KAAK,WAAW,qBAAiB,QAAQ;AAM3E,OAAO,MAAMC,UAAqE,GAAG;EACnFC,IAAI,EAAE,MAAM;EACZC,EAAE,EAAE,MAAM;EACVC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAEL,OAAO;EAChBM,UAAU,EAAE,CAAC,MAAM,CAAC;EACpBC,OAAO,EAAE;IACPC,IAAI,EAAE,CAAC;EACT,CAAC;EACD,MAAMC,MAAMA,CAACC,IAA6B,EAAEH,OAAuB,EAAwB;IACzF,OAAOR,cAAc,CAACW,IAAI,EAAE,CAAC,CAAC,CAAC;EACjC,CAAC;EACDC,UAAUA,CAACD,IAA6B,EAAEH,OAAuB,EAAe;IAC9E,OAAOR,cAAc,CAACW,IAAI,EAAE,CAAC,CAAC,CAAC;EACjC;AACF,CAAC"}