{"version":3,"file":"load.js","names":["_isType","require","_normalizeLoader","_getFetchFunction","_parse","load","_x","_x2","_x3","_x4","_load","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","url","loaders","options","context","resolvedLoaders","resolvedOptions","fetch","data","wrap","_callee$","_context","prev","next","Array","isArray","isLoaderObject","undefined","getFetchFunction","sent","isBlob","parse","t0","abrupt","stop"],"sources":["../../../../src/lib/api/load.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {DataType, Loader, LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {LoaderOptionsType, LoaderReturnType} from '@loaders.gl/loader-utils';\nimport {isBlob} from '../../javascript-utils/is-type';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\nimport {getFetchFunction} from '../loader-utils/get-fetch-function';\n\nimport {parse} from './parse';\n\n/**\n * Parses `data` using a specified loader\n * Note: Load does duplicate a lot of parse.\n * it can also call fetchFile on string urls, which `parse` won't do.\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n\nexport async function load<LoaderT extends Loader>(\n  url: string | DataType,\n  loader: LoaderT,\n  options?: LoaderOptionsType<LoaderT>,\n  context?: LoaderContext\n): Promise<LoaderReturnType<LoaderT>>;\n\nexport async function load<\n  LoaderT extends Loader, // eslint-disable-line  @typescript-eslint/no-unused-vars\n  LoaderOptionsT extends LoaderOptions = LoaderOptions\n>(\n  url: string | DataType,\n  loaders: Loader[] | LoaderOptions,\n  options?: LoaderOptionsT,\n  context?: LoaderContext\n): Promise<any>;\n\n// implementation signature\nexport async function load<LoaderOptionsT extends LoaderOptions>(\n  url: string | DataType,\n  loaders?: Loader[] | LoaderOptions,\n  options?: LoaderOptionsT,\n  context?: LoaderContext\n): Promise<any> {\n  let resolvedLoaders: Loader | Loader[];\n  let resolvedOptions: LoaderOptionsT | undefined;\n\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    resolvedLoaders = [];\n    resolvedOptions = loaders as LoaderOptionsT;\n    context = undefined; // context not supported in short signature\n  } else {\n    resolvedLoaders = loaders as Loader | Loader[];\n    resolvedOptions = options;\n  }\n\n  // Select fetch function\n  const fetch = getFetchFunction(resolvedOptions);\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetch(url);\n    // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  }\n\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    // @ts-expect-error TODO - This may not work for overridden fetch functions\n    data = await fetch(url);\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  // return await parse(data, loaders as Loader[], options);\n  return Array.isArray(resolvedLoaders)\n    ? await parse(data, resolvedLoaders, resolvedOptions) // loader array overload\n    : await parse(data, resolvedLoaders, resolvedOptions); // single loader overload\n}\n"],"mappings":";;;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAEA,IAAAG,MAAA,GAAAH,OAAA;AAA8B,SA8BRI,IAAIA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,MAAA;EAAAA,KAAA,OAAAG,kBAAA,CAAAC,OAAA,EAAAC,YAAA,CAAAD,OAAA,CAAAE,IAAA,CAAnB,SAAAC,QACLC,GAAsB,EACtBC,OAAkC,EAClCC,OAAwB,EACxBC,OAAuB;IAAA,IAAAC,eAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,IAAA;IAAA,OAAAV,YAAA,CAAAD,OAAA,CAAAY,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAMvB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACb,OAAO,CAAC,IAAI,CAAC,IAAAc,+BAAc,EAACd,OAAO,CAAC,EAAE;YACvDG,eAAe,GAAG,EAAE;YACpBC,eAAe,GAAGJ,OAAyB;YAC3CE,OAAO,GAAGa,SAAS;UACrB,CAAC,MAAM;YACLZ,eAAe,GAAGH,OAA4B;YAC9CI,eAAe,GAAGH,OAAO;UAC3B;UAGMI,KAAK,GAAG,IAAAW,kCAAgB,EAACZ,eAAe,CAAC;UAG3CE,IAAI,GAAGP,GAAG;UAAA,MAEV,OAAOA,GAAG,KAAK,QAAQ;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACZN,KAAK,CAACN,GAAG,CAAC;QAAA;UAAvBO,IAAI,GAAAG,QAAA,CAAAQ,IAAA;QAAA;UAAA,KAIF,IAAAC,cAAM,EAACnB,GAAG,CAAC;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAGAN,KAAK,CAACN,GAAG,CAAC;QAAA;UAAvBO,IAAI,GAAAG,QAAA,CAAAQ,IAAA;QAAA;UAAA,KAKCL,KAAK,CAACC,OAAO,CAACV,eAAe,CAAC;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAC3B,IAAAQ,YAAK,EAACb,IAAI,EAAEH,eAAe,EAAEC,eAAe,CAAC;QAAA;UAAAK,QAAA,CAAAW,EAAA,GAAAX,QAAA,CAAAQ,IAAA;UAAAR,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAC7C,IAAAQ,YAAK,EAACb,IAAI,EAAEH,eAAe,EAAEC,eAAe,CAAC;QAAA;UAAAK,QAAA,CAAAW,EAAA,GAAAX,QAAA,CAAAQ,IAAA;QAAA;UAAA,OAAAR,QAAA,CAAAY,MAAA,WAAAZ,QAAA,CAAAW,EAAA;QAAA;QAAA;UAAA,OAAAX,QAAA,CAAAa,IAAA;MAAA;IAAA,GAAAxB,OAAA;EAAA,CACxD;EAAA,OAAAP,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"}