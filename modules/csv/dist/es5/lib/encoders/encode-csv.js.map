{"version":3,"file":"encode-csv.js","names":["_schema","require","_d3Dsv","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","encodeTableAsCSV","table","_options$csv","_table$schema","options","arguments","undefined","csv","useDisplayNames","fields","schema","columnNames","map","_f$metadata","displayName","metadata","formattedData","_iterator","makeArrayRowIterator","_step","row","formattedRow","columnIndex","getTableNumCols","preformatFieldValue","push","csvFormatRows","Date","toISOString","_typeof2","default","JSON","stringify","String"],"sources":["../../../../src/lib/encoders/encode-csv.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Copyright 2022 Foursquare Labs, Inc.\n\nimport {Table, makeArrayRowIterator, getTableNumCols} from '@loaders.gl/schema';\nimport {csvFormatRows} from 'd3-dsv';\n\ntype EncodableData = string | null;\n\nexport type CSVWriterOptions = {\n  csv?: {\n    useDisplayNames?: boolean;\n  };\n  /** @deprecated */\n  useDisplayNames?: boolean;\n};\n\n/**\n * Encode a Table object as CSV\n */\nexport function encodeTableAsCSV(\n  table: Table,\n  options: CSVWriterOptions = {csv: {useDisplayNames: true}}\n): string {\n  const useDisplayNames = options.useDisplayNames || options.csv?.useDisplayNames;\n\n  const fields = table.schema?.fields || [];\n\n  const columnNames = fields.map((f) => {\n    // This is a leaky abstraction, assuming Kepler metadata\n    const displayName = f.metadata?.displayName;\n    return useDisplayNames && typeof displayName === 'string' ? displayName : f.name;\n  });\n  const formattedData: EncodableData[][] = [columnNames];\n\n  for (const row of makeArrayRowIterator(table)) {\n    const formattedRow: EncodableData[] = [];\n    for (let columnIndex = 0; columnIndex < getTableNumCols(table); ++columnIndex) {\n      const value = row[columnIndex];\n      formattedRow[columnIndex] = preformatFieldValue(value);\n    }\n    formattedData.push(formattedRow);\n  }\n\n  return csvFormatRows(formattedData);\n}\n\n/**\n * Stringifies a value\n * @todo Why is it called parse?\n */\nconst preformatFieldValue = (value: unknown): EncodableData => {\n  if (value === null || value === undefined) {\n    // TODO: It would be nice to distinguish between missing values and the empty string\n    // https://github.com/d3/d3-dsv/issues/84\n    return null;\n  }\n  if (value instanceof Date) {\n    // d3-dsv formats dates without timezones if they don't have time info;\n    // this forces them to always use fully-qualified ISO time strings\n    return value.toISOString();\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  return String(value);\n};\n"],"mappings":"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"}