{"version":3,"file":"parse-wkb.js","names":["NUM_DIMENSIONS","parseWKB","arrayBuffer","view","DataView","offset","littleEndian","getUint8","geometryCode","getUint32","geometryType","type","dimension","point","parsePoint","geometry","line","parseLineString","polygon","parsePolygon","multiPoint","parseMultiPoint","multiLine","parseMultiLineString","multiPolygon","parseMultiPolygon","Error","concat","positions","Float64Array","i","getFloat64","value","size","nPoints","pathIndices","push","Uint16Array","cumulativeSum","sum","nRings","rings","parsed","concatenatedPositions","concatTypedArrays","buffer","polygonIndices","length","primitivePolygonIndices","map","l","unshift","binaryPointGeometries","littleEndianPoint","concatenateBinaryPointGeometries","nLines","binaryLineGeometries","littleEndianLine","concatenateBinaryLineGeometries","nPolygons","binaryPolygonGeometries","littleEndianPolygon","concatenateBinaryPolygonGeometries","lines","polygons","primitivePolygons","binaryPolygon","p","primitivePolygon","filter","x","arrays","byteLength","Uint8Array","byteOffset","data","j"],"sources":["../../../src/lib/parse-wkb.ts"],"sourcesContent":["import type {\n  TypedArray,\n  BinaryGeometry,\n  BinaryPointGeometry,\n  BinaryLineGeometry,\n  BinaryPolygonGeometry\n} from '@loaders.gl/schema';\n\nconst NUM_DIMENSIONS = {\n  0: 2, // 2D\n  1: 3, // 3D (Z)\n  2: 3, // 3D (M)\n  3: 4 // 4D (ZM)\n};\n\nexport default function parseWKB(arrayBuffer: ArrayBuffer): BinaryGeometry {\n  const view = new DataView(arrayBuffer);\n  let offset = 0;\n\n  // Check endianness of data\n  const littleEndian = view.getUint8(offset) === 1;\n  offset++;\n\n  // 4-digit code representing dimension and type of geometry\n  const geometryCode = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  const geometryType = geometryCode % 1000;\n  const type = ((geometryCode - geometryType) / 1000) as 0 | 1 | 2 | 3;\n  const dimension = NUM_DIMENSIONS[type];\n\n  switch (geometryType) {\n    case 1:\n      const point = parsePoint(view, offset, dimension, littleEndian);\n      return point.geometry;\n    case 2:\n      const line = parseLineString(view, offset, dimension, littleEndian);\n      return line.geometry;\n    case 3:\n      const polygon = parsePolygon(view, offset, dimension, littleEndian);\n      return polygon.geometry;\n    case 4:\n      const multiPoint = parseMultiPoint(view, offset, dimension, littleEndian);\n      multiPoint.type = 'Point';\n      return multiPoint;\n    case 5:\n      const multiLine = parseMultiLineString(view, offset, dimension, littleEndian);\n      multiLine.type = 'LineString';\n      return multiLine;\n    case 6:\n      const multiPolygon = parseMultiPolygon(view, offset, dimension, littleEndian);\n      multiPolygon.type = 'Polygon';\n      return multiPolygon;\n    // case 7:\n    // TODO: handle GeometryCollections\n    // return parseGeometryCollection(view, offset, dimension, littleEndian);\n    default:\n      throw new Error(`WKB: Unsupported geometry type: ${geometryType}`);\n  }\n}\n\n// Primitives; parse point and linear ring\nfunction parsePoint(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): {geometry: BinaryPointGeometry; offset: number} {\n  const positions = new Float64Array(dimension);\n  for (let i = 0; i < dimension; i++) {\n    positions[i] = view.getFloat64(offset, littleEndian);\n    offset += 8;\n  }\n\n  return {\n    geometry: {type: 'Point', positions: {value: positions, size: dimension}},\n    offset\n  };\n}\n\nfunction parseLineString(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): {geometry: BinaryLineGeometry; offset: number} {\n  const nPoints = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  // Instantiate array\n  const positions = new Float64Array(nPoints * dimension);\n  for (let i = 0; i < nPoints * dimension; i++) {\n    positions[i] = view.getFloat64(offset, littleEndian);\n    offset += 8;\n  }\n\n  const pathIndices = [0];\n  if (nPoints > 0) {\n    pathIndices.push(nPoints);\n  }\n\n  return {\n    geometry: {\n      type: 'LineString',\n      positions: {value: positions, size: dimension},\n      pathIndices: {value: new Uint16Array(pathIndices), size: 1}\n    },\n    offset\n  };\n}\n\n// https://stackoverflow.com/a/55261098\nconst cumulativeSum = (sum: number) => (value: number) => (sum += value);\n\nfunction parsePolygon(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): {geometry: BinaryPolygonGeometry; offset: number} {\n  const nRings = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  const rings: TypedArray[] = [];\n  for (let i = 0; i < nRings; i++) {\n    const parsed = parseLineString(view, offset, dimension, littleEndian);\n    const {positions} = parsed.geometry;\n    offset = parsed.offset;\n    rings.push(positions.value);\n  }\n\n  const concatenatedPositions = new Float64Array(concatTypedArrays(rings).buffer);\n  const polygonIndices = [0];\n  if (concatenatedPositions.length > 0) {\n    polygonIndices.push(concatenatedPositions.length / dimension);\n  }\n  const primitivePolygonIndices = rings.map((l) => l.length / dimension).map(cumulativeSum(0));\n  primitivePolygonIndices.unshift(0);\n\n  return {\n    geometry: {\n      type: 'Polygon',\n      positions: {value: concatenatedPositions, size: dimension},\n      polygonIndices: {\n        value: new Uint16Array(polygonIndices),\n        size: 1\n      },\n      primitivePolygonIndices: {value: new Uint16Array(primitivePolygonIndices), size: 1}\n    },\n    offset\n  };\n}\n\nfunction parseMultiPoint(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): BinaryPointGeometry {\n  const nPoints = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  const binaryPointGeometries: BinaryPointGeometry[] = [];\n  for (let i = 0; i < nPoints; i++) {\n    // Byte order for point\n    const littleEndianPoint = view.getUint8(offset) === 1;\n    offset++;\n\n    // Assert point type\n    if (view.getUint32(offset, littleEndianPoint) % 1000 !== 1) {\n      throw new Error('WKB: Inner geometries of MultiPoint not of type Point');\n    }\n\n    offset += 4;\n\n    const parsed = parsePoint(view, offset, dimension, littleEndianPoint);\n    offset = parsed.offset;\n    binaryPointGeometries.push(parsed.geometry);\n  }\n\n  return concatenateBinaryPointGeometries(binaryPointGeometries, dimension);\n}\n\nfunction parseMultiLineString(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): BinaryLineGeometry {\n  const nLines = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  const binaryLineGeometries: BinaryLineGeometry[] = [];\n  for (let i = 0; i < nLines; i++) {\n    // Byte order for line\n    const littleEndianLine = view.getUint8(offset) === 1;\n    offset++;\n\n    // Assert type LineString\n    if (view.getUint32(offset, littleEndianLine) % 1000 !== 2) {\n      throw new Error('WKB: Inner geometries of MultiLineString not of type LineString');\n    }\n    offset += 4;\n\n    const parsed = parseLineString(view, offset, dimension, littleEndianLine);\n    offset = parsed.offset;\n    binaryLineGeometries.push(parsed.geometry);\n  }\n\n  return concatenateBinaryLineGeometries(binaryLineGeometries, dimension);\n}\n\nfunction parseMultiPolygon(\n  view: DataView,\n  offset: number,\n  dimension: number,\n  littleEndian: boolean\n): BinaryPolygonGeometry {\n  const nPolygons = view.getUint32(offset, littleEndian);\n  offset += 4;\n\n  const binaryPolygonGeometries: BinaryPolygonGeometry[] = [];\n  for (let i = 0; i < nPolygons; i++) {\n    // Byte order for polygon\n    const littleEndianPolygon = view.getUint8(offset) === 1;\n    offset++;\n\n    // Assert type Polygon\n    if (view.getUint32(offset, littleEndianPolygon) % 1000 !== 3) {\n      throw new Error('WKB: Inner geometries of MultiPolygon not of type Polygon');\n    }\n    offset += 4;\n\n    const parsed = parsePolygon(view, offset, dimension, littleEndianPolygon);\n    offset = parsed.offset;\n    binaryPolygonGeometries.push(parsed.geometry);\n  }\n\n  return concatenateBinaryPolygonGeometries(binaryPolygonGeometries, dimension);\n}\n\n// TODO - move to loaders.gl/schema/gis\n\nfunction concatenateBinaryPointGeometries(\n  binaryPointGeometries: BinaryPointGeometry[],\n  dimension: number\n): BinaryPointGeometry {\n  const positions: TypedArray[] = binaryPointGeometries.map((geometry) => geometry.positions.value);\n  const concatenatedPositions = new Float64Array(concatTypedArrays(positions).buffer);\n\n  return {\n    type: 'Point',\n    positions: {value: concatenatedPositions, size: dimension}\n  };\n}\n\nfunction concatenateBinaryLineGeometries(\n  binaryLineGeometries: BinaryLineGeometry[],\n  dimension: number\n): BinaryLineGeometry {\n  const lines: TypedArray[] = binaryLineGeometries.map((geometry) => geometry.positions.value);\n  const concatenatedPositions = new Float64Array(concatTypedArrays(lines).buffer);\n  const pathIndices = lines.map((line) => line.length / dimension).map(cumulativeSum(0));\n  pathIndices.unshift(0);\n\n  return {\n    type: 'LineString',\n    positions: {value: concatenatedPositions, size: dimension},\n    pathIndices: {value: new Uint16Array(pathIndices), size: 1}\n  };\n}\n\nfunction concatenateBinaryPolygonGeometries(\n  binaryPolygonGeometries: BinaryPolygonGeometry[],\n  dimension: number\n): BinaryPolygonGeometry {\n  const polygons: TypedArray[] = [];\n  const primitivePolygons: TypedArray[] = [];\n\n  for (const binaryPolygon of binaryPolygonGeometries) {\n    const {positions, primitivePolygonIndices} = binaryPolygon;\n    polygons.push(positions.value);\n    primitivePolygons.push(primitivePolygonIndices.value);\n  }\n\n  const concatenatedPositions = new Float64Array(concatTypedArrays(polygons).buffer);\n  const polygonIndices = polygons.map((p) => p.length / dimension).map(cumulativeSum(0));\n  polygonIndices.unshift(0);\n\n  // Combine primitivePolygonIndices from each individual polygon\n  const primitivePolygonIndices = [0];\n  for (const primitivePolygon of primitivePolygons) {\n    primitivePolygonIndices.push(\n      ...primitivePolygon\n        .filter((x: number) => x > 0)\n        .map((x: number) => x + primitivePolygonIndices[primitivePolygonIndices.length - 1])\n    );\n  }\n\n  return {\n    type: 'Polygon',\n    positions: {value: concatenatedPositions, size: dimension},\n    polygonIndices: {value: new Uint16Array(polygonIndices), size: 1},\n    primitivePolygonIndices: {value: new Uint16Array(primitivePolygonIndices), size: 1}\n  };\n}\n\n// TODO: remove copy; import from typed-array-utils\n// modules/math/src/geometry/typed-arrays/typed-array-utils.js\nfunction concatTypedArrays(arrays: TypedArray[]): TypedArray {\n  let byteLength = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n  const buffer = new Uint8Array(byteLength);\n\n  let byteOffset = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n  return buffer;\n}\n"],"mappings":"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"}