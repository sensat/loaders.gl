{"version":3,"file":"binary-writer.js","names":["LE","BE","BinaryWriter","size","allowResize","_classCallCheck2","default","_defineProperty2","arrayBuffer","ArrayBuffer","dataView","DataView","byteOffset","_createClass2","key","value","writeUInt8","_ensureSize","setUint8","writeUInt16LE","setUint16","writeUInt16BE","writeUInt32LE","setUint32","writeUInt32BE","writeInt8","setInt8","writeInt16LE","setInt16","writeInt16BE","writeInt32LE","setInt32","writeInt32BE","writeFloatLE","setFloat32","writeFloatBE","writeDoubleLE","setFloat64","writeDoubleBE","writeVarInt","length","writeBuffer","byteLength","tempArray","Uint8Array","set","newArrayBuffer","Error","exports"],"sources":["../../../../src/lib/utils/binary-writer.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Forked from https://github.com/cschwarz/wkx under MIT license, Copyright (c) 2013 Christian Schwarz\n\nconst LE = true;\nconst BE = false;\n\nexport default class BinaryWriter {\n  arrayBuffer: ArrayBuffer;\n  dataView: DataView;\n  byteOffset: number = 0;\n  allowResize: boolean = false;\n\n  constructor(size: number, allowResize?: boolean) {\n    this.arrayBuffer = new ArrayBuffer(size);\n    this.dataView = new DataView(this.arrayBuffer);\n    this.byteOffset = 0;\n    this.allowResize = allowResize || false;\n  }\n\n  writeUInt8(value: number): void {\n    this._ensureSize(1);\n    this.dataView.setUint8(this.byteOffset, value);\n    this.byteOffset += 1;\n  }\n  writeUInt16LE(value: number): void {\n    this._ensureSize(2);\n    this.dataView.setUint16(this.byteOffset, value, LE);\n    this.byteOffset += 2;\n  }\n  writeUInt16BE(value: number): void {\n    this._ensureSize(2);\n    this.dataView.setUint16(this.byteOffset, value, BE);\n    this.byteOffset += 2;\n  }\n  writeUInt32LE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setUint32(this.byteOffset, value, LE);\n    this.byteOffset += 4;\n  }\n  writeUInt32BE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setUint32(this.byteOffset, value, BE);\n    this.byteOffset += 4;\n  }\n  writeInt8(value: number): void {\n    this._ensureSize(1);\n    this.dataView.setInt8(this.byteOffset, value);\n    this.byteOffset += 1;\n  }\n  writeInt16LE(value: number): void {\n    this._ensureSize(2);\n    this.dataView.setInt16(this.byteOffset, value, LE);\n    this.byteOffset += 2;\n  }\n  writeInt16BE(value: number): void {\n    this._ensureSize(2);\n    this.dataView.setInt16(this.byteOffset, value, BE);\n    this.byteOffset += 2;\n  }\n  writeInt32LE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setInt32(this.byteOffset, value, LE);\n    this.byteOffset += 4;\n  }\n  writeInt32BE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setInt32(this.byteOffset, value, BE);\n    this.byteOffset += 4;\n  }\n  writeFloatLE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setFloat32(this.byteOffset, value, LE);\n    this.byteOffset += 4;\n  }\n  writeFloatBE(value: number): void {\n    this._ensureSize(4);\n    this.dataView.setFloat32(this.byteOffset, value, BE);\n    this.byteOffset += 4;\n  }\n  writeDoubleLE(value: number): void {\n    this._ensureSize(8);\n    this.dataView.setFloat64(this.byteOffset, value, LE);\n    this.byteOffset += 8;\n  }\n  writeDoubleBE(value: number): void {\n    this._ensureSize(8);\n    this.dataView.setFloat64(this.byteOffset, value, BE);\n    this.byteOffset += 8;\n  }\n\n  /** A varint uses a variable number of bytes */\n  writeVarInt(value: number): number {\n    // TODO - ensure size?\n    let length = 1;\n    while ((value & 0xffffff80) !== 0) {\n      this.writeUInt8((value & 0x7f) | 0x80);\n      value >>>= 7;\n      length++;\n    }\n    this.writeUInt8(value & 0x7f);\n    return length;\n  }\n\n  /** Append another ArrayBuffer to this ArrayBuffer */\n  writeBuffer(arrayBuffer: ArrayBuffer): void {\n    this._ensureSize(arrayBuffer.byteLength);\n    const tempArray = new Uint8Array(this.arrayBuffer);\n    tempArray.set(new Uint8Array(arrayBuffer), this.byteOffset);\n    this.byteOffset += arrayBuffer.byteLength;\n  }\n\n  /** Resizes this.arrayBuffer if not enough space */\n  _ensureSize(size: number) {\n    if (this.arrayBuffer.byteLength < this.byteOffset + size) {\n      if (this.allowResize) {\n        const newArrayBuffer = new ArrayBuffer(this.byteOffset + size);\n        const tempArray = new Uint8Array(newArrayBuffer);\n        tempArray.set(new Uint8Array(this.arrayBuffer));\n        this.arrayBuffer = newArrayBuffer;\n      } else {\n        throw new Error('BinaryWriter overflow');\n      }\n    }\n  }\n}\n"],"mappings":"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"}