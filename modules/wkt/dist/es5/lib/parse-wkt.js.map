{"version":3,"file":"parse-wkt.js","names":["numberRegexp","tuples","RegExp","source","parseWKT","input","parts","split","_","pop","srid","shift","i","$","re","match","substring","length","crs","obj","type","properties","name","white","multicoords","depth","rings","stack","pointer","elem","push","some","isNaN","Array","prototype","apply","map","parseFloat","coords","list","item","pt","point","c","coordinates","multipoint","newCoordsFormat","indexOf","replace","multilinestring","linestring","polygon","multipolygon","geometrycollection","geometries","geometry","root"],"sources":["../../../src/lib/parse-wkt.ts"],"sourcesContent":["// Fork of https://github.com/mapbox/wellknown under ISC license (MIT/BSD-2-clause equivalent)\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst numberRegexp = /[-+]?([0-9]*\\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/;\n// Matches sequences like '100 100' or '100 100 100'.\nconst tuples = new RegExp('^' + numberRegexp.source + '(\\\\s' + numberRegexp.source + '){1,}');\n\n/**\n * Parse WKT and return GeoJSON.\n *\n * @param {string} _ A WKT geometry\n * @return {?Object} A GeoJSON geometry object\n **/\nexport default function parseWKT(input) {\n  const parts = input.split(';');\n  let _ = parts.pop();\n  const srid = (parts.shift() || '').split('=').pop();\n\n  let i = 0;\n\n  function $(re) {\n    const match = _.substring(i).match(re);\n    if (!match) return null;\n    else {\n      i += match[0].length;\n      return match[0];\n    }\n  }\n\n  function crs(obj) {\n    if (obj && srid.match(/\\d+/)) {\n      obj.crs = {\n        type: 'name',\n        properties: {\n          name: 'urn:ogc:def:crs:EPSG::' + srid\n        }\n      };\n    }\n\n    return obj;\n  }\n\n  function white() {\n    $(/^\\s*/);\n  }\n\n  function multicoords() {\n    white();\n    let depth = 0;\n    const rings = [];\n    const stack = [rings];\n    let pointer = rings;\n    let elem;\n\n    while ((elem = $(/^(\\()/) || $(/^(\\))/) || $(/^(,)/) || $(tuples))) {\n      if (elem === '(') {\n        stack.push(pointer);\n        pointer = [];\n        stack[stack.length - 1].push(pointer);\n        depth++;\n      } else if (elem === ')') {\n        // For the case: Polygon(), ...\n        if (pointer.length === 0) return null;\n\n        // @ts-ignore\n        pointer = stack.pop();\n        // the stack was empty, input was malformed\n        if (!pointer) return null;\n        depth--;\n        if (depth === 0) break;\n      } else if (elem === ',') {\n        pointer = [];\n        stack[stack.length - 1].push(pointer);\n      } else if (!elem.split(/\\s/g).some(isNaN)) {\n        Array.prototype.push.apply(pointer, elem.split(/\\s/g).map(parseFloat));\n      } else {\n        return null;\n      }\n      white();\n    }\n\n    if (depth !== 0) return null;\n\n    return rings;\n  }\n\n  function coords() {\n    const list = [];\n    let item;\n    let pt;\n    while ((pt = $(tuples) || $(/^(,)/))) {\n      if (pt === ',') {\n        list.push(item);\n        item = [];\n      } else if (!pt.split(/\\s/g).some(isNaN)) {\n        if (!item) item = [];\n        Array.prototype.push.apply(item, pt.split(/\\s/g).map(parseFloat));\n      }\n      white();\n    }\n\n    if (item) list.push(item);\n    else return null;\n\n    return list.length ? list : null;\n  }\n\n  function point() {\n    if (!$(/^(point(\\sz)?)/i)) return null;\n    white();\n    if (!$(/^(\\()/)) return null;\n    const c = coords();\n    if (!c) return null;\n    white();\n    if (!$(/^(\\))/)) return null;\n    return {\n      type: 'Point',\n      coordinates: c[0]\n    };\n  }\n\n  function multipoint() {\n    if (!$(/^(multipoint)/i)) return null;\n    white();\n    const newCoordsFormat = _.substring(_.indexOf('(') + 1, _.length - 1)\n      .replace(/\\(/g, '')\n      .replace(/\\)/g, '');\n    _ = 'MULTIPOINT (' + newCoordsFormat + ')';\n    const c = multicoords();\n    if (!c) return null;\n    white();\n    return {\n      type: 'MultiPoint',\n      coordinates: c\n    };\n  }\n\n  function multilinestring() {\n    if (!$(/^(multilinestring)/i)) return null;\n    white();\n    const c = multicoords();\n    if (!c) return null;\n    white();\n    return {\n      type: 'MultiLineString',\n      coordinates: c\n    };\n  }\n\n  function linestring() {\n    if (!$(/^(linestring(\\sz)?)/i)) return null;\n    white();\n    if (!$(/^(\\()/)) return null;\n    const c = coords();\n    if (!c) return null;\n    if (!$(/^(\\))/)) return null;\n    return {\n      type: 'LineString',\n      coordinates: c\n    };\n  }\n\n  function polygon() {\n    if (!$(/^(polygon(\\sz)?)/i)) return null;\n    white();\n    const c = multicoords();\n    if (!c) return null;\n    return {\n      type: 'Polygon',\n      coordinates: c\n    };\n  }\n\n  function multipolygon() {\n    if (!$(/^(multipolygon)/i)) return null;\n    white();\n    const c = multicoords();\n    if (!c) return null;\n    return {\n      type: 'MultiPolygon',\n      coordinates: c\n    };\n  }\n\n  function geometrycollection() {\n    const geometries = [];\n    let geometry;\n\n    if (!$(/^(geometrycollection)/i)) return null;\n    white();\n\n    if (!$(/^(\\()/)) return null;\n    while ((geometry = root())) {\n      geometries.push(geometry);\n      white();\n      $(/^(,)/);\n      white();\n    }\n    if (!$(/^(\\))/)) return null;\n\n    return {\n      type: 'GeometryCollection',\n      geometries: geometries\n    };\n  }\n\n  function root() {\n    return (\n      point() ||\n      linestring() ||\n      polygon() ||\n      multipoint() ||\n      multilinestring() ||\n      multipolygon() ||\n      geometrycollection()\n    );\n  }\n\n  return crs(root());\n}\n"],"mappings":"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"}