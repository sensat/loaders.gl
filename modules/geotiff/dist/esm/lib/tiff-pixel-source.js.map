{"version":3,"file":"tiff-pixel-source.js","names":["getImageSize","isInterleaved","SIGNAL_ABORTED","TiffPixelSource","constructor","indexer","dtype","tileSize","shape","labels","meta","_defineProperty","_indexer","getRaster","_ref","selection","signal","image","_readRasters","getTile","_ref2","x","y","height","width","_getTileExtent","x0","y0","window","props","_props$signal","interleave","raster","readRasters","aborted","data","zoomLevelHeight","zoomLevelWidth","maxXTileCoord","Math","floor","maxYTileCoord","onTileError","err","console","error"],"sources":["../../../src/lib/tiff-pixel-source.ts"],"sourcesContent":["import type {GeoTIFFImage, RasterOptions} from 'geotiff';\nimport {getImageSize, isInterleaved, SIGNAL_ABORTED} from './utils/tiff-utils';\n\nimport type {\n  PixelSource,\n  PixelSourceSelection,\n  PixelSourceMeta,\n  Dtype,\n  Labels,\n  RasterSelection,\n  TileSelection,\n  PixelData,\n  TypedArray\n} from '../types';\n\nclass TiffPixelSource<S extends string[]> implements PixelSource<S> {\n  public dtype: Dtype;\n  public tileSize: number;\n  public shape: number[];\n  public labels: Labels<S>;\n  public meta: PixelSourceMeta | undefined;\n  private _indexer: (sel: PixelSourceSelection<S>) => Promise<GeoTIFFImage>;\n\n  // eslint-disable-next-line max-params\n  constructor(\n    indexer: (sel: PixelSourceSelection<S>) => Promise<GeoTIFFImage>,\n    dtype: Dtype,\n    tileSize: number,\n    shape: number[],\n    labels: Labels<S>,\n    meta?: PixelSourceMeta\n  ) {\n    this._indexer = indexer;\n    this.dtype = dtype;\n    this.tileSize = tileSize;\n    this.shape = shape;\n    this.labels = labels;\n    this.meta = meta;\n  }\n\n  async getRaster({selection, signal}: RasterSelection<S>) {\n    const image = await this._indexer(selection);\n    return this._readRasters(image, {signal});\n  }\n\n  async getTile({x, y, selection, signal}: TileSelection<S>) {\n    const {height, width} = this._getTileExtent(x, y);\n    const x0 = x * this.tileSize;\n    const y0 = y * this.tileSize;\n    const window = [x0, y0, x0 + width, y0 + height];\n\n    const image = await this._indexer(selection);\n    return this._readRasters(image, {window, width, height, signal});\n  }\n\n  private async _readRasters(image: GeoTIFFImage, props?: RasterOptions) {\n    const interleave = isInterleaved(this.shape);\n    const raster = await image.readRasters({interleave, ...props});\n\n    if (props?.signal?.aborted) {\n      throw SIGNAL_ABORTED;\n    }\n\n    /*\n     * geotiff.js returns objects with different structure\n     * depending on `interleave`. It's weird, but this seems to work.\n     */\n    const data = (interleave ? raster : raster[0]) as TypedArray;\n    return {\n      data,\n      width: raster.width,\n      height: raster.height\n    } as PixelData;\n  }\n\n  /*\n   * Computes tile size given x, y coord.\n   */\n  private _getTileExtent(x: number, y: number) {\n    const {height: zoomLevelHeight, width: zoomLevelWidth} = getImageSize(this);\n    let height = this.tileSize;\n    let width = this.tileSize;\n    const maxXTileCoord = Math.floor(zoomLevelWidth / this.tileSize);\n    const maxYTileCoord = Math.floor(zoomLevelHeight / this.tileSize);\n    if (x === maxXTileCoord) {\n      width = zoomLevelWidth % this.tileSize;\n    }\n    if (y === maxYTileCoord) {\n      height = zoomLevelHeight % this.tileSize;\n    }\n    return {height, width};\n  }\n\n  onTileError(err: Error) {\n    console.error(err); // eslint-disable-line no-console\n  }\n}\n\nexport default TiffPixelSource;\n"],"mappings":"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"}