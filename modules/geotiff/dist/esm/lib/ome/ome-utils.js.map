{"version":3,"file":"ome-utils.js","names":["getDims","getLabels","DTYPE_LOOKUP","uint8","uint16","uint32","float","double","int8","int16","int32","getOmePixelSourceMeta","_ref","Pixels","labels","DimensionOrder","dims","shape","Array","length","fill","SizeT","SizeC","SizeZ","Interleaved","push","getShape","level","s","SizeX","SizeY","Type","Error","concat","dtype","PhysicalSizeX","PhysicalSizeY","physicalSizes","x","size","unit","PhysicalSizeXUnit","y","PhysicalSizeYUnit","PhysicalSizeZ","z","PhysicalSizeZUnit"],"sources":["../../../../src/lib/ome/ome-utils.ts"],"sourcesContent":["import {getDims, getLabels} from './utils';\nimport type {OMEXML, UnitsLength} from './omexml';\n\nexport const DTYPE_LOOKUP = {\n  uint8: 'Uint8',\n  uint16: 'Uint16',\n  uint32: 'Uint32',\n  float: 'Float32',\n  double: 'Float64',\n  int8: 'Int8',\n  int16: 'Int16',\n  int32: 'Int32'\n} as const;\n\nexport function getOmePixelSourceMeta({Pixels}: OMEXML[0]) {\n  // e.g. 'XYZCT' -> ['t', 'c', 'z', 'y', 'x']\n  const labels = getLabels(Pixels.DimensionOrder);\n\n  // Compute \"shape\" of image\n  const dims = getDims(labels);\n  const shape: number[] = Array(labels.length).fill(0);\n  shape[dims('t')] = Pixels.SizeT;\n  shape[dims('c')] = Pixels.SizeC;\n  shape[dims('z')] = Pixels.SizeZ;\n\n  // Push extra dimension if data are interleaved.\n  if (Pixels.Interleaved) {\n    // @ts-ignore\n    labels.push('_c');\n    shape.push(3);\n  }\n\n  // Creates a new shape for different level of pyramid.\n  // Assumes factor-of-two downsampling.\n  const getShape = (level: number) => {\n    const s = [...shape];\n    s[dims('x')] = Pixels.SizeX >> level;\n    s[dims('y')] = Pixels.SizeY >> level;\n    return s;\n  };\n\n  if (!(Pixels.Type in DTYPE_LOOKUP)) {\n    throw Error(`Pixel type ${Pixels.Type} not supported.`);\n  }\n\n  const dtype = DTYPE_LOOKUP[Pixels.Type as keyof typeof DTYPE_LOOKUP];\n  if (Pixels.PhysicalSizeX && Pixels.PhysicalSizeY) {\n    const physicalSizes: {\n      [k: string]: {size: number; unit: UnitsLength};\n    } = {\n      x: {\n        size: Pixels.PhysicalSizeX,\n        unit: Pixels.PhysicalSizeXUnit\n      },\n      y: {\n        size: Pixels.PhysicalSizeY,\n        unit: Pixels.PhysicalSizeYUnit\n      }\n    };\n    if (Pixels.PhysicalSizeZ) {\n      physicalSizes.z = {\n        size: Pixels.PhysicalSizeZ,\n        unit: Pixels.PhysicalSizeZUnit\n      };\n    }\n    return {labels, getShape, physicalSizes, dtype};\n  }\n\n  return {labels, getShape, dtype};\n}\n"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,SAAS,QAAO,SAAS;AAG1C,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE;AACT,CAAU;AAEV,OAAO,SAASC,qBAAqBA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAACC;EAAiB,CAAC,GAAAD,IAAA;EAEvD,MAAME,MAAM,GAAGb,SAAS,CAACY,MAAM,CAACE,cAAc,CAAC;EAG/C,MAAMC,IAAI,GAAGhB,OAAO,CAACc,MAAM,CAAC;EAC5B,MAAMG,KAAe,GAAGC,KAAK,CAACJ,MAAM,CAACK,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACpDH,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACQ,KAAK;EAC/BJ,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACS,KAAK;EAC/BL,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACU,KAAK;EAG/B,IAAIV,MAAM,CAACW,WAAW,EAAE;IAEtBV,MAAM,CAACW,IAAI,CAAC,IAAI,CAAC;IACjBR,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC;EACf;EAIA,MAAMC,QAAQ,GAAIC,KAAa,IAAK;IAClC,MAAMC,CAAC,GAAG,CAAC,GAAGX,KAAK,CAAC;IACpBW,CAAC,CAACZ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACgB,KAAK,IAAIF,KAAK;IACpCC,CAAC,CAACZ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACiB,KAAK,IAAIH,KAAK;IACpC,OAAOC,CAAC;EACV,CAAC;EAED,IAAI,EAAEf,MAAM,CAACkB,IAAI,IAAI7B,YAAY,CAAC,EAAE;IAClC,MAAM8B,KAAK,eAAAC,MAAA,CAAepB,MAAM,CAACkB,IAAI,oBAAiB,CAAC;EACzD;EAEA,MAAMG,KAAK,GAAGhC,YAAY,CAACW,MAAM,CAACkB,IAAI,CAA8B;EACpE,IAAIlB,MAAM,CAACsB,aAAa,IAAItB,MAAM,CAACuB,aAAa,EAAE;IAChD,MAAMC,aAEL,GAAG;MACFC,CAAC,EAAE;QACDC,IAAI,EAAE1B,MAAM,CAACsB,aAAa;QAC1BK,IAAI,EAAE3B,MAAM,CAAC4B;MACf,CAAC;MACDC,CAAC,EAAE;QACDH,IAAI,EAAE1B,MAAM,CAACuB,aAAa;QAC1BI,IAAI,EAAE3B,MAAM,CAAC8B;MACf;IACF,CAAC;IACD,IAAI9B,MAAM,CAAC+B,aAAa,EAAE;MACxBP,aAAa,CAACQ,CAAC,GAAG;QAChBN,IAAI,EAAE1B,MAAM,CAAC+B,aAAa;QAC1BJ,IAAI,EAAE3B,MAAM,CAACiC;MACf,CAAC;IACH;IACA,OAAO;MAAChC,MAAM;MAAEY,QAAQ;MAAEW,aAAa;MAAEH;IAAK,CAAC;EACjD;EAEA,OAAO;IAACpB,MAAM;IAAEY,QAAQ;IAAEQ;EAAK,CAAC;AAClC"}