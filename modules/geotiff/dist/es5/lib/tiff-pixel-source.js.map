{"version":3,"file":"tiff-pixel-source.js","names":["_tiffUtils","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","TiffPixelSource","indexer","dtype","tileSize","shape","labels","meta","_classCallCheck2","_indexer","_createClass2","value","_getRaster","_asyncToGenerator2","_regenerator","mark","_callee","_ref","selection","signal","image","wrap","_callee$","_context","prev","next","sent","abrupt","_readRasters","stop","getRaster","_x","_getTile","_callee2","_ref2","x","y","_this$_getTileExtent","height","width","x0","y0","window","_callee2$","_context2","_getTileExtent","getTile","_x2","_readRasters2","_callee3","props","_props$signal","interleave","raster","data","_callee3$","_context3","isInterleaved","readRasters","aborted","SIGNAL_ABORTED","_x3","_x4","_getImageSize","getImageSize","zoomLevelHeight","zoomLevelWidth","maxXTileCoord","Math","floor","maxYTileCoord","onTileError","err","console","error","_default","exports"],"sources":["../../../src/lib/tiff-pixel-source.ts"],"sourcesContent":["import type {GeoTIFFImage, RasterOptions} from 'geotiff';\nimport {getImageSize, isInterleaved, SIGNAL_ABORTED} from './utils/tiff-utils';\n\nimport type {\n  PixelSource,\n  PixelSourceSelection,\n  PixelSourceMeta,\n  Dtype,\n  Labels,\n  RasterSelection,\n  TileSelection,\n  PixelData,\n  TypedArray\n} from '../types';\n\nclass TiffPixelSource<S extends string[]> implements PixelSource<S> {\n  public dtype: Dtype;\n  public tileSize: number;\n  public shape: number[];\n  public labels: Labels<S>;\n  public meta: PixelSourceMeta | undefined;\n  private _indexer: (sel: PixelSourceSelection<S>) => Promise<GeoTIFFImage>;\n\n  // eslint-disable-next-line max-params\n  constructor(\n    indexer: (sel: PixelSourceSelection<S>) => Promise<GeoTIFFImage>,\n    dtype: Dtype,\n    tileSize: number,\n    shape: number[],\n    labels: Labels<S>,\n    meta?: PixelSourceMeta\n  ) {\n    this._indexer = indexer;\n    this.dtype = dtype;\n    this.tileSize = tileSize;\n    this.shape = shape;\n    this.labels = labels;\n    this.meta = meta;\n  }\n\n  async getRaster({selection, signal}: RasterSelection<S>) {\n    const image = await this._indexer(selection);\n    return this._readRasters(image, {signal});\n  }\n\n  async getTile({x, y, selection, signal}: TileSelection<S>) {\n    const {height, width} = this._getTileExtent(x, y);\n    const x0 = x * this.tileSize;\n    const y0 = y * this.tileSize;\n    const window = [x0, y0, x0 + width, y0 + height];\n\n    const image = await this._indexer(selection);\n    return this._readRasters(image, {window, width, height, signal});\n  }\n\n  private async _readRasters(image: GeoTIFFImage, props?: RasterOptions) {\n    const interleave = isInterleaved(this.shape);\n    const raster = await image.readRasters({interleave, ...props});\n\n    if (props?.signal?.aborted) {\n      throw SIGNAL_ABORTED;\n    }\n\n    /*\n     * geotiff.js returns objects with different structure\n     * depending on `interleave`. It's weird, but this seems to work.\n     */\n    const data = (interleave ? raster : raster[0]) as TypedArray;\n    return {\n      data,\n      width: raster.width,\n      height: raster.height\n    } as PixelData;\n  }\n\n  /*\n   * Computes tile size given x, y coord.\n   */\n  private _getTileExtent(x: number, y: number) {\n    const {height: zoomLevelHeight, width: zoomLevelWidth} = getImageSize(this);\n    let height = this.tileSize;\n    let width = this.tileSize;\n    const maxXTileCoord = Math.floor(zoomLevelWidth / this.tileSize);\n    const maxYTileCoord = Math.floor(zoomLevelHeight / this.tileSize);\n    if (x === maxXTileCoord) {\n      width = zoomLevelWidth % this.tileSize;\n    }\n    if (y === maxYTileCoord) {\n      height = zoomLevelHeight % this.tileSize;\n    }\n    return {height, width};\n  }\n\n  onTileError(err: Error) {\n    console.error(err); // eslint-disable-line no-console\n  }\n}\n\nexport default TiffPixelSource;\n"],"mappings":"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"}