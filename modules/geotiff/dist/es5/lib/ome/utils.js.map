{"version":3,"file":"utils.js","names":["getLabels","dimOrder","toLowerCase","split","reverse","getDims","labels","lookup","Map","map","name","i","size","length","Error","index","get","undefined"],"sources":["../../../../src/lib/ome/utils.ts"],"sourcesContent":["import type {OMEXML} from '../ome/omexml';\nimport type {Labels} from '../../types';\n\n/*\n * Creates typed labels from DimensionOrder.\n * > imgMeta.Pixels.DimensionOrder === 'XYCZT'\n * > getLabels(imgMeta.Pixels) === ['t', 'z', 'c', 'y', 'x']\n */\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype Sel<Dim extends string> = Dim extends `${infer Z}${infer X}${infer A}${infer B}${infer C}`\n  ? [C, B, A]\n  : 'error';\nexport function getLabels(dimOrder: OMEXML[0]['Pixels']['DimensionOrder']) {\n  return dimOrder.toLowerCase().split('').reverse() as Labels<Sel<Lowercase<typeof dimOrder>>>;\n}\n\n/*\n * Creates an ES6 map of 'label' -> index\n * > const labels = ['a', 'b', 'c', 'd'];\n * > const dims = getDims(labels);\n * > dims('a') === 0;\n * > dims('b') === 1;\n * > dims('c') === 2;\n * > dims('hi!'); // throws\n */\nexport function getDims<S extends string>(labels: S[]) {\n  const lookup = new Map(labels.map((name, i) => [name, i]));\n  if (lookup.size !== labels.length) {\n    throw Error('Labels must be unique, found duplicated label.');\n  }\n  return (name: S) => {\n    const index = lookup.get(name);\n    if (index === undefined) {\n      throw Error('Invalid dimension.');\n    }\n    return index;\n  };\n}\n"],"mappings":";;;;;;;AAaO,SAASA,SAASA,CAACC,QAA+C,EAAE;EACzE,OAAOA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC;AACnD;AAWO,SAASC,OAAOA,CAAmBC,MAAW,EAAE;EACrD,IAAMC,MAAM,GAAG,IAAIC,GAAG,CAACF,MAAM,CAACG,GAAG,CAAC,UAACC,IAAI,EAAEC,CAAC;IAAA,OAAK,CAACD,IAAI,EAAEC,CAAC,CAAC;EAAA,EAAC,CAAC;EAC1D,IAAIJ,MAAM,CAACK,IAAI,KAAKN,MAAM,CAACO,MAAM,EAAE;IACjC,MAAMC,KAAK,CAAC,gDAAgD,CAAC;EAC/D;EACA,OAAO,UAACJ,IAAO,EAAK;IAClB,IAAMK,KAAK,GAAGR,MAAM,CAACS,GAAG,CAACN,IAAI,CAAC;IAC9B,IAAIK,KAAK,KAAKE,SAAS,EAAE;MACvB,MAAMH,KAAK,CAAC,oBAAoB,CAAC;IACnC;IACA,OAAOC,KAAK;EACd,CAAC;AACH"}