{"version":3,"file":"tiff-utils.js","names":["ensureArray","x","Array","isArray","intToRgba","int","Number","isInteger","Error","buffer","ArrayBuffer","view","DataView","setInt32","bytes","Uint8Array","from","isInterleaved","shape","lastDimSize","length","getImageSize","source","interleaved","_source$shape$slice","slice","_source$shape$slice2","_slicedToArray2","default","height","width","SIGNAL_ABORTED","exports"],"sources":["../../../../src/lib/utils/tiff-utils.ts"],"sourcesContent":["import type {PixelSource} from '../../types';\n\nexport function ensureArray<T>(x: T | T[]) {\n  return Array.isArray(x) ? x : [x];\n}\n\n/*\n * Converts 32-bit integer color representation to RGBA tuple.\n * Used to serialize colors from OME-XML metadata.\n *\n * > console.log(intToRgba(100100));\n * > // [0, 1, 135, 4]\n */\nexport function intToRgba(int: number) {\n  if (!Number.isInteger(int)) {\n    throw Error('Not an integer.');\n  }\n\n  // Write number to int32 representation (4 bytes).\n  const buffer = new ArrayBuffer(4);\n  const view = new DataView(buffer);\n  view.setInt32(0, int, false); // offset === 0, littleEndian === false\n\n  // Take u8 view and extract number for each byte (1 byte for R/G/B/A).\n  const bytes = new Uint8Array(buffer);\n  return Array.from(bytes) as [number, number, number, number];\n}\n\n/*\n * Helper method to determine whether pixel data is interleaved or not.\n * > isInterleaved([1, 24, 24]) === false;\n * > isInterleaved([1, 24, 24, 3]) === true;\n */\nexport function isInterleaved(shape: number[]) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\n\nexport function getImageSize<T extends string[]>(source: PixelSource<T>) {\n  const interleaved = isInterleaved(source.shape);\n  const [height, width] = source.shape.slice(interleaved ? -3 : -2);\n  return {height, width};\n}\n\nexport const SIGNAL_ABORTED = '__vivSignalAborted';\n"],"mappings":";;;;;;;;;;;;AAEO,SAASA,WAAWA,CAAIC,CAAU,EAAE;EACzC,OAAOC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,GAAGA,CAAC,GAAG,CAACA,CAAC,CAAC;AACnC;AASO,SAASG,SAASA,CAACC,GAAW,EAAE;EACrC,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,GAAG,CAAC,EAAE;IAC1B,MAAMG,KAAK,CAAC,iBAAiB,CAAC;EAChC;EAGA,IAAMC,MAAM,GAAG,IAAIC,WAAW,CAAC,CAAC,CAAC;EACjC,IAAMC,IAAI,GAAG,IAAIC,QAAQ,CAACH,MAAM,CAAC;EACjCE,IAAI,CAACE,QAAQ,CAAC,CAAC,EAAER,GAAG,EAAE,KAAK,CAAC;EAG5B,IAAMS,KAAK,GAAG,IAAIC,UAAU,CAACN,MAAM,CAAC;EACpC,OAAOP,KAAK,CAACc,IAAI,CAACF,KAAK,CAAC;AAC1B;AAOO,SAASG,aAAaA,CAACC,KAAe,EAAE;EAC7C,IAAMC,WAAW,GAAGD,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAC3C,OAAOD,WAAW,KAAK,CAAC,IAAIA,WAAW,KAAK,CAAC;AAC/C;AAEO,SAASE,YAAYA,CAAqBC,MAAsB,EAAE;EACvE,IAAMC,WAAW,GAAGN,aAAa,CAACK,MAAM,CAACJ,KAAK,CAAC;EAC/C,IAAAM,mBAAA,GAAwBF,MAAM,CAACJ,KAAK,CAACO,KAAK,CAACF,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAAAG,oBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,mBAAA;IAA1DK,MAAM,GAAAH,oBAAA;IAAEI,KAAK,GAAAJ,oBAAA;EACpB,OAAO;IAACG,MAAM,EAANA,MAAM;IAAEC,KAAK,EAALA;EAAK,CAAC;AACxB;AAEO,IAAMC,cAAc,GAAG,oBAAoB;AAACC,OAAA,CAAAD,cAAA,GAAAA,cAAA"}