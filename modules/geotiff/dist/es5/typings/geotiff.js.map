{"version":3,"file":"geotiff.js","names":[],"sources":["../../../src/typings/geotiff.ts"],"sourcesContent":["declare type TypedArray = import('../types').TypedArray;\n\ndeclare module 'geotiff' {\n  function fromUrl(url: string, headers?: Record<string, unknown>): Promise<GeoTIFF>;\n  function fromBlob(blob: Blob): Promise<GeoTIFF>;\n  function fromFile(path: string): Promise<GeoTIFF>;\n\n  class GeoTIFF {\n    readRasters(options?: RasterOptions): Promise<TypedArray>;\n    getImage(index: number): Promise<GeoTIFFImage>;\n    parseFileDirectoryAt(offset: number): Promise<ImageFileDirectory>;\n    ifdRequests: {[key: number]: Promise<ImageFileDirectory>};\n    dataView: DataView;\n    littleEndian: boolean;\n    cache: any;\n    source: any;\n  }\n\n  interface Pool {\n    decode(fileDirectory: FileDirectory, buffer: ArrayBuffer): Promise<ArrayBuffer>;\n  }\n\n  interface RasterOptions {\n    window?: number[];\n    bbox?: number[];\n    samples?: number[];\n    interleave?: boolean;\n    pool?: Pool;\n    width?: number;\n    height?: number;\n    resampleMethod?: string;\n    enableAlpha?: boolean;\n    signal?: AbortSignal;\n  }\n\n  type RasterData = (TypedArray | TypedArray[]) & {\n    width: number;\n    height: number;\n  };\n  class GeoTIFFImage {\n    constructor(\n      fileDirectory: FileDirectory,\n      geoKeyDirectory: any,\n      dataView: DataView,\n      littleEndian: boolean,\n      cache: any,\n      source: any\n    );\n    fileDirectory: FileDirectory;\n    getBoundingBox(): number[];\n    getFileDirectory(): FileDirectory;\n    getBytesPerPixel(): number;\n    getHeight(): number;\n    getSamplesPerPixel(): number;\n    getTileHeight(): number;\n    getTileWidth(): number;\n    getWidth(): number;\n    readRasters(options?: RasterOptions): Promise<RasterData>;\n  }\n\n  interface FileDirectory {\n    ImageDescription: string;\n    SubIFDs?: number[];\n    PhotometricInterpretation?: number;\n  }\n\n  interface ImageFileDirectory {\n    fileDirectory: FileDirectory;\n    geoKeyDirectory: any;\n  }\n}\n"],"mappings":""}