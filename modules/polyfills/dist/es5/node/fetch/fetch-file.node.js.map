{"version":3,"file":"fetch-file.node.js","names":["_fs","_interopRequireDefault","require","_response","_headers2","isRequestURL","url","startsWith","fetchFileNode","_x","_x2","_fetchFileNode","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","options","noqueryUrl","body","status","statusText","headers","_status","_statusText","_headers","wrap","_callee$","_context","prev","next","split","Promise","resolve","reject","stream","fs","createReadStream","encoding","once","on","error","sent","getHeadersForFile","abrupt","Response","t0","message","stop","stats","statSync","size","endsWith","slice","Headers"],"sources":["../../../../src/node/fetch/fetch-file.node.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport fs from 'fs'; // `fs` will be empty object in browsers (see package.json \"browser\" field).\nimport {Response} from './response.node';\nimport {Headers} from './headers.node';\n\nexport function isRequestURL(url: string): boolean {\n  return url.startsWith('http:') || url.startsWith('https:');\n}\n\nexport async function fetchFileNode(url: string, options): Promise<Response> {\n  const noqueryUrl = url.split('?')[0];\n\n  try {\n    // Now open the stream\n    const body = await new Promise((resolve, reject) => {\n      // @ts-ignore\n      const stream = fs.createReadStream(noqueryUrl, {encoding: null});\n      stream.once('readable', () => resolve(stream));\n      stream.on('error', (error) => reject(error));\n    });\n\n    const status = 200;\n    const statusText = 'OK';\n    const headers = getHeadersForFile(noqueryUrl);\n    return new Response(body, {headers, status, statusText, url});\n  } catch (error) {\n    const status = 400;\n    const statusText = (error as Error).message;\n    const headers = {};\n    return new Response((error as Error).message, {headers, status, statusText, url});\n  }\n}\n\nfunction getHeadersForFile(noqueryUrl: string): Headers {\n  const headers = {};\n\n  // Fix up content length if we can for best progress experience\n  if (!headers['content-length']) {\n    const stats = fs.statSync(noqueryUrl);\n    headers['content-length'] = stats.size;\n  }\n\n  // Automatically decompress gzipped files with .gz extension\n  if (noqueryUrl.endsWith('.gz')) {\n    noqueryUrl = noqueryUrl.slice(0, -3);\n    headers['content-encoding'] = 'gzip';\n  }\n\n  return new Headers(headers);\n}\n"],"mappings":";;;;;;;;;;AAEA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAEO,SAASG,YAAYA,CAACC,GAAW,EAAW;EACjD,OAAOA,GAAG,CAACC,UAAU,CAAC,OAAO,CAAC,IAAID,GAAG,CAACC,UAAU,CAAC,QAAQ,CAAC;AAC5D;AAAC,SAEqBC,aAAaA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,eAAA;EAAAA,cAAA,OAAAG,kBAAA,CAAAC,OAAA,EAAAC,YAAA,CAAAD,OAAA,CAAAE,IAAA,CAA5B,SAAAC,QAA6BZ,GAAW,EAAEa,OAAO;IAAA,IAAAC,UAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,QAAA;IAAA,OAAAX,YAAA,CAAAD,OAAA,CAAAa,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAChDZ,UAAU,GAAGd,GAAG,CAAC2B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAAAH,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAIf,IAAIE,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;YAElD,IAAMC,MAAM,GAAGC,WAAE,CAACC,gBAAgB,CAACnB,UAAU,EAAE;cAACoB,QAAQ,EAAE;YAAI,CAAC,CAAC;YAChEH,MAAM,CAACI,IAAI,CAAC,UAAU,EAAE;cAAA,OAAMN,OAAO,CAACE,MAAM,CAAC;YAAA,EAAC;YAC9CA,MAAM,CAACK,EAAE,CAAC,OAAO,EAAE,UAACC,KAAK;cAAA,OAAKP,MAAM,CAACO,KAAK,CAAC;YAAA,EAAC;UAC9C,CAAC,CAAC;QAAA;UALItB,IAAI,GAAAS,QAAA,CAAAc,IAAA;UAOJtB,MAAM,GAAG,GAAG;UACZC,UAAU,GAAG,IAAI;UACjBC,OAAO,GAAGqB,iBAAiB,CAACzB,UAAU,CAAC;UAAA,OAAAU,QAAA,CAAAgB,MAAA,WACtC,IAAIC,kBAAQ,CAAC1B,IAAI,EAAE;YAACG,OAAO,EAAPA,OAAO;YAAEF,MAAM,EAANA,MAAM;YAAEC,UAAU,EAAVA,UAAU;YAAEjB,GAAG,EAAHA;UAAG,CAAC,CAAC;QAAA;UAAAwB,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAkB,EAAA,GAAAlB,QAAA;UAEvDR,OAAM,GAAG,GAAG;UACZC,WAAU,GAAGO,QAAA,CAAAkB,EAAA,CAAiBC,OAAO;UACrCzB,QAAO,GAAG,CAAC,CAAC;UAAA,OAAAM,QAAA,CAAAgB,MAAA,WACX,IAAIC,kBAAQ,CAACjB,QAAA,CAAAkB,EAAA,CAAiBC,OAAO,EAAE;YAACzB,OAAO,EAAPA,QAAO;YAAEF,MAAM,EAANA,OAAM;YAAEC,UAAU,EAAVA,WAAU;YAAEjB,GAAG,EAAHA;UAAG,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAwB,QAAA,CAAAoB,IAAA;MAAA;IAAA,GAAAhC,OAAA;EAAA,CAEpF;EAAA,OAAAP,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASgC,iBAAiBA,CAACzB,UAAkB,EAAW;EACtD,IAAMI,OAAO,GAAG,CAAC,CAAC;EAGlB,IAAI,CAACA,OAAO,CAAC,gBAAgB,CAAC,EAAE;IAC9B,IAAM2B,KAAK,GAAGb,WAAE,CAACc,QAAQ,CAAChC,UAAU,CAAC;IACrCI,OAAO,CAAC,gBAAgB,CAAC,GAAG2B,KAAK,CAACE,IAAI;EACxC;EAGA,IAAIjC,UAAU,CAACkC,QAAQ,CAAC,KAAK,CAAC,EAAE;IAC9BlC,UAAU,GAAGA,UAAU,CAACmC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC/B,OAAO,CAAC,kBAAkB,CAAC,GAAG,MAAM;EACtC;EAEA,OAAO,IAAIgC,iBAAO,CAAChC,OAAO,CAAC;AAC7B"}