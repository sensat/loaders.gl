{"version":3,"file":"encode-image.node.js","names":["_savePixels","_interopRequireDefault","require","_ndarray","_toArrayBuffer","encodeImageToStreamNode","image","options","type","replace","pixels","ndarray","data","width","height","savePixels","encodeImageNode","imageStream","Promise","resolve","buffers","on","buffer","push","Buffer","concat","bufferToArrayBuffer"],"sources":["../../../../src/node/images/encode-image.node.ts"],"sourcesContent":["// Use stackgl modules for DOM-less reading and writing of images\n\nimport savePixels from 'save-pixels';\nimport ndarray from 'ndarray';\nimport {bufferToArrayBuffer} from '../buffer/to-array-buffer.node';\n\n/**\n * Returns data bytes representing a compressed image in PNG or JPG format,\n * This data can be saved using file system (f) methods or\n * used in a request.\n * @param image to save\n * @param options\n * @param options.type='png' - png, jpg or image/png, image/jpg are valid\n * @param options.dataURI - Whether to include a data URI header\n * @return {*} bytes\n */\nexport function encodeImageToStreamNode(\n  image: {data: any; width: number; height: number},\n  options: {type?: string; dataURI?: string}\n) {\n  // Support MIME type strings\n  const type = options.type ? options.type.replace('image/', '') : 'jpeg';\n  const pixels = ndarray(image.data, [image.width, image.height, 4], [4, image.width * 4, 1], 0);\n\n  // Note: savePixels returns a stream\n  return savePixels(pixels, type, options);\n}\n\nexport function encodeImageNode(image, options) {\n  const imageStream = encodeImageToStreamNode(image, options);\n\n  return new Promise((resolve) => {\n    const buffers: any[] = [];\n    imageStream.on('data', (buffer) => buffers.push(buffer));\n    // TODO - convert to arraybuffer?\n    imageStream.on('end', () => {\n      const buffer = Buffer.concat(buffers);\n      resolve(bufferToArrayBuffer(buffer));\n    });\n  });\n}\n"],"mappings":";;;;;;;;AAEA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAYO,SAASG,uBAAuBA,CACrCC,KAAiD,EACjDC,OAA0C,EAC1C;EAEA,IAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,MAAM;EACvE,IAAMC,MAAM,GAAG,IAAAC,gBAAO,EAACL,KAAK,CAACM,IAAI,EAAE,CAACN,KAAK,CAACO,KAAK,EAAEP,KAAK,CAACQ,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAER,KAAK,CAACO,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAG9F,OAAO,IAAAE,mBAAU,EAACL,MAAM,EAAEF,IAAI,EAAED,OAAO,CAAC;AAC1C;AAEO,SAASS,eAAeA,CAACV,KAAK,EAAEC,OAAO,EAAE;EAC9C,IAAMU,WAAW,GAAGZ,uBAAuB,CAACC,KAAK,EAAEC,OAAO,CAAC;EAE3D,OAAO,IAAIW,OAAO,CAAC,UAACC,OAAO,EAAK;IAC9B,IAAMC,OAAc,GAAG,EAAE;IACzBH,WAAW,CAACI,EAAE,CAAC,MAAM,EAAE,UAACC,MAAM;MAAA,OAAKF,OAAO,CAACG,IAAI,CAACD,MAAM,CAAC;IAAA,EAAC;IAExDL,WAAW,CAACI,EAAE,CAAC,KAAK,EAAE,YAAM;MAC1B,IAAMC,MAAM,GAAGE,MAAM,CAACC,MAAM,CAACL,OAAO,CAAC;MACrCD,OAAO,CAAC,IAAAO,kCAAmB,EAACJ,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"}