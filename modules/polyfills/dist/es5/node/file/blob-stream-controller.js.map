{"version":3,"file":"blob-stream-controller.js","names":["BlobStreamController","chunks","_classCallCheck2","default","_defineProperty2","_createClass2","key","value","start","controller","work","_work","_asyncToGenerator2","_regenerator","mark","_callee","next","wrap","_callee$","_context","prev","isWorking","isCancelled","desiredSize","t0","error","abrupt","done","enqueue","close","stop","_x","apply","arguments","pull","cancel","exports"],"sources":["../../../../src/node/file/blob-stream-controller.ts"],"sourcesContent":["/**\n * Forked from @gozala's web-blob under MIT license\n * @see https://github.com/Gozala/web-blob\n */\nexport class BlobStreamController {\n  private chunks: Iterator<Uint8Array>;\n  private isWorking: boolean = false;\n  private isCancelled: boolean = false;\n\n  /**\n   * @param chunks\n   */\n  constructor(chunks: Iterator<Uint8Array>) {\n    this.chunks = chunks;\n  }\n\n  /**\n   * @param controller\n   */\n  start(controller: ReadableStreamDefaultController) {\n    this.work(controller); // eslint-disable-line @typescript-eslint/no-floating-promises\n  }\n\n  /**\n   *\n   * @param controller\n   */\n  async work(controller: ReadableStreamDefaultController) {\n    const {chunks} = this;\n\n    this.isWorking = true;\n    while (!this.isCancelled && (controller.desiredSize || 0) > 0) {\n      let next: {done?: boolean; value?: Uint8Array} | undefined;\n      try {\n        next = chunks.next();\n      } catch (error) {\n        controller.error(error);\n        break;\n      }\n\n      if (next) {\n        if (!next.done && !this.isCancelled) {\n          controller.enqueue(next.value);\n        } else {\n          controller.close();\n        }\n      }\n    }\n\n    this.isWorking = false;\n  }\n\n  /**\n   *\n   * @param {ReadableStreamDefaultController} controller\n   */\n  pull(controller) {\n    if (!this.isWorking) {\n      this.work(controller); // eslint-disable-line @typescript-eslint/no-floating-promises\n    }\n  }\n  cancel() {\n    this.isCancelled = true;\n  }\n}\n"],"mappings":";;;;;;;;;;;;IAIaA,oBAAoB;EAQ/B,SAAAA,qBAAYC,MAA4B,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAH,oBAAA;IAAA,IAAAI,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA,qBANb,KAAK;IAAA,IAAAC,gBAAA,CAAAD,OAAA,uBACH,KAAK;IAMlC,IAAI,CAACF,MAAM,GAAGA,MAAM;EACtB;EAAC,IAAAI,aAAA,CAAAF,OAAA,EAAAH,oBAAA;IAAAM,GAAA;IAAAC,KAAA,EAKD,SAAAC,MAAMC,UAA2C,EAAE;MACjD,IAAI,CAACC,IAAI,CAACD,UAAU,CAAC;IACvB;EAAC;IAAAH,GAAA;IAAAC,KAAA;MAAA,IAAAI,KAAA,OAAAC,kBAAA,CAAAT,OAAA,EAAAU,YAAA,CAAAV,OAAA,CAAAW,IAAA,CAMD,SAAAC,QAAWN,UAA2C;QAAA,IAAAR,MAAA,EAAAe,IAAA;QAAA,OAAAH,YAAA,CAAAV,OAAA,CAAAc,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAH,IAAA;YAAA;cAC7Cf,MAAM,GAAI,IAAI,CAAdA,MAAM;cAEb,IAAI,CAACoB,SAAS,GAAG,IAAI;YAAC;cAAA,MACf,CAAC,IAAI,CAACC,WAAW,IAAI,CAACb,UAAU,CAACc,WAAW,IAAI,CAAC,IAAI,CAAC;gBAAAJ,QAAA,CAAAH,IAAA;gBAAA;cAAA;cACvDA,IAAsD;cAAAG,QAAA,CAAAC,IAAA;cAExDJ,IAAI,GAAGf,MAAM,CAACe,IAAI,CAAC,CAAC;cAACG,QAAA,CAAAH,IAAA;cAAA;YAAA;cAAAG,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;cAErBV,UAAU,CAACgB,KAAK,CAAAN,QAAA,CAAAK,EAAM,CAAC;cAAC,OAAAL,QAAA,CAAAO,MAAA;YAAA;cAI1B,IAAIV,IAAI,EAAE;gBACR,IAAI,CAACA,IAAI,CAACW,IAAI,IAAI,CAAC,IAAI,CAACL,WAAW,EAAE;kBACnCb,UAAU,CAACmB,OAAO,CAACZ,IAAI,CAACT,KAAK,CAAC;gBAChC,CAAC,MAAM;kBACLE,UAAU,CAACoB,KAAK,CAAC,CAAC;gBACpB;cACF;cAACV,QAAA,CAAAH,IAAA;cAAA;YAAA;cAGH,IAAI,CAACK,SAAS,GAAG,KAAK;YAAC;YAAA;cAAA,OAAAF,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA,CACxB;MAAA,SAAAL,KAAAqB,EAAA;QAAA,OAAApB,KAAA,CAAAqB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAvB,IAAA;IAAA;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAMD,SAAA2B,KAAKzB,UAAU,EAAE;MACf,IAAI,CAAC,IAAI,CAACY,SAAS,EAAE;QACnB,IAAI,CAACX,IAAI,CAACD,UAAU,CAAC;MACvB;IACF;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAA4B,OAAA,EAAS;MACP,IAAI,CAACb,WAAW,GAAG,IAAI;IACzB;EAAC;EAAA,OAAAtB,oBAAA;AAAA;AAAAoC,OAAA,CAAApC,oBAAA,GAAAA,oBAAA"}