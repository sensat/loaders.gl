{"version":3,"file":"fetch.node.js","names":["http","https","Response","Headers","decodeDataUri","fetchFileNode","isDataURL","url","startsWith","isRequestURL","fetchNode","options","arrayBuffer","mimeType","response","headers","syntheticResponseHeaders","originalUrl","endsWith","slice","body","createHTTPRequestReadStream","getHeaders","status","statusText","getStatus","followRedirect","undefined","has","redirectUrl","generateRedirectUrl","get","error","String","Promise","resolve","reject","requestOptions","getRequestOptions","req","request","res","on","end","location","URL","pathname","href","originalHeaders","key","Object","keys","toLowerCase","urlObject","hostname","path","method","fetch","port","httpResponse","statusCode","statusMessage","additionalHeaders","arguments","length","httpHeaders","header","contentLength","getContentLength","Number","isFinite","assign"],"sources":["../../../../src/node/fetch/fetch.node.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport http from 'http';\nimport https from 'https';\nimport {Response} from './response.node';\nimport {Headers} from './headers.node';\nimport {decodeDataUri} from './utils/decode-data-uri.node';\n\nimport {fetchFileNode} from './fetch-file.node';\n\nconst isDataURL = (url: string): boolean => url.startsWith('data:');\nconst isRequestURL = (url: string): boolean => url.startsWith('http:') || url.startsWith('https:');\n\n/**\n * Emulation of Browser fetch for Node.js\n * @param url\n * @param options\n */\n// eslint-disable-next-line complexity\nexport async function fetchNode(url: string, options): Promise<Response> {\n  try {\n    // Handle file streams in node\n    if (!isRequestURL(url) && !isDataURL(url)) {\n      return await fetchFileNode(url, options);\n    }\n\n    // Handle data urls in node, to match `fetch``\n    // Note - this loses the MIME type, data URIs are handled directly in fetch\n    if (isDataURL(url)) {\n      const {arrayBuffer, mimeType} = decodeDataUri(url);\n      const response = new Response(arrayBuffer, {\n        headers: {'content-type': mimeType},\n        url\n      });\n      return response;\n    }\n\n    // Automatically decompress gzipped files with .gz extension\n    const syntheticResponseHeaders = {};\n    const originalUrl = url;\n    if (url.endsWith('.gz')) {\n      url = url.slice(0, -3);\n      syntheticResponseHeaders['content-encoding'] = 'gzip';\n    }\n\n    // Need to create the stream in advance since Response constructor needs to be sync\n    const body = await createHTTPRequestReadStream(originalUrl, options);\n    const headers = getHeaders(url, body, syntheticResponseHeaders);\n    const {status, statusText} = getStatus(body);\n\n    const followRedirect =\n      !options || options.followRedirect || options.followRedirect === undefined;\n\n    if (status >= 300 && status < 400 && headers.has('location') && followRedirect) {\n      const redirectUrl = generateRedirectUrl(url, headers.get('location'));\n\n      // Redirect\n      return await fetchNode(redirectUrl, options);\n    }\n    return new Response(body, {headers, status, statusText, url});\n  } catch (error) {\n    // TODO - what error code to use here?\n    return new Response(null, {status: 400, statusText: String(error), url});\n  }\n}\n\n/** Returns a promise that resolves to a readable stream */\nexport async function createHTTPRequestReadStream(\n  url: string,\n  options\n): Promise<http.IncomingMessage> {\n  // HANDLE HTTP/HTTPS REQUESTS IN NODE\n  // TODO: THIS IS BAD SINCE WE RETURN A PROMISE INSTEAD OF A STREAM\n  return await new Promise((resolve, reject) => {\n    const requestOptions = getRequestOptions(url, options);\n    const req = url.startsWith('https:')\n      ? https.request(requestOptions, (res) => resolve(res))\n      : http.request(requestOptions, (res) => resolve(res));\n    req.on('error', (error) => reject(error));\n    req.end();\n  });\n}\n\n/**\n * Generate redirect url from location without origin and protocol.\n * @param originalUrl\n * @param redirectUrl\n */\nfunction generateRedirectUrl(originalUrl: string, location: string): string {\n  if (location.startsWith('http')) {\n    return location;\n  }\n  // If url doesn't have origin and protocol just extend current url origin with location.\n  const url = new URL(originalUrl);\n  url.pathname = location;\n\n  return url.href;\n}\n\n// HELPER FUNCTIONS\n\nfunction getRequestOptions(url: string, options?: {fetch?: typeof fetch; headers?}) {\n  // Ensure header keys are lower case so that we can merge without duplicates\n  const originalHeaders = options?.headers || {};\n  const headers = {};\n  for (const key of Object.keys(originalHeaders)) {\n    headers[key.toLowerCase()] = originalHeaders[key];\n  }\n\n  // Add default accept-encoding to headers\n  headers['accept-encoding'] = headers['accept-encoding'] || 'gzip,br,deflate';\n\n  const urlObject = new URL(url);\n  return {\n    hostname: urlObject.hostname,\n    path: urlObject.pathname,\n    method: 'GET',\n    // Add options and user provided 'options.fetch' overrides if available\n    ...options,\n    ...options?.fetch,\n    // Override with updated headers with accepted encodings:\n    headers,\n    port: urlObject.port\n  };\n}\n\nfunction getStatus(httpResponse: http.IncomingMessage): {status: number; statusText: string} {\n  if (httpResponse.statusCode) {\n    return {status: httpResponse.statusCode, statusText: httpResponse.statusMessage || 'NA'};\n  }\n  return {status: 200, statusText: 'OK'};\n}\n\nfunction getHeaders(url, httpResponse, additionalHeaders = {}) {\n  const headers = {};\n\n  if (httpResponse && httpResponse.headers) {\n    const httpHeaders = httpResponse.headers;\n    for (const key in httpHeaders) {\n      const header = httpHeaders[key];\n      headers[key.toLowerCase()] = String(header);\n    }\n  }\n\n  // Fix up content length if we can for best progress experience\n  if (!headers['content-length']) {\n    const contentLength = getContentLength(url);\n    if (Number.isFinite(contentLength)) {\n      headers['content-length'] = contentLength;\n    }\n  }\n\n  Object.assign(headers, additionalHeaders);\n\n  return new Headers(headers);\n}\n\n/** Needs to be read from actual headers */\nfunction getContentLength(url: string): number | null {\n  // TODO - remove media type etc\n  return isDataURL(url) ? url.length - 'data:'.length : null;\n}\n"],"mappings":"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"}