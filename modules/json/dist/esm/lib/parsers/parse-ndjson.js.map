{"version":3,"file":"parse-ndjson.js","names":["makeTableFromData","parseNDJSONSync","ndjsonText","lines","trim","split","parsedLines","map","line","counter","JSON","parse","error","Error","concat"],"sources":["../../../../src/lib/parsers/parse-ndjson.ts"],"sourcesContent":["import type {ArrayRowTable, ObjectRowTable} from '@loaders.gl/schema';\nimport {makeTableFromData} from '@loaders.gl/schema';\n\nexport function parseNDJSONSync(ndjsonText: string): ArrayRowTable | ObjectRowTable {\n  const lines = ndjsonText.trim().split('\\n');\n  const parsedLines = lines.map((line, counter) => {\n    try {\n      return JSON.parse(line);\n    } catch (error) {\n      throw new Error(`NDJSONLoader: failed to parse JSON on line ${counter + 1}`);\n    }\n  });\n\n  return makeTableFromData(parsedLines);\n}\n"],"mappings":"AACA,SAAQA,iBAAiB,QAAO,oBAAoB;AAEpD,OAAO,SAASC,eAAeA,CAACC,UAAkB,EAAkC;EAClF,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;EAC3C,MAAMC,WAAW,GAAGH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAK;IAC/C,IAAI;MACF,OAAOC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,+CAAAC,MAAA,CAA+CL,OAAO,GAAG,CAAC,CAAE,CAAC;IAC9E;EACF,CAAC,CAAC;EAEF,OAAOT,iBAAiB,CAACM,WAAW,CAAC;AACvC"}