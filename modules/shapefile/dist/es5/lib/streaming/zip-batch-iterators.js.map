{"version":3,"file":"zip-batch-iterators.js","names":["zipBatchIterators","_x","_x2","_zipBatchIterators","apply","arguments","_wrapAsyncGenerator2","default","_regenerator","mark","_callee","iterator1","iterator2","batch1","batch2","iterator1Done","iterator2Done","_yield$_awaitAsyncGen","value","done","_yield$_awaitAsyncGen2","_value","_done","batch","wrap","_callee$","_context","prev","next","length","_awaitAsyncGenerator2","sent","extractBatch","stop","batchLength","Math","min","slice","splice"],"sources":["../../../../src/lib/streaming/zip-batch-iterators.ts"],"sourcesContent":["/**\n * Zip two iterators together\n *\n * @param iterator1\n * @param iterator2\n */\nexport async function* zipBatchIterators(\n  iterator1: AsyncIterator<any[]>,\n  iterator2: AsyncIterator<any[]>\n): AsyncGenerator<number[][], void, unknown> {\n  let batch1: number[] = [];\n  let batch2: number[] = [];\n  let iterator1Done: boolean = false;\n  let iterator2Done: boolean = false;\n\n  // TODO - one could let all iterators flow at full speed using `Promise.race`\n  // however we might end up with a big temporary buffer\n  while (!iterator1Done && !iterator2Done) {\n    if (batch1.length === 0 && !iterator1Done) {\n      const {value, done} = await iterator1.next();\n      if (done) {\n        iterator1Done = true;\n      } else {\n        batch1 = value;\n      }\n    } else if (batch2.length === 0 && !iterator2Done) {\n      const {value, done} = await iterator2.next();\n      if (done) {\n        iterator2Done = true;\n      } else {\n        batch2 = value;\n      }\n    }\n\n    const batch = extractBatch(batch1, batch2);\n    if (batch) {\n      yield batch;\n    }\n  }\n}\n\n/**\n * Extract batch of same length from two batches\n *\n * @param batch1\n * @param batch2\n * @return array | null\n */\nfunction extractBatch(batch1: number[], batch2: number[]): number[][] | null {\n  const batchLength: number = Math.min(batch1.length, batch2.length);\n  if (batchLength === 0) {\n    return null;\n  }\n\n  // Non interleaved arrays\n  const batch: number[][] = [batch1.slice(0, batchLength), batch2.slice(0, batchLength)];\n\n  // Modify the 2 batches\n  batch1.splice(0, batchLength);\n  batch2.splice(0, batchLength);\n  return batch;\n}\n"],"mappings":"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"}