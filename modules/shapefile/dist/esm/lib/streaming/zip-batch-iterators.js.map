{"version":3,"file":"zip-batch-iterators.js","names":["zipBatchIterators","iterator1","iterator2","batch1","batch2","iterator1Done","iterator2Done","length","value","done","next","batch","extractBatch","batchLength","Math","min","slice","splice"],"sources":["../../../../src/lib/streaming/zip-batch-iterators.ts"],"sourcesContent":["/**\n * Zip two iterators together\n *\n * @param iterator1\n * @param iterator2\n */\nexport async function* zipBatchIterators(\n  iterator1: AsyncIterator<any[]>,\n  iterator2: AsyncIterator<any[]>\n): AsyncGenerator<number[][], void, unknown> {\n  let batch1: number[] = [];\n  let batch2: number[] = [];\n  let iterator1Done: boolean = false;\n  let iterator2Done: boolean = false;\n\n  // TODO - one could let all iterators flow at full speed using `Promise.race`\n  // however we might end up with a big temporary buffer\n  while (!iterator1Done && !iterator2Done) {\n    if (batch1.length === 0 && !iterator1Done) {\n      const {value, done} = await iterator1.next();\n      if (done) {\n        iterator1Done = true;\n      } else {\n        batch1 = value;\n      }\n    } else if (batch2.length === 0 && !iterator2Done) {\n      const {value, done} = await iterator2.next();\n      if (done) {\n        iterator2Done = true;\n      } else {\n        batch2 = value;\n      }\n    }\n\n    const batch = extractBatch(batch1, batch2);\n    if (batch) {\n      yield batch;\n    }\n  }\n}\n\n/**\n * Extract batch of same length from two batches\n *\n * @param batch1\n * @param batch2\n * @return array | null\n */\nfunction extractBatch(batch1: number[], batch2: number[]): number[][] | null {\n  const batchLength: number = Math.min(batch1.length, batch2.length);\n  if (batchLength === 0) {\n    return null;\n  }\n\n  // Non interleaved arrays\n  const batch: number[][] = [batch1.slice(0, batchLength), batch2.slice(0, batchLength)];\n\n  // Modify the 2 batches\n  batch1.splice(0, batchLength);\n  batch2.splice(0, batchLength);\n  return batch;\n}\n"],"mappings":"AAMA,OAAO,gBAAgBA,iBAAiBA,CACtCC,SAA+B,EAC/BC,SAA+B,EACY;EAC3C,IAAIC,MAAgB,GAAG,EAAE;EACzB,IAAIC,MAAgB,GAAG,EAAE;EACzB,IAAIC,aAAsB,GAAG,KAAK;EAClC,IAAIC,aAAsB,GAAG,KAAK;EAIlC,OAAO,CAACD,aAAa,IAAI,CAACC,aAAa,EAAE;IACvC,IAAIH,MAAM,CAACI,MAAM,KAAK,CAAC,IAAI,CAACF,aAAa,EAAE;MACzC,MAAM;QAACG,KAAK;QAAEC;MAAI,CAAC,GAAG,MAAMR,SAAS,CAACS,IAAI,CAAC,CAAC;MAC5C,IAAID,IAAI,EAAE;QACRJ,aAAa,GAAG,IAAI;MACtB,CAAC,MAAM;QACLF,MAAM,GAAGK,KAAK;MAChB;IACF,CAAC,MAAM,IAAIJ,MAAM,CAACG,MAAM,KAAK,CAAC,IAAI,CAACD,aAAa,EAAE;MAChD,MAAM;QAACE,KAAK;QAAEC;MAAI,CAAC,GAAG,MAAMP,SAAS,CAACQ,IAAI,CAAC,CAAC;MAC5C,IAAID,IAAI,EAAE;QACRH,aAAa,GAAG,IAAI;MACtB,CAAC,MAAM;QACLF,MAAM,GAAGI,KAAK;MAChB;IACF;IAEA,MAAMG,KAAK,GAAGC,YAAY,CAACT,MAAM,EAAEC,MAAM,CAAC;IAC1C,IAAIO,KAAK,EAAE;MACT,MAAMA,KAAK;IACb;EACF;AACF;AASA,SAASC,YAAYA,CAACT,MAAgB,EAAEC,MAAgB,EAAqB;EAC3E,MAAMS,WAAmB,GAAGC,IAAI,CAACC,GAAG,CAACZ,MAAM,CAACI,MAAM,EAAEH,MAAM,CAACG,MAAM,CAAC;EAClE,IAAIM,WAAW,KAAK,CAAC,EAAE;IACrB,OAAO,IAAI;EACb;EAGA,MAAMF,KAAiB,GAAG,CAACR,MAAM,CAACa,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC,EAAET,MAAM,CAACY,KAAK,CAAC,CAAC,EAAEH,WAAW,CAAC,CAAC;EAGtFV,MAAM,CAACc,MAAM,CAAC,CAAC,EAAEJ,WAAW,CAAC;EAC7BT,MAAM,CAACa,MAAM,CAAC,CAAC,EAAEJ,WAAW,CAAC;EAC7B,OAAOF,KAAK;AACd"}